Postfix를 사용하여 이메일을 전송합니다.
🚀 Mini Area 서버 시작!
🔒 HTTPS 서버가 포트 7000에서 실행 중입니다. (WebRTC 지원)
LAN 접속: https://192.168.200.106:7000
WebSocket 접속: wss://192.168.200.106:7000
✅ PostgreSQL 데이터베이스 연결 성공
📊 데이터베이스에서 입실 중인 사용자 1명 로드
📊 사용자 입실 상태 복원: test2 → 맵 2
✅ 데이터베이스 테이블 동기화 완료
WebSocket 초기 헤더: {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Credentials': 'true'
}
WebSocket 요청 정보: {
  method: 'GET',
  url: '/socket.io/?EIO=4&transport=websocket',
  headers: {
    host: '192.168.200.106:7000',
    connection: 'Upgrade',
    pragma: 'no-cache',
    'cache-control': 'no-cache',
    'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36',
    upgrade: 'websocket',
    origin: 'https://192.168.200.106:5173',
    'sec-websocket-version': '13',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
    'sec-websocket-key': 'LwOLOogeyfwkhfTc/+lr2A==',
    'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
  },
  secure: undefined
}
새로운 WebSocket 연결 (화상통신 준비): EZ0c2YwgDAY0Yl0IAAAB
연결 정보: {
  id: 'EZ0c2YwgDAY0Yl0IAAAB',
  ip: '192.168.200.102',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36',
  origin: 'https://192.168.200.106:5173',
  secure: true
}
새로운 mini area WebSocket 연결: EZ0c2YwgDAY0Yl0IAAAB IP: 192.168.200.102
새로운 WebSocket 연결: EZ0c2YwgDAY0Yl0IAAAB
✅ 인증 성공: test3 (7)
✨ [온라인] 새로운 사용자 또는 대기실 입장: test3 (ID: 7)
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': undefined,
  '위치': undefined,
  '마지막활동': '2025-09-16T09:00:31.801Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 1명, 오프라인: 1명)
📊 [오프라인] 입실 중인 사용자: test2 → 맵 2 (new world) (undefined)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
🔄 서버 상태 업데이트: { totalUsers: 1, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
WebSocket 인증 성공: 7 test3
🔄 서버 상태 업데이트: { totalUsers: 1, lobbyUsers: 1, mapsCount: 1 }
📤 서버 상태 전송 to test3 (7)
🔌 [오프라인] mini area WebSocket 연결 해제: {
  socketId: 'EZ0c2YwgDAY0Yl0IAAAB',
  userId: 7,
  username: 'test3',
  mapId: undefined,
  privateAreaId: undefined,
  timestamp: '9/16/2025, 6:00:32 PM'
}
📊 [오프라인] 사용자 상태 변경: test3 (ID: 7)
   입실 상태: 맵 wait에 입실 중 → 오프라인 (방 정보 유지)
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': undefined,
  '위치': undefined,
  '마지막활동': '2025-09-16T09:00:32.479Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 0명, 오프라인: 2명)
📊 [오프라인] 입실 중인 사용자: test2 → 맵 2 (new world) (undefined)
📊 [오프라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
🧹 [시스템] 소켓 정리 완료: test3 (7)
📊 [시스템] 현재 사용자 상태:
   온라인: 0명, 오프라인: 2명
   활성 소켓: 0개
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 0명, 오프라인: 2명)
📊 [오프라인] 입실 중인 사용자: test2 → 맵 2 (new world) (undefined)
📊 [오프라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
🔄 서버 상태 업데이트: { totalUsers: 0, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
WebSocket 연결 해제: EZ0c2YwgDAY0Yl0IAAAB
2025-09-16T09:00:33.681Z - OPTIONS /api/auth/user/me from 192.168.200.102
2025-09-16T09:00:33.689Z - OPTIONS /api/auth/user/me from 192.168.200.102
2025-09-16T09:00:33.689Z - GET /api/auth/user/me from 192.168.200.102
👤 현재 사용자 정보 조회: { userId: 7, username: 'test3' }
2025-09-16T09:00:33.703Z - GET /api/auth/user/me from 192.168.200.102
👤 현재 사용자 정보 조회: { userId: 7, username: 'test3' }
2025-09-16T09:00:33.741Z - OPTIONS /api/maps from 192.168.200.102
2025-09-16T09:00:33.742Z - OPTIONS /api/maps from 192.168.200.102
2025-09-16T09:00:33.761Z - OPTIONS /api/characters from 192.168.200.102
2025-09-16T09:00:33.762Z - OPTIONS /api/maps from 192.168.200.102
2025-09-16T09:00:33.773Z - OPTIONS /api/characters from 192.168.200.102
2025-09-16T09:00:33.787Z - GET /api/characters from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
2025-09-16T09:00:33.789Z - GET /api/maps from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
Auth 미들웨어 - 인증 성공, 사용자: test3
2025-09-16T09:00:33.814Z - GET /api/characters from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
WebSocket 초기 헤더: {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Credentials': 'true'
}
WebSocket 요청 정보: {
  method: 'GET',
  url: '/socket.io/?EIO=4&transport=websocket',
  headers: {
    host: '192.168.200.106:7000',
    connection: 'Upgrade',
    pragma: 'no-cache',
    'cache-control': 'no-cache',
    'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36',
    upgrade: 'websocket',
    origin: 'https://192.168.200.106:5173',
    'sec-websocket-version': '13',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
    'sec-websocket-key': 'OfuYhqyTAQKMpnemPSJ0kA==',
    'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
  },
  secure: undefined
}
Auth 미들웨어 - 인증 성공, 사용자: test3
2025-09-16T09:00:33.823Z - GET /api/maps from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
새로운 WebSocket 연결 (화상통신 준비): UtWf72PQIC5Qb2ssAAAD
연결 정보: {
  id: 'UtWf72PQIC5Qb2ssAAAD',
  ip: '192.168.200.102',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36',
  origin: 'https://192.168.200.106:5173',
  secure: true
}
새로운 mini area WebSocket 연결: UtWf72PQIC5Qb2ssAAAD IP: 192.168.200.102
새로운 WebSocket 연결: UtWf72PQIC5Qb2ssAAAD
2025-09-16T09:00:33.849Z - GET /api/maps from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
WebSocket 초기 헤더: {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Credentials': 'true'
}
WebSocket 요청 정보: {
  method: 'GET',
  url: '/socket.io/?EIO=4&transport=websocket',
  headers: {
    host: '192.168.200.106:7000',
    connection: 'Upgrade',
    pragma: 'no-cache',
    'cache-control': 'no-cache',
    'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36',
    upgrade: 'websocket',
    origin: 'https://192.168.200.106:5173',
    'sec-websocket-version': '13',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
    'sec-websocket-key': 'exGjTQOr9Ch81A4IgP3tnQ==',
    'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
  },
  secure: undefined
}
Auth 미들웨어 - 인증 성공, 사용자: test3
새로운 WebSocket 연결 (화상통신 준비): EqMwyH1fjbHKp8lfAAAF
연결 정보: {
  id: 'EqMwyH1fjbHKp8lfAAAF',
  ip: '192.168.200.102',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36',
  origin: 'https://192.168.200.106:5173',
  secure: true
}
새로운 mini area WebSocket 연결: EqMwyH1fjbHKp8lfAAAF IP: 192.168.200.102
새로운 WebSocket 연결: EqMwyH1fjbHKp8lfAAAF
2025-09-16T09:00:33.878Z - GET /api/maps from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
2025-09-16T09:00:33.907Z - OPTIONS /api/user/logged-in-users from 192.168.200.102
✅ 인증 성공: test3 (7)
🔄 [온라인] 사용자 이전 입실 상태 복원: test3 (ID: 7) → 맵 wait
   📍 이전 위치: (N/A, N/A), 방향: N/A
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': undefined,
  '위치': undefined,
  '마지막활동': '2025-09-16T09:00:33.909Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 1명, 오프라인: 1명)
📊 [오프라인] 입실 중인 사용자: test2 → 맵 2 (new world) (undefined)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
🔄 서버 상태 업데이트: { totalUsers: 1, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
WebSocket 인증 성공: 7 test3
✅ 인증 성공: test3 (7)
🔄 [온라인] 사용자 이전 입실 상태 복원: test3 (ID: 7) → 맵 wait
   📍 이전 위치: (N/A, N/A), 방향: N/A
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': undefined,
  '위치': undefined,
  '마지막활동': '2025-09-16T09:00:33.914Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 1명, 오프라인: 1명)
📊 [오프라인] 입실 중인 사용자: test2 → 맵 2 (new world) (undefined)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
🔄 서버 상태 업데이트: { totalUsers: 1, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
WebSocket 인증 성공: 7 test3
2025-09-16T09:00:33.921Z - GET /api/user/logged-in-users from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🔄 서버 상태 업데이트: { totalUsers: 1, lobbyUsers: 1, mapsCount: 1 }
📤 서버 상태 전송 to test3 (7)
2025-09-16T09:00:33.939Z - GET /api/user/logged-in-users from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
2025-09-16T09:00:33.952Z - GET /api/user/logged-in-users from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
2025-09-16T09:00:33.989Z - GET /api/user/logged-in-users from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
❌ 자동 재입장 실패: 맵 wait가 존재하지 않음
❌ 자동 재입장 실패: 맵 wait가 존재하지 않음
2025-09-16T09:00:47.630Z - OPTIONS /api/auth/user/me from 192.168.200.108
2025-09-16T09:00:47.646Z - OPTIONS /api/auth/user/me from 192.168.200.108
2025-09-16T09:00:47.647Z - GET /api/auth/user/me from 192.168.200.108
👤 현재 사용자 정보 조회: { userId: 4, username: 'test2' }
2025-09-16T09:00:47.669Z - GET /api/auth/user/me from 192.168.200.108
👤 현재 사용자 정보 조회: { userId: 4, username: 'test2' }
2025-09-16T09:00:47.768Z - OPTIONS /api/maps from 192.168.200.108
2025-09-16T09:00:47.769Z - OPTIONS /api/characters from 192.168.200.108
2025-09-16T09:00:47.808Z - GET /api/maps from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
2025-09-16T09:00:47.827Z - GET /api/characters from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
WebSocket 초기 헤더: {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Credentials': 'true'
}
WebSocket 요청 정보: {
  method: 'GET',
  url: '/socket.io/?EIO=4&transport=websocket',
  headers: {
    host: '192.168.200.106:7000',
    connection: 'Upgrade',
    pragma: 'no-cache',
    'cache-control': 'no-cache',
    'user-agent': 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36',
    upgrade: 'websocket',
    origin: 'https://192.168.200.106:5173',
    'sec-websocket-version': '13',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
    'sec-websocket-key': 'kWxjL0YKTcy5Md2+Z6pFcQ==',
    'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
  },
  secure: undefined
}
새로운 WebSocket 연결 (화상통신 준비): k1TeEmzJTAllUTDGAAAH
연결 정보: {
  id: 'k1TeEmzJTAllUTDGAAAH',
  ip: '192.168.200.108',
  userAgent: 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36',
  origin: 'https://192.168.200.106:5173',
  secure: true
}
새로운 mini area WebSocket 연결: k1TeEmzJTAllUTDGAAAH IP: 192.168.200.108
새로운 WebSocket 연결: k1TeEmzJTAllUTDGAAAH
WebSocket 인증 성공: 4 test2
✅ 인증 성공: test2 (4)
🔄 [온라인] 사용자 이전 입실 상태 복원: test2 (ID: 4) → 맵 2
   📍 이전 위치: (400, 300), 방향: down
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: undefined,
  '캐릭터': undefined,
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:47.894Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (undefined)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 2, mapsCount: 1 }
📡 서버 상태 브로드캐스트
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 2, mapsCount: 1 }
📤 서버 상태 전송 to test2 (4)
2025-09-16T09:00:47.935Z - OPTIONS /api/user/logged-in-users from 192.168.200.108
2025-09-16T09:00:47.943Z - GET /api/user/logged-in-users from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🔄 자동 재입장 시도: test2 → 맵 2
✅ test2 활성 캐릭터 로드 완료: {
  characterId: 3,
  characterName: 'test2',
  hasImages: true,
  hasAppearance: true
}
🏠 test2 맵 입장 시작: {
  mapId: 2,
  characterId: 3,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 4
}
✅ test2 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 3 }
🏠 test2 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: undefined,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:48.900Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
📊 사용자 입실 정보 저장 완료: test2 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 1
👥 방 2의 참가자 목록: [
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'online',
    joinedAt: 2025-09-16T09:00:47.894Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: 2025-09-15T23:31:26.126Z,
      updatedAt: 2025-09-16T02:44:12.723Z,
      userId: 4
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 1
🏠 test2 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 1 }
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
💾 사용자 입실 상태 DB 저장: 4 → 맵 2
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
🔌 [오프라인] mini area WebSocket 연결 해제: {
  socketId: 'k1TeEmzJTAllUTDGAAAH',
  userId: 4,
  username: 'test2',
  mapId: 2,
  privateAreaId: undefined,
  timestamp: '9/16/2025, 6:00:49 PM'
}
📊 [오프라인] 사용자 상태 변경: test2 (ID: 4)
   입실 상태: 맵 2에 입실 중 → 오프라인 (방 정보 유지)
⚠️ mapId 삭제 시도 차단 - 유지: 2
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: undefined,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:49.159Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 1명, 오프라인: 1명)
📊 [오프라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
🚪 test2 leaving room 2 (다른맵:false, 연결끊김:true)
📊 연결 끊김 - 방 정보 유지: test2 맵 2
📋 맵 2의 참가자 조회 시작
📋 맵 2에 소켓이 없음
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test2 (4) left room 2
🧹 [시스템] 소켓 정리 완료: test2 (4)
📊 [시스템] 현재 사용자 상태:
   온라인: 1명, 오프라인: 1명
   활성 소켓: 1개
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 1명, 오프라인: 1명)
📊 [오프라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
🔄 서버 상태 업데이트: { totalUsers: 1, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
WebSocket 연결 해제: k1TeEmzJTAllUTDGAAAH
2025-09-16T09:00:49.709Z - GET /api/auth/user/me from 192.168.200.108
👤 현재 사용자 정보 조회: { userId: 4, username: 'test2' }
2025-09-16T09:00:49.724Z - GET /api/auth/user/me from 192.168.200.108
👤 현재 사용자 정보 조회: { userId: 4, username: 'test2' }
2025-09-16T09:00:49.795Z - OPTIONS /api/maps/2 from 192.168.200.108
2025-09-16T09:00:49.818Z - GET /api/maps from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
2025-09-16T09:00:49.835Z - GET /api/characters from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
2025-09-16T09:00:49.877Z - GET /api/maps from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
2025-09-16T09:00:49.908Z - GET /api/characters from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
2025-09-16T09:00:49.922Z - GET /api/maps/2 from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🔍 서버: 맵 조회 요청: { mapId: '2', userId: 4 }
WebSocket 초기 헤더: {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Credentials': 'true'
}
WebSocket 요청 정보: {
  method: 'GET',
  url: '/socket.io/?EIO=4&transport=websocket',
  headers: {
    host: '192.168.200.106:7000',
    connection: 'Upgrade',
    pragma: 'no-cache',
    'cache-control': 'no-cache',
    'user-agent': 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36',
    upgrade: 'websocket',
    origin: 'https://192.168.200.106:5173',
    'sec-websocket-version': '13',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
    'sec-websocket-key': 'Qwwu2Df+kG7LVQay13YMXA==',
    'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
  },
  secure: undefined
}
🔍 서버: 맵 조회 결과: 성공
✅ 서버: 맵 조회 성공: { id: 2, name: 'new world', creatorId: 3 }
새로운 WebSocket 연결 (화상통신 준비): GzrI3_Kxc7fYhw9MAAAJ
연결 정보: {
  id: 'GzrI3_Kxc7fYhw9MAAAJ',
  ip: '192.168.200.108',
  userAgent: 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36',
  origin: 'https://192.168.200.106:5173',
  secure: true
}
새로운 mini area WebSocket 연결: GzrI3_Kxc7fYhw9MAAAJ IP: 192.168.200.108
새로운 WebSocket 연결: GzrI3_Kxc7fYhw9MAAAJ
WebSocket 초기 헤더: {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Credentials': 'true'
}
WebSocket 요청 정보: {
  method: 'GET',
  url: '/socket.io/?EIO=4&transport=websocket',
  headers: {
    host: '192.168.200.106:7000',
    connection: 'Upgrade',
    pragma: 'no-cache',
    'cache-control': 'no-cache',
    'user-agent': 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36',
    upgrade: 'websocket',
    origin: 'https://192.168.200.106:5173',
    'sec-websocket-version': '13',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
    'sec-websocket-key': 'OSpusiIetMt9Y9n7S3XxlQ==',
    'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
  },
  secure: undefined
}
2025-09-16T09:00:50.018Z - GET /api/user/logged-in-users from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
새로운 WebSocket 연결 (화상통신 준비): deAeDzkImEZ7zqytAAAL
연결 정보: {
  id: 'deAeDzkImEZ7zqytAAAL',
  ip: '192.168.200.108',
  userAgent: 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36',
  origin: 'https://192.168.200.106:5173',
  secure: true
}
새로운 mini area WebSocket 연결: deAeDzkImEZ7zqytAAAL IP: 192.168.200.108
새로운 WebSocket 연결: deAeDzkImEZ7zqytAAAL
2025-09-16T09:00:50.032Z - GET /api/user/logged-in-users from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
2025-09-16T09:00:50.221Z - POST /api/characters from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
✅ 인증 성공: test2 (4)
🔄 [온라인] 사용자 이전 입실 상태 복원: test2 (ID: 4) → 맵 2
   📍 이전 위치: (400, 300), 방향: down
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: undefined,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:50.232Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 2, mapsCount: 1 }
📡 서버 상태 브로드캐스트
WebSocket 인증 성공: 4 test2
✅ 인증 성공: test2 (4)
🔄 [온라인] 사용자 이전 입실 상태 복원: test2 (ID: 4) → 맵 2
   📍 이전 위치: (400, 300), 방향: down
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: undefined,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:50.235Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 2, mapsCount: 1 }
📡 서버 상태 브로드캐스트
WebSocket 인증 성공: 4 test2
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 2, mapsCount: 1 }
📤 서버 상태 전송 to test2 (4)
2025-09-16T09:00:50.309Z - GET /api/characters from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
📥 join-map 이벤트 수신: {
  userId: 4,
  username: 'test2',
  mapId: 2,
  characterId: 3,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId'
  ],
  characterInfoDetail: {
    id: 3,
    name: 'test2',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test2 맵 입장 시작: {
  mapId: 2,
  characterId: 3,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 4
}
✅ test2 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 3 }
🏠 test2 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: undefined,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:50.387Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
📊 사용자 입실 정보 저장 완료: test2 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 1
👥 방 2의 참가자 목록: [
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'online',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 1
🏠 test2 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 1 }
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
💾 사용자 입실 상태 DB 저장: 4 → 맵 2
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: undefined,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:50.403Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:00:50.403Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test2 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': null,
  '마지막활동': '2025-09-16T09:00:50.437Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
📊 명시적 퇴실 - 대기실로 이동: test2 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2에 소켓이 없음
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test2 (4) left room 2
📥 join-map 이벤트 수신: {
  userId: 4,
  username: 'test2',
  mapId: 2,
  characterId: 3,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId'
  ],
  characterInfoDetail: {
    id: 3,
    name: 'test2',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test2 맵 입장 시작: {
  mapId: 2,
  characterId: 3,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 4
}
✅ test2 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 3 }
🏠 test2 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:50.441Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
📊 사용자 입실 정보 저장 완료: test2 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 1
👥 방 2의 참가자 목록: [
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 1
🏠 test2 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 1 }
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:50.443Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:00:50.443Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
💾 사용자 입실 상태 DB 저장: 4 → 맵 null
💾 사용자 입실 상태 DB 저장: 4 → 맵 2
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 491, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 491, y: 287 },
  '마지막활동': '2025-09-16T09:00:50.454Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:00:50.454Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 491, y: 287 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 491, y: 287 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T09:00:50.627Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T10:00:50.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
🔄 자동 재입장 시도: test2 → 맵 2
🔄 자동 재입장 시도: test2 → 맵 2
✅ test2 활성 캐릭터 로드 완료: {
  characterId: 3,
  characterName: 'test2',
  hasImages: true,
  hasAppearance: true
}
🏠 test2 맵 입장 시작: {
  mapId: 2,
  characterId: 3,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 4
}
🚪 test2 leaving room 2 (다른맵:true, 연결끊김:false)
📋 맵 2의 참가자 조회 시작
📋 맵 2에 소켓이 없음
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test2 (4) left room 2
✅ test2 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 3 }
🏠 test2 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:51.238Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
📊 사용자 입실 정보 저장 완료: test2 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 1
👥 방 2의 참가자 목록: [
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: 2025-09-15T23:31:26.126Z,
      updatedAt: 2025-09-16T02:44:12.723Z,
      userId: 4
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 1
🏠 test2 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 1 }
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
✅ test2 활성 캐릭터 로드 완료: {
  characterId: 3,
  characterName: 'test2',
  hasImages: true,
  hasAppearance: true
}
🏠 test2 맵 입장 시작: {
  mapId: 2,
  characterId: 3,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 4
}
🚪 test2 leaving room 2 (다른맵:true, 연결끊김:false)
📋 맵 2의 참가자 조회 시작
📋 맵 2에 소켓이 없음
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test2 (4) left room 2
✅ test2 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 3 }
🏠 test2 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:51.242Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (undefined)
📊 사용자 입실 정보 저장 완료: test2 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 1
👥 방 2의 참가자 목록: [
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: 2025-09-15T23:31:26.126Z,
      updatedAt: 2025-09-16T02:44:12.723Z,
      userId: 4
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 1
🏠 test2 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 1 }
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
💾 사용자 입실 상태 DB 저장: 4 → 맵 2
💾 사용자 입실 상태 DB 저장: 4 → 맵 2
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
2025-09-16T09:00:55.752Z - OPTIONS /api/maps/2 from 192.168.200.102
2025-09-16T09:00:55.759Z - GET /api/maps/2 from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🔍 서버: 맵 조회 요청: { mapId: '2', userId: 7 }
🔍 서버: 맵 조회 결과: 성공
✅ 서버: 맵 조회 성공: { id: 2, name: 'new world', creatorId: 3 }
📥 join-map 이벤트 수신: {
  userId: 7,
  username: 'test3',
  mapId: 2,
  characterId: 4,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 4,
    name: 'test3',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test3 맵 입장 시작: {
  mapId: 2,
  characterId: 4,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 7
}
✅ test3 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 4 }
🏠 test3 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:55.842Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 사용자 입실 정보 저장 완료: test3 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 2
👥 방 2의 참가자 목록: [
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: 2025-09-15T23:31:26.126Z,
      updatedAt: 2025-09-16T02:44:12.723Z,
      userId: 4
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'online',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 2
🏠 test3 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 2 }
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:55.849Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:00:55.849Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test3 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': null,
  '마지막활동': '2025-09-16T09:00:55.850Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 명시적 퇴실 - 대기실로 이동: test3 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 1
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test3 (7) left room 2
📥 join-map 이벤트 수신: {
  userId: 7,
  username: 'test3',
  mapId: 2,
  characterId: 4,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 4,
    name: 'test3',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test3 맵 입장 시작: {
  mapId: 2,
  characterId: 4,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 7
}
✅ test3 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 4 }
🏠 test3 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:55.852Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 사용자 입실 정보 저장 완료: test3 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 2
👥 방 2의 참가자 목록: [
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: 2025-09-15T23:31:26.126Z,
      updatedAt: 2025-09-16T02:44:12.723Z,
      userId: 4
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 2
🏠 test3 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 2 }
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:00:55.853Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:00:55.853Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
💾 사용자 입실 상태 DB 저장: 7 → 맵 2
💾 사용자 입실 상태 DB 저장: 7 → 맵 null
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 491, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 491, y: 287 },
  '마지막활동': '2025-09-16T09:00:55.856Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 2명 (온라인: 2명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:00:55.856Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 491, y: 287 }
}
💾 사용자 입실 상태 DB 저장: 7 → 맵 2
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 491, y: 287 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
2025-09-16T09:00:56.017Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T10:00:56.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
🏓 Ping 전송 완료: 2개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
🏓 Ping 전송 완료: 2개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
2025-09-16T09:01:34.817Z - OPTIONS /api/auth/user/me from 192.168.200.106
2025-09-16T09:01:34.818Z - OPTIONS /api/auth/user/me from 192.168.200.106
2025-09-16T09:01:34.819Z - GET /api/auth/user/me from 192.168.200.106
👤 현재 사용자 정보 조회: { userId: 3, username: 'test1' }
2025-09-16T09:01:34.832Z - GET /api/auth/user/me from 192.168.200.106
👤 현재 사용자 정보 조회: { userId: 3, username: 'test1' }
2025-09-16T09:01:34.844Z - OPTIONS /api/maps from 192.168.200.106
2025-09-16T09:01:34.844Z - OPTIONS /api/characters from 192.168.200.106
2025-09-16T09:01:34.846Z - GET /api/maps from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
2025-09-16T09:01:34.848Z - GET /api/characters from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
Auth 미들웨어 - 인증 성공, 사용자: test1
WebSocket 초기 헤더: {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Credentials': 'true'
}
WebSocket 요청 정보: {
  method: 'GET',
  url: '/socket.io/?EIO=4&transport=websocket',
  headers: {
    host: '192.168.200.106:7000',
    connection: 'Upgrade',
    pragma: 'no-cache',
    'cache-control': 'no-cache',
    'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
    upgrade: 'websocket',
    origin: 'https://192.168.200.106:5173',
    'sec-websocket-version': '13',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
    'sec-websocket-key': 'qaXSilRYaieEo1mclH84UQ==',
    'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
  },
  secure: undefined
}
새로운 WebSocket 연결 (화상통신 준비): DzOrXHuDMBNLb2e8AAAN
연결 정보: {
  id: 'DzOrXHuDMBNLb2e8AAAN',
  ip: '192.168.200.106',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
  origin: 'https://192.168.200.106:5173',
  secure: true
}
새로운 mini area WebSocket 연결: DzOrXHuDMBNLb2e8AAAN IP: 192.168.200.106
새로운 WebSocket 연결: DzOrXHuDMBNLb2e8AAAN
2025-09-16T09:01:34.874Z - GET /api/maps from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
2025-09-16T09:01:34.875Z - GET /api/characters from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
Auth 미들웨어 - 인증 성공, 사용자: test1
2025-09-16T09:01:34.890Z - OPTIONS /api/user/logged-in-users from 192.168.200.106
2025-09-16T09:01:34.894Z - GET /api/user/logged-in-users from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
WebSocket 초기 헤더: {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Credentials': 'true'
}
WebSocket 요청 정보: {
  method: 'GET',
  url: '/socket.io/?EIO=4&transport=websocket',
  headers: {
    host: '192.168.200.106:7000',
    connection: 'Upgrade',
    pragma: 'no-cache',
    'cache-control': 'no-cache',
    'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
    upgrade: 'websocket',
    origin: 'https://192.168.200.106:5173',
    'sec-websocket-version': '13',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
    'sec-websocket-key': 'MinvMQaBQZ017e3nm1hmQA==',
    'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
  },
  secure: undefined
}
Auth 미들웨어 - 인증 성공, 사용자: test1
2025-09-16T09:01:34.899Z - GET /api/user/logged-in-users from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
새로운 WebSocket 연결 (화상통신 준비): WyJcF_TkKG7DDUcAAAAP
연결 정보: {
  id: 'WyJcF_TkKG7DDUcAAAAP',
  ip: '192.168.200.106',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
  origin: 'https://192.168.200.106:5173',
  secure: true
}
새로운 mini area WebSocket 연결: WyJcF_TkKG7DDUcAAAAP IP: 192.168.200.106
새로운 WebSocket 연결: WyJcF_TkKG7DDUcAAAAP
Auth 미들웨어 - 인증 성공, 사용자: test1
✅ 인증 성공: test1 (3)
✨ [온라인] 새로운 사용자 또는 대기실 입장: test1 (ID: 3)
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': undefined,
  '위치': undefined,
  '마지막활동': '2025-09-16T09:01:34.906Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (undefined)
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
WebSocket 인증 성공: 3 test1
WebSocket 인증 성공: 3 test1
✅ 인증 성공: test1 (3)
🔄 [온라인] 사용자 이전 입실 상태 복원: test1 (ID: 3) → 맵 wait
   📍 이전 위치: (N/A, N/A), 방향: N/A
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': undefined,
  '위치': undefined,
  '마지막활동': '2025-09-16T09:01:34.911Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (undefined)
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 1, mapsCount: 1 }
📤 서버 상태 전송 to test1 (3)
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
❌ 자동 재입장 실패: 맵 wait가 존재하지 않음
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
🔌 [오프라인] mini area WebSocket 연결 해제: {
  socketId: 'DzOrXHuDMBNLb2e8AAAN',
  userId: undefined,
  username: undefined,
  mapId: undefined,
  privateAreaId: undefined,
  timestamp: '9/16/2025, 6:01:36 PM'
}
WebSocket 연결 해제: DzOrXHuDMBNLb2e8AAAN
🔌 [오프라인] mini area WebSocket 연결 해제: {
  socketId: 'WyJcF_TkKG7DDUcAAAAP',
  userId: 3,
  username: 'test1',
  mapId: undefined,
  privateAreaId: undefined,
  timestamp: '9/16/2025, 6:01:36 PM'
}
📊 [오프라인] 사용자 상태 변경: test1 (ID: 3)
   입실 상태: 맵 wait에 입실 중 → 오프라인 (방 정보 유지)
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': undefined,
  '위치': undefined,
  '마지막활동': '2025-09-16T09:01:36.225Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 2명, 오프라인: 1명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [오프라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (undefined)
🧹 [시스템] 소켓 정리 완료: test1 (3)
📊 [시스템] 현재 사용자 상태:
   온라인: 2명, 오프라인: 1명
   활성 소켓: 2개
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 2명, 오프라인: 1명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [오프라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (undefined)
🔄 서버 상태 업데이트: { totalUsers: 2, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
WebSocket 연결 해제: WyJcF_TkKG7DDUcAAAAP
2025-09-16T09:01:36.323Z - GET /api/auth/user/me from 192.168.200.106
👤 현재 사용자 정보 조회: { userId: 3, username: 'test1' }
2025-09-16T09:01:36.327Z - GET /api/auth/user/me from 192.168.200.106
👤 현재 사용자 정보 조회: { userId: 3, username: 'test1' }
2025-09-16T09:01:36.347Z - GET /api/maps from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
2025-09-16T09:01:36.349Z - GET /api/characters from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
Auth 미들웨어 - 인증 성공, 사용자: test1
2025-09-16T09:01:36.353Z - GET /api/characters from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
2025-09-16T09:01:36.363Z - GET /api/maps from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
2025-09-16T09:01:36.365Z - GET /api/user/logged-in-users from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
Auth 미들웨어 - 인증 성공, 사용자: test1
2025-09-16T09:01:36.375Z - GET /api/maps from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
2025-09-16T09:01:36.382Z - GET /api/user/logged-in-users from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
WebSocket 초기 헤더: {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Credentials': 'true'
}
WebSocket 요청 정보: {
  method: 'GET',
  url: '/socket.io/?EIO=4&transport=websocket',
  headers: {
    host: '192.168.200.106:7000',
    connection: 'Upgrade',
    pragma: 'no-cache',
    'cache-control': 'no-cache',
    'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
    upgrade: 'websocket',
    origin: 'https://192.168.200.106:5173',
    'sec-websocket-version': '13',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
    'sec-websocket-key': 'tojCa+ArEKy8W8m1NEWFlA==',
    'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
  },
  secure: undefined
}
Auth 미들웨어 - 인증 성공, 사용자: test1
새로운 WebSocket 연결 (화상통신 준비): Tt1m3IbU-NV5EhzxAAAR
연결 정보: {
  id: 'Tt1m3IbU-NV5EhzxAAAR',
  ip: '192.168.200.106',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
  origin: 'https://192.168.200.106:5173',
  secure: true
}
새로운 mini area WebSocket 연결: Tt1m3IbU-NV5EhzxAAAR IP: 192.168.200.106
새로운 WebSocket 연결: Tt1m3IbU-NV5EhzxAAAR
2025-09-16T09:01:36.389Z - GET /api/maps from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
WebSocket 초기 헤더: {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Credentials': 'true'
}
WebSocket 요청 정보: {
  method: 'GET',
  url: '/socket.io/?EIO=4&transport=websocket',
  headers: {
    host: '192.168.200.106:7000',
    connection: 'Upgrade',
    pragma: 'no-cache',
    'cache-control': 'no-cache',
    'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
    upgrade: 'websocket',
    origin: 'https://192.168.200.106:5173',
    'sec-websocket-version': '13',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
    'sec-websocket-key': 'pnrjEyXUcCw68pxbffmncg==',
    'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits'
  },
  secure: undefined
}
2025-09-16T09:01:36.410Z - GET /api/user/logged-in-users from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
2025-09-16T09:01:36.417Z - GET /api/user/logged-in-users from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
새로운 WebSocket 연결 (화상통신 준비): VICg7g7yRi1xa3unAAAT
연결 정보: {
  id: 'VICg7g7yRi1xa3unAAAT',
  ip: '192.168.200.106',
  userAgent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
  origin: 'https://192.168.200.106:5173',
  secure: true
}
새로운 mini area WebSocket 연결: VICg7g7yRi1xa3unAAAT IP: 192.168.200.106
새로운 WebSocket 연결: VICg7g7yRi1xa3unAAAT
WebSocket 인증 성공: 3 test1
✅ 인증 성공: test1 (3)
🔄 [온라인] 사용자 이전 입실 상태 복원: test1 (ID: 3) → 맵 wait
   📍 이전 위치: (N/A, N/A), 방향: N/A
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': undefined,
  '위치': undefined,
  '마지막활동': '2025-09-16T09:01:36.431Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (undefined)
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
✅ 인증 성공: test1 (3)
🔄 [온라인] 사용자 이전 입실 상태 복원: test1 (ID: 3) → 맵 wait
   📍 이전 위치: (N/A, N/A), 방향: N/A
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': undefined,
  '위치': undefined,
  '마지막활동': '2025-09-16T09:01:36.434Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (undefined)
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 1, mapsCount: 1 }
📡 서버 상태 브로드캐스트
WebSocket 인증 성공: 3 test1
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 1, mapsCount: 1 }
📤 서버 상태 전송 to test1 (3)
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
❌ 자동 재입장 실패: 맵 wait가 존재하지 않음
❌ 자동 재입장 실패: 맵 wait가 존재하지 않음
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3' ]
2025-09-16T09:01:37.739Z - OPTIONS /api/maps/2 from 192.168.200.106
2025-09-16T09:01:37.742Z - GET /api/maps/2 from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🔍 서버: 맵 조회 요청: { mapId: '2', userId: 3 }
🔍 서버: 맵 조회 결과: 성공
✅ 서버: 맵 조회 성공: { id: 2, name: 'new world', creatorId: 3 }
📥 join-map 이벤트 수신: {
  userId: 3,
  username: 'test1',
  mapId: 2,
  characterId: 2,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 2,
    name: 'test1',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test1 맵 입장 시작: {
  mapId: 2,
  characterId: 2,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 3
}
✅ test1 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 2 }
🏠 test1 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:01:37.768Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test1 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 3
👥 방 2의 참가자 목록: [
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: 2025-09-15T23:31:26.126Z,
      updatedAt: 2025-09-16T02:44:12.723Z,
      userId: 4
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'online',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 3
🏠 test1 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 3 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:01:37.773Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:01:37.773Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test1 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': null,
  '마지막활동': '2025-09-16T09:01:37.775Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (test1)
📊 명시적 퇴실 - 대기실로 이동: test1 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 2
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test1 (3) left room 2
📥 join-map 이벤트 수신: {
  userId: 3,
  username: 'test1',
  mapId: 2,
  characterId: 2,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 2,
    name: 'test1',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test1 맵 입장 시작: {
  mapId: 2,
  characterId: 2,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 3
}
✅ test1 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 2 }
🏠 test1 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:01:37.778Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test1 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 3
👥 방 2의 참가자 목록: [
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: 2025-09-15T23:31:26.126Z,
      updatedAt: 2025-09-16T02:44:12.723Z,
      userId: 4
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 3
🏠 test1 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 3 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:01:37.781Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:01:37.781Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 491, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 491, y: 287 },
  '마지막활동': '2025-09-16T09:01:37.784Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:01:37.784Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 491, y: 287 }
}
💾 사용자 입실 상태 DB 저장: 3 → 맵 2
💾 사용자 입실 상태 DB 저장: 3 → 맵 null
💾 사용자 입실 상태 DB 저장: 3 → 맵 2
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 491, y: 287 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T09:01:37.898Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T10:01:37.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 494, y: 291 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 494, y: 291 },
  '마지막활동': '2025-09-16T09:02:05.220Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.220Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 494, y: 291 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 497, y: 295 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 497, y: 295 },
  '마지막활동': '2025-09-16T09:02:05.239Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.239Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 497, y: 295 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 500, y: 299 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 500, y: 299 },
  '마지막활동': '2025-09-16T09:02:05.250Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.250Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 500, y: 299 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 503, y: 302 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 503, y: 302 },
  '마지막활동': '2025-09-16T09:02:05.265Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.265Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 503, y: 302 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 493.9967703893201, y: 290.74958227455994 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 506, y: 306 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 506, y: 306 },
  '마지막활동': '2025-09-16T09:02:05.282Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.282Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 506, y: 306 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 497.1059196682401, y: 294.6397738844164 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 510, y: 310 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 510, y: 310 },
  '마지막활동': '2025-09-16T09:02:05.299Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.299Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 510, y: 310 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 500.2337987620924, y: 298.55340038348766 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 513, y: 314 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 513, y: 314 },
  '마지막활동': '2025-09-16T09:02:05.316Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.316Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 513, y: 314 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 503.3616778559454, y: 302.46702688255976 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 516, y: 318 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 516, y: 318 },
  '마지막활동': '2025-09-16T09:02:05.332Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.331Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 516, y: 318 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 506.47082713486543, y: 306.3572184924162 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 519, y: 322 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 519, y: 322 },
  '마지막활동': '2025-09-16T09:02:05.350Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.350Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 519, y: 322 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 509.59870622871773, y: 310.2708449914875 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 522, y: 326 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 522, y: 326 },
  '마지막활동': '2025-09-16T09:02:05.366Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.366Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 522, y: 326 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 512.7265853225707, y: 314.1844714905596 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 525, y: 330 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 525, y: 330 },
  '마지막활동': '2025-09-16T09:02:05.384Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.384Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 525, y: 330 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 515.8357346014908, y: 318.07466310041605 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 528, y: 334 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 528, y: 334 },
  '마지막활동': '2025-09-16T09:02:05.399Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.399Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 528, y: 334 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 518.9448838804102, y: 321.96485471027165 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 531, y: 338 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 531, y: 338 },
  '마지막활동': '2025-09-16T09:02:05.415Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.415Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 531, y: 338 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 522.0727629742632, y: 325.87848120934376 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 535, y: 342 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 535, y: 342 },
  '마지막활동': '2025-09-16T09:02:05.434Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.434Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 535, y: 342 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 525.2006420681163, y: 329.79210770841587 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 538, y: 345 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 538, y: 345 },
  '마지막활동': '2025-09-16T09:02:05.449Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.449Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 538, y: 345 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 528.3285211619686, y: 333.7057342074871 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 541, y: 349 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 541, y: 349 },
  '마지막활동': '2025-09-16T09:02:05.465Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.465Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 541, y: 349 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 531.4564002558217, y: 337.61936070655923 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 544, y: 353 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 544, y: 353 },
  '마지막활동': '2025-09-16T09:02:05.481Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.481Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 544, y: 353 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 534.5655495347416, y: 341.5095523164157 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 547, y: 357 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 547, y: 357 },
  '마지막활동': '2025-09-16T09:02:05.498Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.498Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 547, y: 357 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 537.693428628594, y: 345.42317881548695 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 550, y: 361 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 550, y: 361 },
  '마지막활동': '2025-09-16T09:02:05.516Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.516Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 550, y: 361 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 540.802577907514, y: 349.3133704253434 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 553, y: 365 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 553, y: 365 },
  '마지막활동': '2025-09-16T09:02:05.532Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.532Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 553, y: 365 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 543.9117271864333, y: 353.203562035199 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 556, y: 369 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 556, y: 369 },
  '마지막활동': '2025-09-16T09:02:05.549Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.549Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 556, y: 369 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 547.0583360952193, y: 357.1406234234868 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 560, y: 373 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 560, y: 373 },
  '마지막활동': '2025-09-16T09:02:05.566Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.566Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 560, y: 373 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 550.1674853741392, y: 361.03081503334323 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 560, y: 373 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 560, y: 373 },
  '마지막활동': '2025-09-16T09:02:05.582Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:05.582Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 560, y: 373 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 553.2953644679923, y: 364.94444153241534 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 556.4045137469116, y: 368.83463314227095 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 559.5323928407646, y: 372.74825964134305 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 560, y: 373.3333333333333 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T09:02:05.703Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T10:02:05.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 501, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 501, y: 287 },
  '마지막활동': '2025-09-16T09:02:08.706Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:08.706Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 501, y: 287 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 500.98967515892576, y: 287.08056189644293 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 506, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 506, y: 287 },
  '마지막활동': '2025-09-16T09:02:08.968Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:08.968Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 506, y: 287 }
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 531, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 531, y: 287 },
  '마지막활동': '2025-09-16T09:02:09.039Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.039Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 531, y: 287 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 505.99951225063796, y: 287.1209638084729 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 536, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 536, y: 287 },
  '마지막활동': '2025-09-16T09:02:09.098Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.098Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 536, y: 287 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 556, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 556, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.117Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.117Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 556, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 530.9886996602017, y: 287.3224895133887 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 551, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 551, y: 287 },
  '마지막활동': '2025-09-16T09:02:09.138Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.138Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 551, y: 287 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 566, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 566, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.158Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.158Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 566, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 535.9085396784093, y: 287.3621656425678 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 556, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 556, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.180Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.180Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 556, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 555.9778870697655, y: 287.52401521830456 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 571, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 571, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.190Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.190Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 571, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 550.9080519290472, y: 287.48312945104067 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 561, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 561, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.218Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.218Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 561, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 565.9675622286869, y: 287.6045771147475 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 576, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 576, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.235Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.235Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 576, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 555.9178890207638, y: 287.5235313630706 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 566, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 566, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.249Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.249Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 566, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 570.9474002958962, y: 287.64473709916047 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 586, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 586, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.266Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.266Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 586, y: 288 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 571, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 571, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.283Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.282Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 571, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 560.9277261124761, y: 287.56393327510057 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 575.9272383631097, y: 287.6848970835735 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 591, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 591, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.305Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.305Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 591, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 565.9075641796896, y: 287.6040932595136 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 576, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 576, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.316Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.316Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 576, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 585.9469125465341, y: 287.76570090763335 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 596, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 596, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.328Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.328Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 596, y: 288 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 581, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 581, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.343Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.343Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 581, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 570.8874022469032, y: 287.64425324392664 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 601, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 601, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.355Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.354Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 601, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 590.9267506137434, y: 287.8058608920463 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 586, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 586, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.369Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.369Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 586, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 575.8972393386155, y: 287.6846551559566 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 606, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 606, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.381Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.381Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 606, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 595.9365877054599, y: 287.8462628040763 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 591, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 591, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.401Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.401Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 591, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 580.9070764303277, y: 287.72505706798654 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 611, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 611, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.413Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.413Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 611, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 600.9164257726692, y: 287.88642278848926 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 585.8869144975413, y: 287.7652170523995 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 615, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 615, y: 288 },
  '마지막활동': '2025-09-16T09:02:09.443Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:09.443Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 615, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 605.9262628643814, y: 287.9268247005192 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 590.8967515892535, y: 287.80561896442947 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 610.936099956098, y: 287.96722661254915 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 615, y: 288 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
2025-09-16T09:02:10.132Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T10:02:10.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 487, y: 290 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 487, y: 290 },
  '마지막활동': '2025-09-16T09:02:14.522Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.522Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 487, y: 290 }
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 479, y: 296 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 479, y: 296 },
  '마지막활동': '2025-09-16T09:02:14.573Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.573Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 479, y: 296 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 483, y: 293 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 483, y: 293 },
  '마지막활동': '2025-09-16T09:02:14.593Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.593Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 483, y: 293 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 487.13459464124816, y: 290.09210954083653 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 476, y: 299 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 476, y: 299 },
  '마지막활동': '2025-09-16T09:02:14.607Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.607Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 476, y: 299 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 468, y: 306 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 468, y: 306 },
  '마지막활동': '2025-09-16T09:02:14.630Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.630Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 468, y: 306 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 479.4037839237444, y: 296.2763286225096 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 464, y: 309 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 464, y: 309 },
  '마지막활동': '2025-09-16T09:02:14.639Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.639Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 464, y: 309 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 483.2457625833544, y: 293.2029591394947 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 460, y: 312 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 460, y: 312 },
  '마지막활동': '2025-09-16T09:02:14.666Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.665Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 460, y: 312 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 475.53837856499257, y: 299.3684381633461 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 456, y: 315 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 456, y: 315 },
  '마지막활동': '2025-09-16T09:02:14.668Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.668Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 456, y: 315 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 467.8075678474888, y: 305.5526572450192 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 463.91873578959166, y: 308.66350684368007 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 452, y: 318 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 452, y: 318 },
  '마지막활동': '2025-09-16T09:02:14.697Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.697Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 452, y: 318 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 448, y: 321 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 448, y: 321 },
  '마지막활동': '2025-09-16T09:02:14.706Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.706Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 448, y: 321 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 460.0533304308398, y: 311.7556163845166 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 445, y: 324 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 445, y: 324 },
  '마지막활동': '2025-09-16T09:02:14.719Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.719Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 445, y: 324 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 456.187925072088, y: 314.84772592535313 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 441, y: 327 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 441, y: 327 },
  '마지막활동': '2025-09-16T09:02:14.733Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.733Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 441, y: 327 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 437, y: 330 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 437, y: 330 },
  '마지막활동': '2025-09-16T09:02:14.744Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.744Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 437, y: 330 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 452.32251971333613, y: 317.93983546618966 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 448.4571143545843, y: 321.0319450070262 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 433, y: 333 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 433, y: 333 },
  '마지막활동': '2025-09-16T09:02:14.764Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.764Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 433, y: 333 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 444.59170899583245, y: 324.1240545478627 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 429, y: 337 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 429, y: 337 },
  '마지막활동': '2025-09-16T09:02:14.779Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.779Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 429, y: 337 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 440.7263036370806, y: 327.21616408869926 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 425, y: 340 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 425, y: 340 },
  '마지막활동': '2025-09-16T09:02:14.794Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.794Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 425, y: 340 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 436.83747157918685, y: 330.3270136873574 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 421, y: 343 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 421, y: 343 },
  '마지막활동': '2025-09-16T09:02:14.813Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.813Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 421, y: 343 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 432.972066220435, y: 333.41912322819394 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 417, y: 346 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 417, y: 346 },
  '마지막활동': '2025-09-16T09:02:14.830Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.830Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 417, y: 346 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 429.10666086168317, y: 336.51123276903047 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 414, y: 349 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 414, y: 349 },
  '마지막활동': '2025-09-16T09:02:14.846Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.846Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 414, y: 349 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 425.2412555029313, y: 339.603342309867 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 410, y: 352 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 410, y: 352 },
  '마지막활동': '2025-09-16T09:02:14.860Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.860Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 410, y: 352 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 421.3758501441795, y: 342.69545185070353 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 406, y: 355 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 406, y: 355 },
  '마지막활동': '2025-09-16T09:02:14.879Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.879Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 406, y: 355 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 417.4870180862823, y: 345.8063014493644 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 402, y: 358 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 402, y: 358 },
  '마지막활동': '2025-09-16T09:02:14.899Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.898Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 402, y: 358 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 413.6216127275305, y: 348.89841099020094 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 398, y: 361 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 398, y: 361 },
  '마지막활동': '2025-09-16T09:02:14.917Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.917Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 398, y: 361 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 409.75620736877863, y: 351.9905205310375 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 394, y: 364 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 394, y: 364 },
  '마지막활동': '2025-09-16T09:02:14.931Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.931Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 394, y: 364 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 405.8908020100268, y: 355.082630071874 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 390, y: 367 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 390, y: 367 },
  '마지막활동': '2025-09-16T09:02:14.945Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.945Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 390, y: 367 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 402.02539665127495, y: 358.17473961271054 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 387, y: 371 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 387, y: 371 },
  '마지막활동': '2025-09-16T09:02:14.959Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.959Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 387, y: 371 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 398.1599912925231, y: 361.26684915354707 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 383, y: 374 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 383, y: 374 },
  '마지막활동': '2025-09-16T09:02:14.972Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.972Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 383, y: 374 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 394.29458593377126, y: 364.3589586943836 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 379, y: 377 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 379, y: 377 },
  '마지막활동': '2025-09-16T09:02:14.992Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:14.992Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 379, y: 377 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 390.4057538758741, y: 367.4698082930445 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 375, y: 380 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 375, y: 380 },
  '마지막활동': '2025-09-16T09:02:15.012Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:15.012Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 375, y: 380 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 386.5637752162675, y: 370.54317777605667 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 371, y: 383 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 371, y: 383 },
  '마지막활동': '2025-09-16T09:02:15.023Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:15.023Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 371, y: 383 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 382.67494315837035, y: 373.65402737471754 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 367, y: 386 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 367, y: 386 },
  '마지막활동': '2025-09-16T09:02:15.043Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:15.043Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 367, y: 386 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 378.8095377996185, y: 376.7461369155541 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 363, y: 389 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 363, y: 389 },
  '마지막활동': '2025-09-16T09:02:15.065Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:15.065Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 363, y: 389 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 374.94413244086667, y: 379.8382464563906 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 359, y: 392 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 359, y: 392 },
  '마지막활동': '2025-09-16T09:02:15.075Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:15.075Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 359, y: 392 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 371.0787270821148, y: 382.93035599722714 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 356, y: 395 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 356, y: 395 },
  '마지막활동': '2025-09-16T09:02:15.091Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:15.091Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 356, y: 395 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 367.213321723363, y: 386.02246553806367 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 352, y: 398 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 352, y: 398 },
  '마지막활동': '2025-09-16T09:02:15.110Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:15.110Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 352, y: 398 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 363.32448966546923, y: 389.1333151367218 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 348, y: 402 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 348, y: 402 },
  '마지막활동': '2025-09-16T09:02:15.124Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:15.124Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 348, y: 402 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 359.48251100585924, y: 392.20668461973673 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 344, y: 405 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 344, y: 405 },
  '마지막활동': '2025-09-16T09:02:15.144Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:15.144Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 344, y: 405 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 355.5936789479655, y: 395.3175342183949 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 340, y: 408 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 340, y: 408 },
  '마지막활동': '2025-09-16T09:02:15.163Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:15.163Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 340, y: 408 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 351.7282735892136, y: 398.4096437592314 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 339, y: 409 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 339, y: 409 },
  '마지막활동': '2025-09-16T09:02:15.179Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:02:15.179Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 339, y: 409 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 347.86286823046174, y: 401.50175330006795 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 343.99746287170984, y: 404.5938628409045 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 340.132057512958, y: 407.685972381741 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 339.00000762939453, y: 408.5915493965149 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T09:02:15.344Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T10:02:15.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 605, y: 289 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 605, y: 289 },
  '마지막활동': '2025-09-16T09:04:26.972Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:26.972Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 605, y: 289 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 610, y: 289 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 610, y: 289 },
  '마지막활동': '2025-09-16T09:04:27.087Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.087Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 610, y: 289 }
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 605.0556661996583, y: 289.2290749640872 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 610.0576065543186, y: 288.61085761688196 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 580, y: 292 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 580, y: 292 },
  '마지막활동': '2025-09-16T09:04:27.347Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.347Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 580, y: 292 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 580, y: 292 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 580, y: 292 },
  '마지막활동': '2025-09-16T09:04:27.403Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.403Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 580, y: 292 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 580.3139255167661, y: 292.2870429136581 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 546, y: 297 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 546, y: 297 },
  '마지막활동': '2025-09-16T09:04:27.462Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.462Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 546, y: 297 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 580.3139255167573, y: 292.2870429136592 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 560, y: 295 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 560, y: 295 },
  '마지막활동': '2025-09-16T09:04:27.513Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.513Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 560, y: 295 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 531, y: 298 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 531, y: 298 },
  '마지막활동': '2025-09-16T09:04:27.530Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.530Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 531, y: 298 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 545.598077579047, y: 296.5777656924773 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 546, y: 297 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 546, y: 297 },
  '마지막활동': '2025-09-16T09:04:27.547Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.547Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 546, y: 297 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 526, y: 299 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 526, y: 299 },
  '마지막활동': '2025-09-16T09:04:27.574Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.574Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 526, y: 299 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 560.4848048250527, y: 294.7378331115103 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 541, y: 297 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 541, y: 297 },
  '마지막활동': '2025-09-16T09:04:27.590Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.590Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 541, y: 297 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 530.7113503330238, y: 298.4176982734465 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 516, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 516, y: 300 },
  '마지막활동': '2025-09-16T09:04:27.616Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.616Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 516, y: 300 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 545.5980775790296, y: 296.5777656924795 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 536, y: 298 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 536, y: 298 },
  '마지막활동': '2025-09-16T09:04:27.634Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.634Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 536, y: 298 }
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 525.7689568873424, y: 299.02855589032845 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 511, y: 301 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 511, y: 301 },
  '마지막활동': '2025-09-16T09:04:27.657Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.657Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 511, y: 301 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 540.6556841333481, y: 297.18862330936145 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 531, y: 298 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 531, y: 298 },
  '마지막활동': '2025-09-16T09:04:27.673Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.673Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 531, y: 298 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 515.8246230870006, y: 300.25763085441565 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 506, y: 301 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 506, y: 301 },
  '마지막활동': '2025-09-16T09:04:27.697Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.697Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 506, y: 301 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 535.6835172331729, y: 297.80316079140556 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 521, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 521, y: 300 },
  '마지막활동': '2025-09-16T09:04:27.700Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.700Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 521, y: 300 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 501, y: 302 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 501, y: 302 },
  '마지막활동': '2025-09-16T09:04:27.715Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.715Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 501, y: 302 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 510.8822296413279, y: 300.86848847129653 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 516, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 516, y: 300 },
  '마지막활동': '2025-09-16T09:04:27.729Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.728Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 516, y: 300 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 530.7113503329977, y: 298.4176982734497 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 496, y: 303 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 496, y: 303 },
  '마지막활동': '2025-09-16T09:04:27.745Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.745Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 496, y: 303 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 505.91006274115273, y: 301.48302595334064 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 511, y: 301 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 511, y: 301 },
  '마지막활동': '2025-09-16T09:04:27.768Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.768Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 511, y: 301 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 520.8265634416434, y: 299.63941350721257 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 491, y: 303 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 491, y: 303 },
  '마지막활동': '2025-09-16T09:04:27.780Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.780Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 491, y: 303 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 500.93789584097755, y: 302.09756343538476 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 515.884169995962, y: 300.2502711240945 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 486, y: 304 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 486, y: 304 },
  '마지막활동': '2025-09-16T09:04:27.817Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.817Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 486, y: 304 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 495.9955023953048, y: 302.70842105226563 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 486, y: 304 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 486, y: 304 },
  '마지막활동': '2025-09-16T09:04:27.827Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.827Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 486, y: 304 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 510.882229641293, y: 300.8684884713008 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 481, y: 305 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 481, y: 305 },
  '마지막활동': '2025-09-16T09:04:27.848Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.848Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 481, y: 305 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 491.0531089496234, y: 303.3192786691476 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 481, y: 305 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 481, y: 305 },
  '마지막활동': '2025-09-16T09:04:27.850Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.850Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 481, y: 305 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 476, y: 305 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 476, y: 305 },
  '마지막활동': '2025-09-16T09:04:27.866Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.866Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 476, y: 305 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 486.11071550395064, y: 303.9301362860285 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 476, y: 305 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 476, y: 305 },
  '마지막활동': '2025-09-16T09:04:27.872Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.872Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 476, y: 305 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 486.0809420494482, y: 303.9338161511917 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 471, y: 306 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 471, y: 306 },
  '마지막활동': '2025-09-16T09:04:27.904Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.904Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 471, y: 306 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 481.13854860377546, y: 304.54467376807264 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 471, y: 306 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 471, y: 306 },
  '마지막활동': '2025-09-16T09:04:27.916Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.916Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 471, y: 306 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 481.13854860377546, y: 304.54467376807264 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 476.1663817036003, y: 305.15921125011675 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 466, y: 306 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 466, y: 306 },
  '마지막활동': '2025-09-16T09:04:27.935Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.935Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 466, y: 306 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 476.22592861258784, y: 305.15185151979244 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 466, y: 306 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 466, y: 306 },
  '마지막활동': '2025-09-16T09:04:27.943Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.943Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 466, y: 306 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 461, y: 307 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 461, y: 307 },
  '마지막활동': '2025-09-16T09:04:27.962Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.962Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 461, y: 307 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 471.25376171241265, y: 305.76638900183656 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 471.2835351669151, y: 305.7627091366734 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 456, y: 308 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 456, y: 308 },
  '마지막활동': '2025-09-16T09:04:27.986Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:27.986Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 456, y: 308 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 466.2815948122375, y: 306.38092648388067 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 456, y: 308 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 456, y: 308 },
  '마지막활동': '2025-09-16T09:04:28.002Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:28.002Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 456, y: 308 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 466.3113682667399, y: 306.3772466187175 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 451, y: 308 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 451, y: 308 },
  '마지막활동': '2025-09-16T09:04:28.022Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:28.022Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 451, y: 308 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 461.36897482104985, y: 306.98810423560053 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 451, y: 308 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 451, y: 308 },
  '마지막활동': '2025-09-16T09:04:28.030Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:28.030Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 451, y: 308 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 446, y: 309 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 446, y: 309 },
  '마지막활동': '2025-09-16T09:04:28.088Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:28.088Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 446, y: 309 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 456.3968079208833, y: 307.6026417176436 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 456.39680792087466, y: 307.60264171764464 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 442, y: 309 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 442, y: 309 },
  '마지막활동': '2025-09-16T09:04:28.104Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:28.104Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 442, y: 309 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 451.42464102071676, y: 308.21717919968665 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 451.4246410206995, y: 308.21717919968876 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 446.48224757503533, y: 308.8280368165686 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 442, y: 309 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 442, y: 309 },
  '마지막활동': '2025-09-16T09:04:28.116Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:28.116Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 442, y: 309 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 437, y: 310 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 437, y: 310 },
  '마지막활동': '2025-09-16T09:04:28.134Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:28.134Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 437, y: 310 }
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 441.5398541293539, y: 309.4388944334506 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 441.5100806748688, y: 309.4425742986117 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 437, y: 310 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T09:04:28.565Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T10:04:28.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 432, y: 311 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 432, y: 311 },
  '마지막활동': '2025-09-16T09:04:31.466Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:31.466Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 432, y: 311 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 432, y: 311 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 432, y: 311 },
  '마지막활동': '2025-09-16T09:04:31.548Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:31.548Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 432, y: 311 }
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 432.0236590542306, y: 310.579767877177 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 432.0236590542219, y: 310.579767877178 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 427, y: 311 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 427, y: 311 },
  '마지막활동': '2025-09-16T09:04:31.762Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:31.762Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 427, y: 311 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 412, y: 313 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 412, y: 313 },
  '마지막활동': '2025-09-16T09:04:31.823Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:31.823Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 412, y: 313 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 427.07711655722267, y: 311.15606409042067 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 397, y: 315 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 397, y: 315 },
  '마지막활동': '2025-09-16T09:04:31.869Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:31.869Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 397, y: 315 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 377, y: 317 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 377, y: 317 },
  '마지막활동': '2025-09-16T09:04:31.896Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:31.896Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 377, y: 317 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 412.1480937199058, y: 312.8953677219527 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 382, y: 316 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 382, y: 316 },
  '마지막활동': '2025-09-16T09:04:31.915Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:31.915Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 382, y: 316 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 363, y: 319 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 363, y: 319 },
  '마지막활동': '2025-09-16T09:04:31.931Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:31.931Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 363, y: 319 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 397.2786677801292, y: 314.627728025616 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 377, y: 317 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 377, y: 317 },
  '마지막활동': '2025-09-16T09:04:31.948Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:31.948Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 377, y: 317 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 358, y: 319 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 358, y: 319 },
  '마지막활동': '2025-09-16T09:04:31.964Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:31.964Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 358, y: 319 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 377.43290089459185, y: 316.9398562064553 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 372, y: 318 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 372, y: 318 },
  '마지막활동': '2025-09-16T09:04:31.979Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:31.979Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 372, y: 318 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 382.4092418403613, y: 316.3600883292783 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 353, y: 320 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 353, y: 320 },
  '마지막활동': '2025-09-16T09:04:31.993Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:31.993Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 353, y: 320 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 362.53367650604514, y: 318.675688174053 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 368, y: 318 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 368, y: 318 },
  '마지막활동': '2025-09-16T09:04:32.018Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.017Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 368, y: 318 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 377.46269934336203, y: 316.93638454252095 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 348, y: 320 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 348, y: 320 },
  '마지막활동': '2025-09-16T09:04:32.022Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.022Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 348, y: 320 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 357.5871340090459, y: 319.25198438729564 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 363, y: 319 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 363, y: 319 },
  '마지막활동': '2025-09-16T09:04:32.054Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.054Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 363, y: 319 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 372.48635839758396, y: 317.516152419699 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 343, y: 321 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 343, y: 321 },
  '마지막활동': '2025-09-16T09:04:32.065Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.065Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 343, y: 321 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 352.6405915120553, y: 319.82828060053725 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 358, y: 319 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 358, y: 319 },
  '마지막활동': '2025-09-16T09:04:32.083Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.083Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 358, y: 319 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 367.5100174518059, y: 318.095920296877 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 338, y: 322 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 338, y: 322 },
  '마지막활동': '2025-09-16T09:04:32.090Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.090Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 338, y: 322 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 347.69404901505607, y: 320.4045768137799 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 353, y: 320 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 353, y: 320 },
  '마지막활동': '2025-09-16T09:04:32.101Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.101Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 353, y: 320 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 362.5634749548066, y: 318.67221651011965 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 333, y: 322 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 333, y: 322 },
  '마지막활동': '2025-09-16T09:04:32.124Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.124Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 333, y: 322 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 342.71770806928663, y: 320.9843446909569 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 357.5573355602497, y: 319.25545605123307 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 348, y: 320 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 348, y: 320 },
  '마지막활동': '2025-09-16T09:04:32.144Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.144Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 348, y: 320 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 328, y: 323 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 328, y: 323 },
  '마지막활동': '2025-09-16T09:04:32.149Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.149Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 328, y: 323 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 337.7413671235172, y: 321.5641125681339 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 343, y: 321 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 343, y: 321 },
  '마지막활동': '2025-09-16T09:04:32.160Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.160Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 343, y: 321 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 352.61079306325047, y: 319.8317522644757 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 323, y: 323 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 323, y: 323 },
  '마지막활동': '2025-09-16T09:04:32.179Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.179Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 323, y: 323 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 332.79482462651794, y: 322.14040878137655 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 338, y: 322 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 338, y: 322 },
  '마지막활동': '2025-09-16T09:04:32.187Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.187Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 338, y: 322 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 347.6046536687022, y: 320.4149918055881 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 327.8482821295187, y: 322.7167049946192 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 333, y: 322 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 333, y: 322 },
  '마지막활동': '2025-09-16T09:04:32.226Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.226Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 333, y: 322 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 342.65811117170296, y: 320.99128801883074 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 333, y: 322 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 333, y: 322 },
  '마지막활동': '2025-09-16T09:04:32.246Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.246Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 333, y: 322 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 322.8719411837493, y: 323.2964728717962 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 328, y: 323 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 328, y: 323 },
  '마지막활동': '2025-09-16T09:04:32.270Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.270Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 328, y: 323 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 337.6817702259249, y: 321.5710558960088 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 328, y: 323 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 328, y: 323 },
  '마지막활동': '2025-09-16T09:04:32.273Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.273Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 328, y: 323 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 323, y: 323 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 323, y: 323 },
  '마지막활동': '2025-09-16T09:04:32.282Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.282Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 323, y: 323 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 332.7352277289256, y: 322.1473521092514 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 332.70542928015544, y: 322.1508237731858 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 318, y: 324 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 318, y: 324 },
  '마지막활동': '2025-09-16T09:04:32.306Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.306Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 318, y: 324 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 327.78868523192637, y: 322.72364832249406 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 318, y: 324 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 318, y: 324 },
  '마지막활동': '2025-09-16T09:04:32.319Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.319Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 318, y: 324 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 327.7588867831562, y: 322.7271199864284 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 313, y: 324 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 313, y: 324 },
  '마지막활동': '2025-09-16T09:04:32.335Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.335Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 313, y: 324 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 322.8123442861483, y: 323.3034161996721 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 313, y: 324 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 313, y: 324 },
  '마지막활동': '2025-09-16T09:04:32.346Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.346Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 313, y: 324 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 308, y: 325 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 308, y: 325 },
  '마지막활동': '2025-09-16T09:04:32.362Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.362Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 308, y: 325 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 317.83600334037885, y: 323.8831840768491 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 308, y: 325 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 308, y: 325 },
  '마지막활동': '2025-09-16T09:04:32.379Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.379Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 308, y: 325 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 317.86580178914903, y: 323.8797124129147 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 303, y: 326 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 303, y: 326 },
  '마지막활동': '2025-09-16T09:04:32.395Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.395Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 303, y: 326 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 312.8894608433796, y: 324.45948029009173 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 303, y: 326 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 303, y: 326 },
  '마지막활동': '2025-09-16T09:04:32.405Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.405Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 303, y: 326 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 312.88946084337965, y: 324.45948029009173 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 307.94291834638034, y: 325.0357765033344 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 298, y: 326 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 298, y: 326 },
  '마지막활동': '2025-09-16T09:04:32.435Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.435Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 298, y: 326 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 298, y: 326 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 298, y: 326 },
  '마지막활동': '2025-09-16T09:04:32.449Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.449Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 298, y: 326 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 307.9131198976016, y: 325.03924816726976 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 302.96657740061096, y: 325.6155443805114 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 293, y: 327 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 293, y: 327 },
  '마지막활동': '2025-09-16T09:04:32.483Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.483Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 293, y: 327 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 302.9665774006023, y: 325.6155443805124 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 293, y: 327 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 293, y: 327 },
  '마지막활동': '2025-09-16T09:04:32.486Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.486Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 293, y: 327 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 297.99023645482424, y: 326.19531225769043 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 288, y: 327 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 288, y: 327 },
  '마지막활동': '2025-09-16T09:04:32.500Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.500Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 288, y: 327 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 298.02003490360306, y: 326.19184059375505 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 288, y: 327 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 288, y: 327 },
  '마지막활동': '2025-09-16T09:04:32.519Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.519Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 288, y: 327 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 283, y: 328 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 283, y: 328 },
  '마지막활동': '2025-09-16T09:04:32.538Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.538Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 283, y: 328 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 293.0734924066125, y: 326.76813680699667 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 283, y: 328 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 283, y: 328 },
  '마지막활동': '2025-09-16T09:04:32.553Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.553Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 283, y: 328 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 293.043693957825, y: 326.7716084709331 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 278, y: 329 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 278, y: 329 },
  '마지막활동': '2025-09-16T09:04:32.555Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.555Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 278, y: 329 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 288.12694990961324, y: 327.3444330202393 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 288.0673530120556, y: 327.3513763481101 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 273, y: 329 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 273, y: 329 },
  '마지막활동': '2025-09-16T09:04:32.584Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.584Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 273, y: 329 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 283.180407412614, y: 327.92072923348195 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 273, y: 329 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 273, y: 329 },
  '마지막활동': '2025-09-16T09:04:32.611Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.611Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 273, y: 329 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 283.09101206627753, y: 327.9311442252881 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 268, y: 330 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 268, y: 330 },
  '마지막활동': '2025-09-16T09:04:32.622Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.622Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 268, y: 330 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 278.20406646684455, y: 328.50049711065896 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 268, y: 330 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 268, y: 330 },
  '마지막활동': '2025-09-16T09:04:32.633Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.633Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 268, y: 330 }
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 273.2277255210665, y: 329.080264987837 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 263, y: 330 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 263, y: 330 },
  '마지막활동': '2025-09-16T09:04:32.668Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.668Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 263, y: 330 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 273.2873224186241, y: 329.07332165996615 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 268.2513845752884, y: 329.660032865015 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 263, y: 330 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 263, y: 330 },
  '마지막활동': '2025-09-16T09:04:32.691Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.691Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 263, y: 330 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 253, y: 331 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 253, y: 331 },
  '마지막활동': '2025-09-16T09:04:32.697Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.697Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 253, y: 331 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 268.3109814728547, y: 329.65308953714316 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 258, y: 331 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 258, y: 331 },
  '마지막활동': '2025-09-16T09:04:32.709Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.709Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 258, y: 331 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 248, y: 332 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 248, y: 332 },
  '마지막활동': '2025-09-16T09:04:32.723Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.723Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 248, y: 332 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 263.2750436295103, y: 330.23980074219304 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 253, y: 331 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 253, y: 331 },
  '마지막활동': '2025-09-16T09:04:32.745Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.745Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 253, y: 331 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 263.3048420783064, y: 330.23632907825555 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 253.3819586355118, y: 331.39239316867827 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 248, y: 332 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 248, y: 332 },
  '마지막활동': '2025-09-16T09:04:32.770Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.770Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 248, y: 332 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 258.32850113253704, y: 330.81609695543256 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 248, y: 332 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 248, y: 332 },
  '마지막활동': '2025-09-16T09:04:32.787Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.787Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 248, y: 332 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 248.46521458729137, y: 331.96521771798547 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T09:04:32.912Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 253.35216018675897, y: 331.3958648326106 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 243, y: 333 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 243, y: 333 },
  '마지막활동': '2025-09-16T09:04:32.916Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:32.916Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 243, y: 333 }
}
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T10:04:32.000Z'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 248.3758192409809, y: 331.9756327097886 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 248.40561768976838, y: 331.9721610458522 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 243, y: 333 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 243, y: 333 },
  '마지막활동': '2025-09-16T09:04:33.129Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:33.129Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 243, y: 333 }
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 243.42927674398163, y: 332.55192892303126 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 231, y: 334 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 231, y: 334 },
  '마지막활동': '2025-09-16T09:04:33.224Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:33.224Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 231, y: 334 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 243.4292767439903, y: 332.55192892303023 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 231, y: 334 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 231, y: 334 },
  '마지막활동': '2025-09-16T09:04:33.239Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:33.239Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 231, y: 334 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 231, y: 334 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 231, y: 334 },
  '마지막활동': '2025-09-16T09:04:33.269Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:33.268Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 231, y: 334 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 231, y: 334 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 231, y: 334 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 231, y: 334 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 236, y: 333 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 236, y: 333 },
  '마지막활동': '2025-09-16T09:04:34.821Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:34.821Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 236, y: 333 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 236, y: 333 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 236, y: 333 },
  '마지막활동': '2025-09-16T09:04:34.908Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:34.908Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 236, y: 333 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 235.84602891215445, y: 332.8526535908918 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 235.87522185741864, y: 332.8457418655333 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 241, y: 332 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 241, y: 332 },
  '마지막활동': '2025-09-16T09:04:35.143Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.143Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 241, y: 332 }
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 265, y: 326 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 265, y: 326 },
  '마지막활동': '2025-09-16T09:04:35.204Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.204Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 265, y: 326 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 240.7212507695816, y: 331.69839545642304 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 275, y: 324 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 275, y: 324 },
  '마지막활동': '2025-09-16T09:04:35.246Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.246Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 275, y: 324 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 294, y: 319 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 294, y: 319 },
  '마지막활동': '2025-09-16T09:04:35.277Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.277Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 294, y: 319 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 265.12655300190494, y: 325.920193058739 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 294, y: 319 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 294, y: 319 },
  '마지막활동': '2025-09-16T09:04:35.280Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.280Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 294, y: 319 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 304, y: 317 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 304, y: 317 },
  '마지막활동': '2025-09-16T09:04:35.293Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.293Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 304, y: 317 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 304, y: 317 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 304, y: 317 },
  '마지막활동': '2025-09-16T09:04:35.306Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.306Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 304, y: 317 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 274.73103199047233, y: 323.64623541658597 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 309, y: 316 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 309, y: 316 },
  '마지막활동': '2025-09-16T09:04:35.334Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.334Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 309, y: 316 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 294.2903053106412, y: 319.0153794280102 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 309, y: 316 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 309, y: 316 },
  '마지막활동': '2025-09-16T09:04:35.344Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.344Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 309, y: 316 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 294.11514763911566, y: 319.05684978014705 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 314, y: 314 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 314, y: 314 },
  '마지막활동': '2025-09-16T09:04:35.370Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.370Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 314, y: 314 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 304.0115560802143, y: 316.7137748844353 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 303.8363984086973, y: 316.7552452365701 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 319, y: 313 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 319, y: 313 },
  '마지막활동': '2025-09-16T09:04:35.380Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.380Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 319, y: 313 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 308.8867779376244, y: 315.55951674997056 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 319, y: 313 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 319, y: 313 },
  '마지막활동': '2025-09-16T09:04:35.403Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.403Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 319, y: 313 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 308.7116202661159, y: 315.6009871021034 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 313.7328068497874, y: 314.4121703408603 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 323, y: 312 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 323, y: 312 },
  '마지막활동': '2025-09-16T09:04:35.429Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.429Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 323, y: 312 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 324, y: 312 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 324, y: 312 },
  '마지막활동': '2025-09-16T09:04:35.442Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.442Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 324, y: 312 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 318.57883576194183, y: 313.2648239317521 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 328, y: 311 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 328, y: 311 },
  '마지막활동': '2025-09-16T09:04:35.459Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.459Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 328, y: 311 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 318.608028707206, y: 313.2579122063936 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 328, y: 311 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 328, y: 311 },
  '마지막활동': '2025-09-16T09:04:35.468Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.468Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 328, y: 311 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 333, y: 310 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 333, y: 310 },
  '마지막활동': '2025-09-16T09:04:35.500Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.500Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 333, y: 310 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 323.454057619369, y: 312.11056579728336 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 333, y: 310 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 333, y: 310 },
  '마지막활동': '2025-09-16T09:04:35.527Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.527Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 333, y: 310 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 323.51244350987184, y: 312.0967423465724 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 338, y: 309 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 338, y: 309 },
  '마지막활동': '2025-09-16T09:04:35.529Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.529Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 338, y: 309 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 328.300086531532, y: 310.9632193881731 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 338, y: 309 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 338, y: 309 },
  '마지막활동': '2025-09-16T09:04:35.531Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.531Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 338, y: 309 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 328.41685831253767, y: 310.9355724867512 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 343, y: 308 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 343, y: 308 },
  '마지막활동': '2025-09-16T09:04:35.549Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.549Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 343, y: 308 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 333.14611544369495, y: 309.8158729790629 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 343, y: 307 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 343, y: 307 },
  '마지막활동': '2025-09-16T09:04:35.562Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.562Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 343, y: 307 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 333.26288722470065, y: 309.78822607764096 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 348, y: 306 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 348, y: 306 },
  '마지막활동': '2025-09-16T09:04:35.566Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.566Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 348, y: 306 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 337.99214435585793, y: 308.66852656995263 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 338.13810908211076, y: 308.63396794317623 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 353, y: 305 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 353, y: 305 },
  '마지막활동': '2025-09-16T09:04:35.592Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.592Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 353, y: 305 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 342.86736621327657, y: 307.5142684354859 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 353, y: 305 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 353, y: 305 },
  '마지막활동': '2025-09-16T09:04:35.617Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.617Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 353, y: 305 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 342.98413799427374, y: 307.486621534066 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 357, y: 304 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 357, y: 304 },
  '마지막활동': '2025-09-16T09:04:35.632Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.632Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 357, y: 304 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 347.7425880706867, y: 306.3600103010212 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 357, y: 304 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 357, y: 304 },
  '마지막활동': '2025-09-16T09:04:35.649Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.649Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 357, y: 304 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 362, y: 303 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 362, y: 303 },
  '마지막활동': '2025-09-16T09:04:35.652Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.652Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 362, y: 303 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 352.58861698284966, y: 305.21266389191095 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 362, y: 303 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 362, y: 303 },
  '마지막활동': '2025-09-16T09:04:35.666Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.666Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 362, y: 303 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 352.6178099281053, y: 305.2057521665545 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 357.43464589501264, y: 304.0653174828007 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 367, y: 302 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 367, y: 302 },
  '마지막활동': '2025-09-16T09:04:35.688Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.688Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 367, y: 302 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 357.4930317855154, y: 304.05149403208975 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 367, y: 302 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 367, y: 302 },
  '마지막활동': '2025-09-16T09:04:35.709Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.709Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 367, y: 302 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 362.2806748071756, y: 302.91797107369047 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 372, y: 301 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 372, y: 301 },
  '마지막활동': '2025-09-16T09:04:35.732Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.732Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 372, y: 301 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 362.36825364293406, y: 302.89723589762303 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 372, y: 301 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 372, y: 301 },
  '마지막활동': '2025-09-16T09:04:35.734Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.734Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 372, y: 301 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 367.2142825550885, y: 301.74988948851484 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 377, y: 299 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 377, y: 299 },
  '마지막활동': '2025-09-16T09:04:35.761Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.761Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 377, y: 299 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 367.2434755003527, y: 301.7429777631563 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 377, y: 299 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 377, y: 299 },
  '마지막활동': '2025-09-16T09:04:35.773Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.773Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 377, y: 299 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 382, y: 298 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 382, y: 298 },
  '마지막활동': '2025-09-16T09:04:35.785Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.785Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 382, y: 298 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 372.08950441250715, y: 300.5956313540481 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 372.08950441250715, y: 300.5956313540481 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 387, y: 297 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 387, y: 297 },
  '마지막활동': '2025-09-16T09:04:35.815Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.815Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 387, y: 297 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 376.93553332467013, y: 299.4482849449379 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 387, y: 297 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 387, y: 297 },
  '마지막활동': '2025-09-16T09:04:35.826Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.826Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 387, y: 297 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 376.99391921518145, y: 299.43446149422493 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 392, y: 296 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 392, y: 296 },
  '마지막활동': '2025-09-16T09:04:35.840Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.840Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 392, y: 296 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 381.7815622368246, y: 298.3009385358297 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 392, y: 296 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 392, y: 296 },
  '마지막활동': '2025-09-16T09:04:35.861Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.861Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 392, y: 296 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 396, y: 295 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 396, y: 295 },
  '마지막활동': '2025-09-16T09:04:35.878Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.878Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 396, y: 295 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 386.62759114898756, y: 297.15359212671945 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 396, y: 295 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 396, y: 295 },
  '마지막활동': '2025-09-16T09:04:35.892Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.892Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 396, y: 295 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 386.62759114898756, y: 297.15359212671945 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 401, y: 294 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 401, y: 294 },
  '마지막활동': '2025-09-16T09:04:35.920Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.919Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 401, y: 294 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 391.5028130064062, y: 295.99933399225273 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 401, y: 294 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 401, y: 294 },
  '마지막활동': '2025-09-16T09:04:35.932Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.932Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 401, y: 294 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 391.5028130063977, y: 295.9993339922547 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 396.3488419185692, y: 294.8519875831425 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 406, y: 293 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 406, y: 293 },
  '마지막활동': '2025-09-16T09:04:35.947Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.947Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 406, y: 293 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 396.3780348638163, y: 294.845075857788 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 406, y: 293 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 406, y: 293 },
  '마지막활동': '2025-09-16T09:04:35.960Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.960Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 406, y: 293 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 411, y: 291 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 411, y: 291 },
  '마지막활동': '2025-09-16T09:04:35.975Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.975Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 411, y: 291 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 401.19487083072363, y: 293.7046411740343 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 411, y: 291 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 411, y: 291 },
  '마지막활동': '2025-09-16T09:04:35.991Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:35.991Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 411, y: 291 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 401.25325672123495, y: 293.6908177233213 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 406.07009268814227, y: 292.5503830395676 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 416, y: 290 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 416, y: 290 },
  '마지막활동': '2025-09-16T09:04:36.028Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.028Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 416, y: 290 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 406.12847857864506, y: 292.53655958885656 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 416, y: 290 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 416, y: 290 },
  '마지막활동': '2025-09-16T09:04:36.043Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.043Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 416, y: 290 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 410.88692865504953, y: 291.4099483558138 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 421, y: 289 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 421, y: 289 },
  '마지막활동': '2025-09-16T09:04:36.045Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.045Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 421, y: 289 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 411.0037004360637, y: 291.38230145438985 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 421, y: 289 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 421, y: 289 },
  '마지막활동': '2025-09-16T09:04:36.060Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.060Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 421, y: 289 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 426, y: 288 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 426, y: 288 },
  '마지막활동': '2025-09-16T09:04:36.076Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.076Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 426, y: 288 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 415.8497293482267, y: 290.2349550452796 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 415.84972934821815, y: 290.23495504528165 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 420.7249512056453, y: 289.0806969108129 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 430, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 430, y: 287 },
  '마지막활동': '2025-09-16T09:04:36.124Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.124Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 430, y: 287 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 420.6957582603811, y: 289.0876086361714 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 430, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 430, y: 287 },
  '마지막활동': '2025-09-16T09:04:36.140Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.140Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 430, y: 287 }
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 425.6001730630555, y: 287.92643877634816 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 440, y: 284 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 440, y: 284 },
  '마지막활동': '2025-09-16T09:04:36.151Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.151Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 440, y: 284 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 435, y: 286 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 435, y: 286 },
  '마지막활동': '2025-09-16T09:04:36.263Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.263Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 435, y: 286 }
}
2025-09-16T09:04:36.265Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T10:04:36.000Z'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 430.44620197521846, y: 286.7790923672379 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 430.4753949204741, y: 286.77218064188145 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 440.16745274479155, y: 284.477487823663 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 445, y: 283 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 445, y: 283 },
  '마지막활동': '2025-09-16T09:04:36.501Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.501Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 445, y: 283 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 435.35061677789275, y: 285.61792250741473 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 469, y: 278 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 469, y: 278 },
  '마지막활동': '2025-09-16T09:04:36.598Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.598Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 469, y: 278 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 445.0426746022017, y: 283.3232296891983 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 479, y: 275 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 479, y: 275 },
  '마지막활동': '2025-09-16T09:04:36.623Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.623Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 479, y: 275 }
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 499, y: 271 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 499, y: 271 },
  '마지막활동': '2025-09-16T09:04:36.657Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.657Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 499, y: 271 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 469.3895909440392, y: 277.55885074222124 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 489, y: 273 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 489, y: 273 },
  '마지막활동': '2025-09-16T09:04:36.674Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.674Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 489, y: 273 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 508, y: 268 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 508, y: 268 },
  '마지막활동': '2025-09-16T09:04:36.684Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.684Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 508, y: 268 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 479.05245582309243, y: 275.27106964936127 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 494, y: 272 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 494, y: 272 },
  '마지막활동': '2025-09-16T09:04:36.694Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.694Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 494, y: 272 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 513, y: 267 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 513, y: 267 },
  '마지막활동': '2025-09-16T09:04:36.706Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.706Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 513, y: 267 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 498.5533432527669, y: 270.6540371114944 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 498, y: 271 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 498, y: 271 },
  '마지막활동': '2025-09-16T09:04:36.733Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.733Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 498, y: 271 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 488.74451364740986, y: 272.97637683114283 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 518, y: 266 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 518, y: 266 },
  '마지막활동': '2025-09-16T09:04:36.746Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.746Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 518, y: 266 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 508.3037869676042, y: 268.345520842561 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 493.5905425595643, y: 271.82903042203463 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 513.2082017702785, y: 267.1843509827378 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 523, y: 265 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 523, y: 265 },
  '마지막활동': '2025-09-16T09:04:36.784Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.784Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 523, y: 265 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 498.4657644169745, y: 270.6747722875699 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 523, y: 265 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 523, y: 265 },
  '마지막활동': '2025-09-16T09:04:36.805Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.805Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 523, y: 265 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 518.0542306824415, y: 266.03700457362754 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 528, y: 264 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 528, y: 264 },
  '마지막활동': '2025-09-16T09:04:36.826Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.826Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 528, y: 264 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 533, y: 263 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 533, y: 263 },
  '마지막활동': '2025-09-16T09:04:36.839Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.838Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 533, y: 263 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 522.9294525398601, y: 264.8827464391608 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 533, y: 263 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 533, y: 263 },
  '마지막활동': '2025-09-16T09:04:36.863Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.863Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 533, y: 263 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 522.9002595946044, y: 264.8896581645173 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 537, y: 261 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 537, y: 261 },
  '마지막활동': '2025-09-16T09:04:36.878Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.878Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 537, y: 261 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 527.8046743972702, y: 263.7284883046961 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 538, y: 261 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 538, y: 261 },
  '마지막활동': '2025-09-16T09:04:36.892Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.892Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 538, y: 261 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 532.6215103641861, y: 262.58805362094034 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 542, y: 260 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 542, y: 260 },
  '마지막활동': '2025-09-16T09:04:36.908Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.908Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 542, y: 260 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 542, y: 260 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 542, y: 260 },
  '마지막활동': '2025-09-16T09:04:36.924Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.924Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 542, y: 260 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 532.6507033094247, y: 262.5811418955879 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 547, y: 259 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 547, y: 259 },
  '마지막활동': '2025-09-16T09:04:36.941Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.941Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 547, y: 259 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 537.467539276349, y: 261.4407072118301 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 547, y: 259 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 547, y: 259 },
  '마지막활동': '2025-09-16T09:04:36.962Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.962Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 547, y: 259 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 537.5259251668433, y: 261.4268837611212 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 552, y: 258 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 552, y: 258 },
  '마지막활동': '2025-09-16T09:04:36.976Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:04:36.976Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 552, y: 258 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 542.3427611337592, y: 260.28644907736543 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 542.3719540790063, y: 260.27953735201095 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 547.2179829911778, y: 259.1321909428987 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 547.2179829911693, y: 259.1321909429007 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 552, y: 258 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test3', 'test1' ]
🚪 test3 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': null,
  '마지막활동': '2025-09-16T09:12:01.492Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 명시적 퇴실 - 대기실로 이동: test3 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test2 (4)
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 2
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test3 (7) left room 2
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2', 'test1' ]
💾 사용자 입실 상태 DB 저장: 7 → 맵 null
📥 join-map 이벤트 수신: {
  userId: 7,
  username: 'test3',
  mapId: 2,
  characterId: 4,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 4,
    name: 'test3',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test3 맵 입장 시작: {
  mapId: 2,
  characterId: 4,
  position: { x: 339.00000762939453, y: 408.5915493965149 },
  characterInfo: '있음',
  userId: 7
}
✅ test3 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 4 }
🏠 test3 맵 입장 - 초기 위치 및 영역 설정: {
  position: { x: 339.00000762939453, y: 408.5915493965149 },
  area: '공개 영역'
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 339.00000762939453, y: 408.5915493965149 },
  '마지막활동': '2025-09-16T09:12:01.512Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test3 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test3',
  '위치': { x: 339.00000762939453, y: 408.5915493965149 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test2 (4)
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 3
👥 방 2의 참가자 목록: [
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 552, y: 258 },
    direction: 'right',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: 2025-09-15T23:31:26.126Z,
      updatedAt: 2025-09-16T02:44:12.723Z,
      userId: 4
    },
    privateAreaId: null
  },
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 560, y: 373.3333333333333 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 339.00000762939453, y: 408.5915493965149 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test2 (4)
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 3
🏠 test3 맵 입장 완료 - 최종 상태: {
  mapId: 2,
  position: { x: 339.00000762939453, y: 408.5915493965149 },
  participants: 3
}
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 339, y: 409 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 339, y: 409 },
  '마지막활동': '2025-09-16T09:12:01.516Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:01.516Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 339, y: 409 }
}
💾 사용자 입실 상태 DB 저장: 7 → 맵 2
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 491, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 491, y: 287 },
  '마지막활동': '2025-09-16T09:12:01.526Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:01.526Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 491, y: 287 }
}
🚪 test2 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': null,
  '마지막활동': '2025-09-16T09:12:01.531Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 명시적 퇴실 - 대기실로 이동: test2 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 2
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test2 (4) left room 2
💾 사용자 입실 상태 DB 저장: 4 → 맵 null
📥 join-map 이벤트 수신: {
  userId: 4,
  username: 'test2',
  mapId: 2,
  characterId: 3,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId'
  ],
  characterInfoDetail: {
    id: 3,
    name: 'test2',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test2 맵 입장 시작: {
  mapId: 2,
  characterId: 3,
  position: { x: 552, y: 258 },
  characterInfo: '있음',
  userId: 4
}
✅ test2 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 3 }
🏠 test2 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 552, y: 258 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 552, y: 258 },
  '마지막활동': '2025-09-16T09:12:01.549Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test2 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test2',
  '위치': { x: 552, y: 258 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 3
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 560, y: 373.3333333333333 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 552, y: 258 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 3
🏠 test2 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 552, y: 258 }, participants: 3 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 552, y: 258 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 552, y: 258 },
  '마지막활동': '2025-09-16T09:12:01.553Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:01.553Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 552, y: 258 }
}
💾 사용자 입실 상태 DB 저장: 4 → 맵 2
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 339.00000762939453, y: 408.5915493965149 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 491, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 491, y: 287 },
  '마지막활동': '2025-09-16T09:12:01.597Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:01.597Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 491, y: 287 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 491, y: 287 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 552, y: 258 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 491, y: 287 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test3', 'test2' ]
🚪 test1 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': null,
  '마지막활동': '2025-09-16T09:12:02.229Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (test1)
📊 명시적 퇴실 - 대기실로 이동: test1 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test1 (3) left room 2
📥 join-map 이벤트 수신: {
  userId: 3,
  username: 'test1',
  mapId: 2,
  characterId: 2,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 2,
    name: 'test1',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test1 맵 입장 시작: {
  mapId: 2,
  characterId: 2,
  position: { x: 560, y: 373.3333333333333 },
  characterInfo: '있음',
  userId: 3
}
✅ test1 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 2 }
🏠 test1 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 560, y: 373.3333333333333 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 560, y: 373.3333333333333 },
  '마지막활동': '2025-09-16T09:12:02.234Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test1 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test1',
  '위치': { x: 560, y: 373.3333333333333 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 3
👥 방 2의 참가자 목록: [
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 491, y: 287 },
    direction: 'left',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 491, y: 287 },
    direction: 'right',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  },
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 560, y: 373.3333333333333 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 3
🏠 test1 맵 입장 완료 - 최종 상태: {
  mapId: 2,
  position: { x: 560, y: 373.3333333333333 },
  participants: 3
}
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 560, y: 373 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 560, y: 373 },
  '마지막활동': '2025-09-16T09:12:02.236Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:02.236Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 560, y: 373 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 491, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 491, y: 287 },
  '마지막활동': '2025-09-16T09:12:02.239Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:02.239Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 491, y: 287 }
}
💾 사용자 입실 상태 DB 저장: 3 → 맵 null
💾 사용자 입실 상태 DB 저장: 3 → 맵 2
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T09:12:02.700Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T10:12:02.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 560, y: 373.3333333333333 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 491, y: 287 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T09:12:03.245Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T10:12:03.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T09:12:05.241Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T10:12:05.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🚪 test2 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': null,
  '마지막활동': '2025-09-16T09:12:07.619Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 명시적 퇴실 - 대기실로 이동: test2 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test3 (7)
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 2
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test2 (4) left room 2
💾 사용자 입실 상태 DB 저장: 4 → 맵 null
🚪 test3 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': null,
  '마지막활동': '2025-09-16T09:12:07.636Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 명시적 퇴실 - 대기실로 이동: test3 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 1
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test3 (7) left room 2
💾 사용자 입실 상태 DB 저장: 7 → 맵 null
📥 join-map 이벤트 수신: {
  userId: 7,
  username: 'test3',
  mapId: 2,
  characterId: 4,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 4,
    name: 'test3',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test3 맵 입장 시작: {
  mapId: 2,
  characterId: 4,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 7
}
✅ test3 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 4 }
🏠 test3 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:12:07.666Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test3 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 2
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 2
🏠 test3 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 2 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:12:07.670Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:07.670Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test3 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': null,
  '마지막활동': '2025-09-16T09:12:07.671Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 명시적 퇴실 - 대기실로 이동: test3 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 1
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test3 (7) left room 2
💾 사용자 입실 상태 DB 저장: 7 → 맵 2
💾 사용자 입실 상태 DB 저장: 7 → 맵 null
📥 join-map 이벤트 수신: {
  userId: 7,
  username: 'test3',
  mapId: 2,
  characterId: 4,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 4,
    name: 'test3',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test3 맵 입장 시작: {
  mapId: 2,
  characterId: 4,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 7
}
✅ test3 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 4 }
🏠 test3 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:12:07.687Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test3 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 2
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 2
🏠 test3 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 2 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:12:07.690Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:07.690Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
💾 사용자 입실 상태 DB 저장: 7 → 맵 2
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 491, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 491, y: 287 },
  '마지막활동': '2025-09-16T09:12:07.711Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:07.711Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 491, y: 287 }
}
📥 join-map 이벤트 수신: {
  userId: 4,
  username: 'test2',
  mapId: 2,
  characterId: 3,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId'
  ],
  characterInfoDetail: {
    id: 3,
    name: 'test2',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test2 맵 입장 시작: {
  mapId: 2,
  characterId: 3,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 4
}
✅ test2 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 3 }
🏠 test2 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:12:07.716Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test2 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 3
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 3
🏠 test2 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 3 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:12:07.721Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:07.721Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test2 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': null,
  '마지막활동': '2025-09-16T09:12:07.722Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 명시적 퇴실 - 대기실로 이동: test2 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 2
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test2 (4) left room 2
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
💾 사용자 입실 상태 DB 저장: 4 → 맵 2
💾 사용자 입실 상태 DB 저장: 4 → 맵 null
📥 join-map 이벤트 수신: {
  userId: 4,
  username: 'test2',
  mapId: 2,
  characterId: 3,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId'
  ],
  characterInfoDetail: {
    id: 3,
    name: 'test2',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test2 맵 입장 시작: {
  mapId: 2,
  characterId: 3,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 4
}
✅ test2 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 3 }
🏠 test2 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:12:07.761Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test2 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 3
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 3
🏠 test2 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 3 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:12:07.764Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:07.764Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
💾 사용자 입실 상태 DB 저장: 4 → 맵 2
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 491, y: 287 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T09:12:07.829Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T10:12:07.000Z'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 491, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 491, y: 287 },
  '마지막활동': '2025-09-16T09:12:07.875Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:07.875Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 491, y: 287 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 491, y: 287 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test3', 'test2' ]
2025-09-16T09:12:08.121Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T10:12:08.000Z'
}
🚪 test1 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': null,
  '마지막활동': '2025-09-16T09:12:08.230Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (test1)
📊 명시적 퇴실 - 대기실로 이동: test1 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test1 (3) left room 2
📥 join-map 이벤트 수신: {
  userId: 3,
  username: 'test1',
  mapId: 2,
  characterId: 2,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 2,
    name: 'test1',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test1 맵 입장 시작: {
  mapId: 2,
  characterId: 2,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 3
}
✅ test1 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 2 }
🏠 test1 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:12:08.236Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test1 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 3
👥 방 2의 참가자 목록: [
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  },
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 3
🏠 test1 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 3 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:12:08.240Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:08.240Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test1 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': null,
  '마지막활동': '2025-09-16T09:12:08.242Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (test1)
📊 명시적 퇴실 - 대기실로 이동: test1 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test1 (3) left room 2
📥 join-map 이벤트 수신: {
  userId: 3,
  username: 'test1',
  mapId: 2,
  characterId: 2,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 2,
    name: 'test1',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test1 맵 입장 시작: {
  mapId: 2,
  characterId: 2,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 3
}
✅ test1 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 2 }
🏠 test1 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:12:08.243Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test1 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 3
👥 방 2의 참가자 목록: [
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  },
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 3
🏠 test1 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 3 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T09:12:08.245Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:08.245Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
💾 사용자 입실 상태 DB 저장: 3 → 맵 null
💾 사용자 입실 상태 DB 저장: 3 → 맵 2
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 491, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 491, y: 287 },
  '마지막활동': '2025-09-16T09:12:08.248Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T09:12:08.248Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 491, y: 287 }
}
💾 사용자 입실 상태 DB 저장: 3 → 맵 null
💾 사용자 입실 상태 DB 저장: 3 → 맵 2
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 491, y: 287 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T09:12:09.239Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T10:12:09.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:11:48.186Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:11:48.000Z'
}
2025-09-16T10:11:48.275Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:11:48.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:11:48.914Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:11:48.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:11:54.774Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:11:54.000Z'
}
2025-09-16T10:11:54.911Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:11:54.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:11:55.264Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:11:55.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:12:26.153Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:12:26.000Z'
}
2025-09-16T10:12:26.351Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:12:26.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:12:26.663Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:12:26.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:12:34.399Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:12:34.000Z'
}
2025-09-16T10:12:34.502Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:12:34.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:12:34.650Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:12:34.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:12:52.818Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:12:52.000Z'
}
2025-09-16T10:12:52.961Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:12:52.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:12:53.318Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:12:53.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:13:08.759Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:13:08.000Z'
}
2025-09-16T10:13:08.855Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:13:08.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:13:09.162Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:13:09.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:13:48.445Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:13:48.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
2025-09-16T10:13:48.622Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:13:48.000Z'
}
2025-09-16T10:13:49.001Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:13:49.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 496, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 496, y: 287 },
  '마지막활동': '2025-09-16T10:15:58.713Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.713Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 496, y: 287 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 501, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 501, y: 287 },
  '마지막활동': '2025-09-16T10:15:58.727Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.727Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 501, y: 287 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 506, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 506, y: 287 },
  '마지막활동': '2025-09-16T10:15:58.743Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.743Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 506, y: 287 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 511, y: 286 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 511, y: 286 },
  '마지막활동': '2025-09-16T10:15:58.761Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.761Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 511, y: 286 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 495.7975840682782, y: 286.8477268644723 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 516, y: 286 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 516, y: 286 },
  '마지막활동': '2025-09-16T10:15:58.775Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.775Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 516, y: 286 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 500.7750775392843, y: 286.689743486357 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 521, y: 286 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 521, y: 286 },
  '마지막활동': '2025-09-16T10:15:58.791Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.791Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 521, y: 286 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 505.78255591060554, y: 286.5308084011482 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 526, y: 286 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 526, y: 286 },
  '마지막활동': '2025-09-16T10:15:58.809Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.809Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 526, y: 286 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 510.7900342816475, y: 286.3718733159483 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 531, y: 286 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 531, y: 286 },
  '마지막활동': '2025-09-16T10:15:58.825Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.825Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 531, y: 286 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 515.7675277526537, y: 286.21388993783296 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 536, y: 286 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 536, y: 286 },
  '마지막활동': '2025-09-16T10:15:58.842Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.842Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 536, y: 286 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 520.7450212233806, y: 286.0559065597265 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 541, y: 285 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 541, y: 285 },
  '마지막활동': '2025-09-16T10:15:58.858Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.858Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 541, y: 285 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 525.7824844950169, y: 285.8960197674242 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 546, y: 285 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 546, y: 285 },
  '마지막활동': '2025-09-16T10:15:58.875Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.875Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 546, y: 285 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 530.759977966023, y: 285.7380363893089 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 551, y: 285 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 551, y: 285 },
  '마지막활동': '2025-09-16T10:15:58.891Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.891Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 551, y: 285 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 535.73747143675, y: 285.58005301120244 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 556, y: 285 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 556, y: 285 },
  '마지막활동': '2025-09-16T10:15:58.909Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.909Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 556, y: 285 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 540.7749347083862, y: 285.42016621890014 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 561, y: 285 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 561, y: 285 },
  '마지막활동': '2025-09-16T10:15:58.925Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.925Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 561, y: 285 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 545.7524281793924, y: 285.2621828407848 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 566, y: 285 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 566, y: 285 },
  '마지막활동': '2025-09-16T10:15:58.942Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.942Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 566, y: 285 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 550.7299216501193, y: 285.10419946267837 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 571, y: 284 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 571, y: 284 },
  '마지막활동': '2025-09-16T10:15:58.958Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.958Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 571, y: 284 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 555.7673849217556, y: 284.94431267037606 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 560.7448783927617, y: 284.78632929226075 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 576, y: 284 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 576, y: 284 },
  '마지막활동': '2025-09-16T10:15:58.979Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.979Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 576, y: 284 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 565.752356764083, y: 284.62739420705196 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 581, y: 284 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 581, y: 284 },
  '마지막활동': '2025-09-16T10:15:58.995Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:58.995Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 581, y: 284 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 570.7298502348099, y: 284.4694108289455 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 586, y: 284 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 586, y: 284 },
  '마지막활동': '2025-09-16T10:15:59.011Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.011Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 586, y: 284 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 575.7373286061311, y: 284.31047574373673 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 591, y: 284 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 591, y: 284 },
  '마지막활동': '2025-09-16T10:15:59.031Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.031Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 591, y: 284 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 596, y: 284 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 596, y: 284 },
  '마지막활동': '2025-09-16T10:15:59.043Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.043Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 596, y: 284 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 580.7448069774523, y: 284.15154065852795 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 585.9921645521315, y: 283.9849919165445 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 601, y: 284 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 601, y: 284 },
  '마지막활동': '2025-09-16T10:15:59.064Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.064Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 601, y: 284 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 606, y: 283 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 606, y: 283 },
  '마지막활동': '2025-09-16T10:15:59.081Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.081Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 606, y: 283 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 590.9696580228584, y: 283.82700853843806 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 595.9771363941796, y: 283.6680734532293 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 611, y: 283 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 611, y: 283 },
  '마지막활동': '2025-09-16T10:15:59.098Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.098Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 611, y: 283 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 616, y: 283 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 616, y: 283 },
  '마지막활동': '2025-09-16T10:15:59.114Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.114Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 616, y: 283 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 600.9546298649066, y: 283.51009007512283 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 621, y: 283 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 621, y: 283 },
  '마지막활동': '2025-09-16T10:15:59.131Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.131Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 621, y: 283 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 605.9920931365428, y: 283.35020328282053 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 626, y: 283 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 626, y: 283 },
  '마지막활동': '2025-09-16T10:15:59.148Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.148Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 626, y: 283 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 610.969586607549, y: 283.1922199047052 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 631, y: 283 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 631, y: 283 },
  '마지막활동': '2025-09-16T10:15:59.164Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.164Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 631, y: 283 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 615.9470800782759, y: 283.03423652659876 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 636, y: 282 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 636, y: 282 },
  '마지막활동': '2025-09-16T10:15:59.181Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.180Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 636, y: 282 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 620.9545584495971, y: 282.87530144139 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 641, y: 282 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 641, y: 282 },
  '마지막활동': '2025-09-16T10:15:59.197Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.197Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 641, y: 282 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 625.9620368209183, y: 282.7163663561812 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 646, y: 282 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 646, y: 282 },
  '마지막활동': '2025-09-16T10:15:59.214Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.214Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 646, y: 282 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 630.9695151922396, y: 282.5574312709724 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 651, y: 282 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 651, y: 282 },
  '마지막활동': '2025-09-16T10:15:59.231Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.231Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 651, y: 282 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 635.9470086629665, y: 282.39944789286596 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 656, y: 282 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 656, y: 282 },
  '마지막활동': '2025-09-16T10:15:59.247Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.247Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 656, y: 282 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 640.9544870342877, y: 282.2405128076572 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 661, y: 282 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 661, y: 282 },
  '마지막활동': '2025-09-16T10:15:59.264Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.264Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 661, y: 282 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 645.9619654056089, y: 282.0815777224484 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 666, y: 281 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 666, y: 281 },
  '마지막활동': '2025-09-16T10:15:59.281Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.281Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 666, y: 281 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 650.9694437766508, y: 281.9226426372485 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 671, y: 281 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 671, y: 281 },
  '마지막활동': '2025-09-16T10:15:59.298Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.298Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 671, y: 281 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 655.9469372476569, y: 281.76465925913317 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 676, y: 281 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 676, y: 281 },
  '마지막활동': '2025-09-16T10:15:59.316Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.316Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 676, y: 281 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 660.9544156189781, y: 281.6057241739244 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 681, y: 281 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 681, y: 281 },
  '마지막활동': '2025-09-16T10:15:59.331Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:15:59.331Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 681, y: 281 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 665.9319090897051, y: 281.44774079581794 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 670.9393874610263, y: 281.28880571060915 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 675.9168809317532, y: 281.1308223325027 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 680.9243593030744, y: 280.9718872472939 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T10:15:59.468Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_public',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:15:59.000Z'
}
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2', 'test1' ]
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'lobby',
  currentRoom: null,
  position: null,
  area: null,
  areaType: null
}
⚠️ mapId 삭제 시도 차단 - 유지: 2
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:00.602Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'lobby',
  '마지막활동': '2025-09-16T10:16:00.602Z',
  '입실공간': '대기실',
  mapId: null,
  '위치': null,
  '영역': null,
  '영역유형': null
}
🚪 test1 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:00.607Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (test1)
📊 명시적 퇴실 - 대기실로 이동: test1 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test3 (7)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test1 (3) left room 2
💾 사용자 입실 상태 DB 저장: 3 → 맵 null
2025-09-16T10:16:00.636Z - OPTIONS /api/maps from 192.168.200.106
2025-09-16T10:16:00.637Z - OPTIONS /api/maps from 192.168.200.106
2025-09-16T10:16:00.638Z - GET /api/maps from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
2025-09-16T10:16:00.654Z - GET /api/maps from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
2025-09-16T10:16:00.660Z - OPTIONS /api/user/logged-in-users from 192.168.200.106
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2' ]
2025-09-16T10:16:00.662Z - GET /api/user/logged-in-users from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
2025-09-16T10:16:00.676Z - GET /api/user/logged-in-users from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test3', 'test2' ]
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'lobby',
  currentRoom: null,
  position: null,
  area: null,
  areaType: null
}
⚠️ mapId 삭제 시도 차단 - 유지: 2
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:04.575Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'lobby',
  '마지막활동': '2025-09-16T10:16:04.575Z',
  '입실공간': '대기실',
  mapId: null,
  '위치': null,
  '영역': null,
  '영역유형': null
}
🚪 test3 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:04.630Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (test1)
📊 명시적 퇴실 - 대기실로 이동: test3 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 1
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test3 (7) left room 2
💾 사용자 입실 상태 DB 저장: 7 → 맵 null
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
2025-09-16T10:16:04.704Z - OPTIONS /api/maps from 192.168.200.102
2025-09-16T10:16:04.714Z - OPTIONS /api/maps from 192.168.200.102
2025-09-16T10:16:04.714Z - GET /api/maps from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
2025-09-16T10:16:04.736Z - GET /api/maps from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
2025-09-16T10:16:04.766Z - OPTIONS /api/user/logged-in-users from 192.168.200.102
2025-09-16T10:16:04.770Z - GET /api/user/logged-in-users from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
2025-09-16T10:16:04.802Z - GET /api/user/logged-in-users from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test2' ]
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'lobby',
  currentRoom: null,
  position: null,
  area: null,
  areaType: null
}
⚠️ mapId 삭제 시도 차단 - 유지: 2
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:06.809Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'lobby',
  '마지막활동': '2025-09-16T10:16:06.809Z',
  '입실공간': '대기실',
  mapId: null,
  '위치': null,
  '영역': null,
  '영역유형': null
}
🚪 test2 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:06.891Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (test1)
📊 명시적 퇴실 - 대기실로 이동: test2 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2에 소켓이 없음
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test2 (4) left room 2
💾 사용자 입실 상태 DB 저장: 4 → 맵 null
2025-09-16T10:16:06.992Z - OPTIONS /api/maps from 192.168.200.108
2025-09-16T10:16:07.006Z - OPTIONS /api/maps from 192.168.200.108
2025-09-16T10:16:07.006Z - GET /api/maps from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
2025-09-16T10:16:07.032Z - GET /api/maps from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
2025-09-16T10:16:07.424Z - OPTIONS /api/user/logged-in-users from 192.168.200.108
2025-09-16T10:16:07.425Z - OPTIONS /api/user/logged-in-users from 192.168.200.108
2025-09-16T10:16:07.435Z - GET /api/user/logged-in-users from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
2025-09-16T10:16:07.447Z - GET /api/user/logged-in-users from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
2025-09-16T10:16:10.217Z - OPTIONS /api/maps from 192.168.200.106
2025-09-16T10:16:10.219Z - GET /api/maps from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
2025-09-16T10:16:10.233Z - OPTIONS /api/user/logged-in-users from 192.168.200.106
2025-09-16T10:16:10.235Z - GET /api/user/logged-in-users from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
📥 join-map 이벤트 수신: {
  userId: 3,
  username: 'test1',
  mapId: 2,
  characterId: 2,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 2,
    name: 'test1',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test1 맵 입장 시작: {
  mapId: 2,
  characterId: 2,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 3
}
✅ test1 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 2 }
🏠 test1 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:11.218Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test1 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 1
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'lobby',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 1
🏠 test1 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 1 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:11.222Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:11.222Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test1 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:11.223Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (test1)
📊 명시적 퇴실 - 대기실로 이동: test1 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2에 소켓이 없음
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test1 (3) left room 2
📥 join-map 이벤트 수신: {
  userId: 3,
  username: 'test1',
  mapId: 2,
  characterId: 2,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 2,
    name: 'test1',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test1 맵 입장 시작: {
  mapId: 2,
  characterId: 2,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 3
}
✅ test1 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 2 }
🏠 test1 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:11.225Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test1 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 1
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 1
🏠 test1 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 1 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:11.227Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:11.227Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
2025-09-16T10:16:11.229Z - OPTIONS /api/maps/2 from 192.168.200.106
💾 사용자 입실 상태 DB 저장: 3 → 맵 2
💾 사용자 입실 상태 DB 저장: 3 → 맵 null
🚪 test1 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:11.230Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (test1)
📊 명시적 퇴실 - 대기실로 이동: test1 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2에 소켓이 없음
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test1 (3) left room 2
💾 사용자 입실 상태 DB 저장: 3 → 맵 2
2025-09-16T10:16:11.233Z - GET /api/maps/2 from 192.168.200.106
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
💾 사용자 입실 상태 DB 저장: 3 → 맵 null
Auth 미들웨어 - 인증 성공, 사용자: test1
🔍 서버: 맵 조회 요청: { mapId: '2', userId: 3 }
🔍 서버: 맵 조회 결과: 성공
✅ 서버: 맵 조회 성공: { id: 2, name: 'new world', creatorId: 3 }
📥 join-map 이벤트 수신: {
  userId: 3,
  username: 'test1',
  mapId: 2,
  characterId: 2,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 2,
    name: 'test1',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test1 맵 입장 시작: {
  mapId: 2,
  characterId: 2,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 3
}
✅ test1 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 2 }
🏠 test1 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:11.251Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test1 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 1
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 1
🏠 test1 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 1 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:11.254Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:11.254Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test1 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:11.255Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 wait (방 wait) (test1)
📊 명시적 퇴실 - 대기실로 이동: test1 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2에 소켓이 없음
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test1 (3) left room 2
📥 join-map 이벤트 수신: {
  userId: 3,
  username: 'test1',
  mapId: 2,
  characterId: 2,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 2,
    name: 'test1',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test1 맵 입장 시작: {
  mapId: 2,
  characterId: 2,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 3
}
✅ test1 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 2 }
🏠 test1 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:11.257Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test1 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 1
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 1
🏠 test1 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 1 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:11.259Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:11.259Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 3,
  username: 'test1',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 491, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test1 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test1',
  '위치': { x: 491, y: 287 },
  '마지막활동': '2025-09-16T10:16:11.260Z'
}
✅ 방 정보 영구 보존: test1 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:11.260Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 491, y: 287 }
}
💾 사용자 입실 상태 DB 저장: 3 → 맵 null
💾 사용자 입실 상태 DB 저장: 3 → 맵 2
💾 사용자 입실 상태 DB 저장: 3 → 맵 2
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test1',
  mapId: 2,
  position: { x: 491, y: 287 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T10:16:11.374Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:16:11.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1' ]
📥 join-map 이벤트 수신: {
  userId: 4,
  username: 'test2',
  mapId: 2,
  characterId: 3,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId'
  ],
  characterInfoDetail: {
    id: 3,
    name: 'test2',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test2 맵 입장 시작: {
  mapId: 2,
  characterId: 3,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 4
}
✅ test2 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 3 }
🏠 test2 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:13.717Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test2 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'lobby',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
🏠 test2 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 2 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
💾 사용자 입실 상태 DB 저장: 4 → 맵 2
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:13.738Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:13.738Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test2 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:13.745Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 명시적 퇴실 - 대기실로 이동: test2 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 1
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test2 (4) left room 2
📥 join-map 이벤트 수신: {
  userId: 4,
  username: 'test2',
  mapId: 2,
  characterId: 3,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId'
  ],
  characterInfoDetail: {
    id: 3,
    name: 'test2',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test2 맵 입장 시작: {
  mapId: 2,
  characterId: 3,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 4
}
✅ test2 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 3 }
🏠 test2 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:13.747Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test2 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
🏠 test2 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 2 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
💾 사용자 입실 상태 DB 저장: 4 → 맵 null
💾 사용자 입실 상태 DB 저장: 4 → 맵 2
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:13.754Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:13.754Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test2 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:13.766Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 명시적 퇴실 - 대기실로 이동: test2 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 1
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test2 (4) left room 2
💾 사용자 입실 상태 DB 저장: 4 → 맵 null
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T10:16:13.878Z - OPTIONS /api/maps/2 from 192.168.200.108
2025-09-16T10:16:13.896Z - GET /api/maps/2 from 192.168.200.108
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🔍 서버: 맵 조회 요청: { mapId: '2', userId: 4 }
🔍 서버: 맵 조회 결과: 성공
✅ 서버: 맵 조회 성공: { id: 2, name: 'new world', creatorId: 3 }
📥 join-map 이벤트 수신: {
  userId: 4,
  username: 'test2',
  mapId: 2,
  characterId: 3,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId'
  ],
  characterInfoDetail: {
    id: 3,
    name: 'test2',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test2 맵 입장 시작: {
  mapId: 2,
  characterId: 3,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 4
}
✅ test2 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 3 }
🏠 test2 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:14.018Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test2 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
🏠 test2 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 2 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
💾 사용자 입실 상태 DB 저장: 4 → 맵 2
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:14.039Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:14.039Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test2 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:14.041Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 wait (방 wait) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 명시적 퇴실 - 대기실로 이동: test2 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 1
📋 참가자 추가: test1 (3)
📋 맵 2의 최종 참가자 수: 1
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test2 (4) left room 2
💾 사용자 입실 상태 DB 저장: 4 → 맵 null
📥 join-map 이벤트 수신: {
  userId: 4,
  username: 'test2',
  mapId: 2,
  characterId: 3,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId'
  ],
  characterInfoDetail: {
    id: 3,
    name: 'test2',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test2 맵 입장 시작: {
  mapId: 2,
  characterId: 3,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 4
}
✅ test2 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 3 }
🏠 test2 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:14.056Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test2 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
🏠 test2 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 2 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:14.058Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:14.058Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
💾 사용자 입실 상태 DB 저장: 4 → 맵 2
👤 사용자 상태 업데이트 수신: {
  userId: 4,
  username: 'test2',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 491, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test2 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test2',
  '위치': { x: 491, y: 287 },
  '마지막활동': '2025-09-16T10:16:14.073Z'
}
✅ 방 정보 영구 보존: test2 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:14.073Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 491, y: 287 }
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test2',
  mapId: 2,
  position: { x: 491, y: 287 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2' ]
2025-09-16T10:16:14.285Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:16:14.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2' ]
📥 join-map 이벤트 수신: {
  userId: 7,
  username: 'test3',
  mapId: 2,
  characterId: 4,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 4,
    name: 'test3',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test3 맵 입장 시작: {
  mapId: 2,
  characterId: 4,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 7
}
✅ test3 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 4 }
🏠 test3 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:14.670Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test3 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 3
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'lobby',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 3
🏠 test3 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 3 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
💾 사용자 입실 상태 DB 저장: 7 → 맵 2
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:14.687Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:14.686Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test3 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:14.698Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 명시적 퇴실 - 대기실로 이동: test3 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test3 (7) left room 2
📥 join-map 이벤트 수신: {
  userId: 7,
  username: 'test3',
  mapId: 2,
  characterId: 4,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 4,
    name: 'test3',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test3 맵 입장 시작: {
  mapId: 2,
  characterId: 4,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 7
}
✅ test3 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 4 }
🏠 test3 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:14.701Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test3 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 3
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 3
🏠 test3 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 3 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:14.704Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:14.704Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test3 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:14.705Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 명시적 퇴실 - 대기실로 이동: test3 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test3 (7) left room 2
💾 사용자 입실 상태 DB 저장: 7 → 맵 null
💾 사용자 입실 상태 DB 저장: 7 → 맵 2
💾 사용자 입실 상태 DB 저장: 7 → 맵 null
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T10:16:14.763Z - OPTIONS /api/maps/2 from 192.168.200.102
2025-09-16T10:16:14.784Z - GET /api/maps/2 from 192.168.200.102
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🔍 서버: 맵 조회 요청: { mapId: '2', userId: 7 }
🔍 서버: 맵 조회 결과: 성공
✅ 서버: 맵 조회 성공: { id: 2, name: 'new world', creatorId: 3 }
📥 join-map 이벤트 수신: {
  userId: 7,
  username: 'test3',
  mapId: 2,
  characterId: 4,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 4,
    name: 'test3',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test3 맵 입장 시작: {
  mapId: 2,
  characterId: 4,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 7
}
✅ test3 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 4 }
🏠 test3 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:14.888Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test3 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 3
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 3
🏠 test3 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 3 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
💾 사용자 입실 상태 DB 저장: 7 → 맵 2
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:14.910Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:14.910Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
🚪 test3 leaving room 2 (다른맵:false, 연결끊김:false)
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': '대기실',
  mapId: 'wait',
  '현재영역': '대기실',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': null,
  '마지막활동': '2025-09-16T10:16:14.912Z'
}
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 wait (방 wait) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 명시적 퇴실 - 대기실로 이동: test3 → 대기실 (mapId: wait)
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 2
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 맵 2의 최종 참가자 수: 2
📢 leaveMap: Broadcasted updated participant list to room 2.
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
user test3 (7) left room 2
📥 join-map 이벤트 수신: {
  userId: 7,
  username: 'test3',
  mapId: 2,
  characterId: 4,
  hasCharacterInfo: true,
  characterInfoKeys: [
    'id',         'name',
    'appearance', 'images',
    'size',       'position',
    'isActive',   'currentMapId',
    'createdAt',  'updatedAt',
    'userId',     'owner'
  ],
  characterInfoDetail: {
    id: 4,
    name: 'test3',
    hasImages: true,
    hasAppearance: true,
    imagesKeys: [ 'down', 'up', 'left', 'right' ],
    appearanceKeys: [ 'head', 'body', 'arms', 'legs' ]
  }
}
🏠 test3 맵 입장 시작: {
  mapId: 2,
  characterId: 4,
  position: { x: 400, y: 300 },
  characterInfo: '있음',
  userId: 7
}
✅ test3 characterInfo 저장 완료: { hasImages: true, hasAppearance: true, characterId: 4 }
🏠 test3 맵 입장 - 초기 위치 및 영역 설정: { position: { x: 400, y: 300 }, area: '공개 영역' }
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:14.913Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
📊 사용자 입실 정보 저장 완료: test3 {
  mapId: 2,
  mapName: 'new world',
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 }
}
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 3
👥 방 2의 참가자 목록: [
  {
    userId: 3,
    username: 'test1',
    characterId: 2,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:01:36.434Z,
    characterInfo: {
      id: 2,
      name: 'test1',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:15:43.750Z',
      updatedAt: '2025-09-16T02:38:14.143Z',
      userId: 3,
      owner: [Object]
    },
    privateAreaId: null
  },
  {
    userId: 4,
    username: 'test2',
    characterId: 3,
    position: { x: 491, y: 287 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:50.235Z,
    characterInfo: {
      id: 3,
      name: 'test2',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-15T23:31:26.126Z',
      updatedAt: '2025-09-16T02:44:12.723Z',
      userId: 4
    },
    privateAreaId: null
  },
  {
    userId: 7,
    username: 'test3',
    characterId: 4,
    position: { x: 400, y: 300 },
    direction: 'down',
    status: 'in-room',
    joinedAt: 2025-09-16T09:00:33.914Z,
    characterInfo: {
      id: 4,
      name: 'test3',
      appearance: [Object],
      images: [Object],
      size: 48,
      position: [Object],
      isActive: true,
      currentMapId: null,
      createdAt: '2025-09-16T07:28:58.697Z',
      updatedAt: '2025-09-16T07:57:22.103Z',
      userId: 7,
      owner: [Object]
    },
    privateAreaId: null
  }
]
📢 Broadcasted updated participant list to room 2.
📋 맵 2의 참가자 조회 시작
📋 맵 2의 소켓 수: 3
📋 참가자 추가: test1 (3)
📋 참가자 추가: test2 (4)
📋 참가자 추가: test3 (7)
📋 맵 2의 최종 참가자 수: 3
🏠 test3 맵 입장 완료 - 최종 상태: { mapId: 2, position: { x: 400, y: 300 }, participants: 3 }
🔄 서버 상태 업데이트: { totalUsers: 3, lobbyUsers: 0, mapsCount: 1 }
📡 서버 상태 브로드캐스트
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 400, y: 300 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 400, y: 300 },
  '마지막활동': '2025-09-16T10:16:14.915Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:14.915Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 400, y: 300 }
}
👤 사용자 상태 업데이트 수신: {
  userId: 7,
  username: 'test3',
  status: 'in-room',
  currentRoom: { id: 2, name: 'new world', mapId: 2 },
  position: { x: 491, y: 287 },
  area: undefined,
  areaType: undefined
}
📊 로그인 사용자 정보 업데이트: test3 {
  '입실공간': 'new world',
  mapId: 2,
  '현재영역': '공용 영역',
  privateAreaId: null,
  '캐릭터': 'test3',
  '위치': { x: 491, y: 287 },
  '마지막활동': '2025-09-16T10:16:14.915Z'
}
✅ 방 정보 영구 보존: test3 → 맵 2 (new world)
📊 [시스템] 전체 로그인 사용자 정보 브로드캐스트:
   전체: 3명 (온라인: 3명, 오프라인: 0명)
📊 [온라인] 입실 중인 사용자: test2 → 맵 2 (new world) (test2)
📊 [온라인] 입실 중인 사용자: test3 → 맵 2 (new world) (test3)
📊 [온라인] 입실 중인 사용자: test1 → 맵 2 (new world) (test1)
✅ 사용자 상태 업데이트 완료: {
  '상태': 'in-room',
  '마지막활동': '2025-09-16T10:16:14.915Z',
  '입실공간': 'new world',
  mapId: 2,
  '위치': { x: 491, y: 287 }
}
💾 사용자 입실 상태 DB 저장: 7 → 맵 null
💾 사용자 입실 상태 DB 저장: 7 → 맵 2
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 400, y: 300 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
👥 캐릭터 이동 브로드캐스트: {
  from: 'test3',
  mapId: 2,
  position: { x: 491, y: 287 },
  hasCharacterInfo: true,
  characterInfo: 'present'
}
2025-09-16T10:16:15.061Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:16:15.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:17:34.988Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:17:34.000Z'
}
2025-09-16T10:17:35.101Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:17:35.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:17:35.417Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:17:35.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:17:44.577Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:17:44.000Z'
}
2025-09-16T10:17:44.700Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:17:44.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:17:44.957Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:17:44.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:17:52.028Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:17:52.000Z'
}
2025-09-16T10:17:52.154Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:17:52.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:17:52.501Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:17:52.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:18:00.580Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:18:00.000Z'
}
2025-09-16T10:18:00.721Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:18:00.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:18:00.984Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:18:00.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:18:06.627Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:18:06.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:18:06.777Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:18:06.000Z'
}
2025-09-16T10:18:07.029Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:18:07.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:18:34.248Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:18:34.000Z'
}
2025-09-16T10:18:34.389Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:18:34.000Z'
}
2025-09-16T10:18:34.726Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:18:34.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:18:47.209Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:18:47.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:18:47.352Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:18:47.000Z'
}
2025-09-16T10:18:47.631Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:18:47.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
2025-09-16T10:18:54.283Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 3
Auth 미들웨어 - 인증 성공, 사용자: test1
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 3,
  role: 1,
  expireTime: '2025-09-16T11:18:54.000Z'
}
2025-09-16T10:18:54.431Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 7
Auth 미들웨어 - 인증 성공, 사용자: test3
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 7,
  role: 1,
  expireTime: '2025-09-16T11:18:54.000Z'
}
2025-09-16T10:18:54.681Z - POST /api/agora/token from 127.0.0.1
Auth 미들웨어 - Authorization 헤더: 존재
Auth 미들웨어 - 토큰 확인: eyJhbGciOiJIUzI1NiIs...
Auth 미들웨어 - 토큰 디코딩 성공, userId: 4
Auth 미들웨어 - 인증 성공, 사용자: test2
🎫 Agora 토큰 생성 성공: {
  channelName: 'creator_3_map_1_private_1757985482085',
  userId: 4,
  role: 1,
  expireTime: '2025-09-16T11:18:54.000Z'
}
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
🏓 Ping 전송 완료: 3개 소켓
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
📡 맵 2에 사용자 정보 브로드캐스트: [ 'test1', 'test2', 'test3' ]
