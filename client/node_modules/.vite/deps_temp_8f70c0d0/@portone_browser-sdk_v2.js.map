{
  "version": 3,
  "sources": ["../../@portone/browser-sdk/dist/v2.js"],
  "sourcesContent": ["// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nvar _a;\nlet promise = null;\nconst portone = {\n    jsSdkUrl: (_a = undefined) !== null && _a !== void 0 ? _a : 'https://cdn.portone.io/v2/browser-sdk.js',\n};\nfunction findScript() {\n    return document.querySelector(`script[src=\"${portone.jsSdkUrl}\"]`);\n}\nfunction injectScript() {\n    const script = document.createElement('script');\n    script.src = portone.jsSdkUrl;\n    const headOrBody = document.head || document.body;\n    if (!headOrBody)\n        throw new Error('[PortOne] Expected document.body not to be null');\n    return headOrBody.appendChild(script);\n}\nfunction loadScript() {\n    if (promise != null) {\n        // SDK is already loaded\n        return promise;\n    }\n    return (promise = new Promise((resolve, reject) => {\n        if (window.PortOne) {\n            // window.PortOne is already injected by CDN\n            return resolve(window.PortOne);\n        }\n        try {\n            // window.PortOne will be injected by @portone/browser-sdk\n            const script = findScript() || injectScript();\n            script.addEventListener('load', () => {\n                // script has just loaded\n                if (window.PortOne) {\n                    // window.PortOne is successfully injected @portone/browser-sdk\n                    return resolve(window.PortOne);\n                }\n                reject(new Error('[PortOne] Failed to load window.PortOne'));\n            });\n            script.addEventListener('error', () => {\n                reject(new Error('[PortOne] Failed to load window.PortOne'));\n            });\n        }\n        catch (error) {\n            return reject(error);\n        }\n    }));\n}\nfunction setPortOneJsSdkUrl(url) {\n    return (portone.jsSdkUrl = url);\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction requestPayment(request) {\n    return loadScript().then((sdk) => sdk.requestPayment(request));\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction requestIdentityVerification(request) {\n    return loadScript().then((sdk) => sdk.requestIdentityVerification(request));\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction requestIssueBillingKeyAndPay(request) {\n    return loadScript().then((sdk) => sdk.requestIssueBillingKeyAndPay(request));\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction requestIssueBillingKey(request) {\n    return loadScript().then((sdk) => sdk.requestIssueBillingKey(request));\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction loadPaymentUI(request, callbacks) {\n    return loadScript().then((sdk) => sdk.loadPaymentUI(request, callbacks));\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction loadIssueBillingKeyUI(request, callbacks) {\n    return loadScript().then((sdk) => sdk.loadIssueBillingKeyUI(request, callbacks));\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction updateLoadPaymentUIRequest(request) {\n    return loadScript().then((sdk) => sdk.updateLoadPaymentUIRequest(request));\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction updateLoadIssueBillingKeyUIRequest(request) {\n    return loadScript().then((sdk) => sdk.updateLoadIssueBillingKeyUIRequest(request));\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 가상계좌 발급시 사용되는 은행 코드\n */\nconst Bank = {\n    /**\n     * 한국은행\n     */\n    BANK_OF_KOREA: 'BANK_OF_KOREA',\n    /**\n     * 산업은행\n     */\n    KOREA_DEVELOPMENT_BANK: 'KOREA_DEVELOPMENT_BANK',\n    /**\n     * 기업은행\n     *\n     * - KCP\n     * - 스마트로\n     */\n    INDUSTRIAL_BANK_OF_KOREA: 'INDUSTRIAL_BANK_OF_KOREA',\n    /**\n     * 국민은행\n     *\n     * - KCP\n     * - 스마트로\n     */\n    KOOKMIN_BANK: 'KOOKMIN_BANK',\n    /**\n     * 수협은행\n     *\n     * - KCP\n     * - 스마트로\n     */\n    SUHYUP_BANK: 'SUHYUP_BANK',\n    /**\n     * 수출입은행\n     */\n    EXPORT_IMPORT_BANK_OF_KOREA: 'EXPORT_IMPORT_BANK_OF_KOREA',\n    /**\n     * NH농협은행\n     *\n     * - KCP\n     * - 스마트로\n     */\n    NH_NONGHYUP_BANK: 'NH_NONGHYUP_BANK',\n    /**\n     * 지역농․축협\n     */\n    LOCAL_NONGHYUP: 'LOCAL_NONGHYUP',\n    /**\n     * 우리은행\n     *\n     * - KCP\n     * - 스마트로\n     */\n    WOORI_BANK: 'WOORI_BANK',\n    /**\n     * SC제일은행\n     *\n     * - KCP\n     * - 스마트로\n     */\n    SC_BANK_KOREA: 'SC_BANK_KOREA',\n    /**\n     * 한국씨티은행\n     */\n    CITI_BANK_KOREA: 'CITI_BANK_KOREA',\n    /**\n     * 대구은행\n     *\n     * - KCP\n     * - 스마트로\n     */\n    DAEGU_BANK: 'DAEGU_BANK',\n    /**\n     * 부산은행\n     *\n     * - KCP\n     * - 스마트로\n     */\n    BUSAN_BANK: 'BUSAN_BANK',\n    /**\n     * 광주은행\n     *\n     * - KCP\n     * - 스마트로\n     */\n    GWANGJU_BANK: 'GWANGJU_BANK',\n    /**\n     * 제주은행\n     */\n    JEJU_BANK: 'JEJU_BANK',\n    /**\n     * 전북은행\n     *\n     * - 스마트로\n     */\n    JEONBUK_BANK: 'JEONBUK_BANK',\n    /**\n     * 경남은행\n     *\n     * - KCP\n     * - 스마트로\n     */\n    KYONGNAM_BANK: 'KYONGNAM_BANK',\n    /**\n     * 새마을금고\n     */\n    KFCC: 'KFCC',\n    /**\n     * 신협\n     */\n    SHINHYUP: 'SHINHYUP',\n    /**\n     * 저축은행\n     */\n    SAVINGS_BANK_KOREA: 'SAVINGS_BANK_KOREA',\n    /**\n     * 모건스탠리은행\n     */\n    MORGAN_STANLEY_BANK: 'MORGAN_STANLEY_BANK',\n    /**\n     * HSBC은행\n     */\n    HSBC_BANK: 'HSBC_BANK',\n    /**\n     * 도이치은행\n     */\n    DEUTSCHE_BANK: 'DEUTSCHE_BANK',\n    /**\n     * 제이피모간체이스은행\n     */\n    JP_MORGAN_CHASE_BANK: 'JP_MORGAN_CHASE_BANK',\n    /**\n     * 미즈호은행\n     */\n    MIZUHO_BANK: 'MIZUHO_BANK',\n    /**\n     * 엠유에프지은행\n     */\n    MUFG_BANK: 'MUFG_BANK',\n    /**\n     * BOA은행\n     */\n    BANK_OF_AMERICA_BANK: 'BANK_OF_AMERICA_BANK',\n    /**\n     * 비엔피파리바은행\n     */\n    BNP_PARIBAS_BANK: 'BNP_PARIBAS_BANK',\n    /**\n     * 중국공상은행\n     */\n    ICBC: 'ICBC',\n    /**\n     * 중국은행\n     */\n    BANK_OF_CHINA: 'BANK_OF_CHINA',\n    /**\n     * 산림조합중앙회\n     */\n    NATIONAL_FORESTRY_COOPERATIVE_FEDERATION: 'NATIONAL_FORESTRY_COOPERATIVE_FEDERATION',\n    /**\n     * 대화은행\n     */\n    UNITED_OVERSEAS_BANK: 'UNITED_OVERSEAS_BANK',\n    /**\n     * 교통은행\n     */\n    BANK_OF_COMMUNICATIONS: 'BANK_OF_COMMUNICATIONS',\n    /**\n     * 중국건설은행\n     */\n    CHINA_CONSTRUCTION_BANK: 'CHINA_CONSTRUCTION_BANK',\n    /**\n     * 우체국\n     *\n     * - KCP\n     * - 스마트로\n     */\n    EPOST: 'EPOST',\n    /**\n     * 신용보증기금\n     */\n    KODIT: 'KODIT',\n    /**\n     * 기술보증기금\n     */\n    KIBO: 'KIBO',\n    /**\n     * 하나은행\n     *\n     * - KCP\n     * - 스마트로\n     */\n    HANA_BANK: 'HANA_BANK',\n    /**\n     * 신한은행\n     *\n     * - KCP\n     * - 스마트로\n     */\n    SHINHAN_BANK: 'SHINHAN_BANK',\n    /**\n     * 케이뱅크\n     *\n     * - 스마트로\n     */\n    K_BANK: 'K_BANK',\n    /**\n     * 카카오뱅크\n     */\n    KAKAO_BANK: 'KAKAO_BANK',\n    /**\n     * 토스뱅크\n     */\n    TOSS_BANK: 'TOSS_BANK',\n    /**\n     * 한국신용정보원\n     */\n    KCIS: 'KCIS',\n    /**\n     * 대신저축은행\n     */\n    DAISHIN_SAVINGS_BANK: 'DAISHIN_SAVINGS_BANK',\n    /**\n     * 에스비아이저축은행\n     */\n    SBI_SAVINGS_BANK: 'SBI_SAVINGS_BANK',\n    /**\n     * 에이치케이저축은행\n     */\n    HK_SAVINGS_BANK: 'HK_SAVINGS_BANK',\n    /**\n     * 웰컴저축은행\n     */\n    WELCOME_SAVINGS_BANK: 'WELCOME_SAVINGS_BANK',\n    /**\n     * 신한저축은행\n     */\n    SHINHAN_SAVINGS_BANK: 'SHINHAN_SAVINGS_BANK',\n    /**\n     * 교보증권\n     */\n    KYOBO_SECURITIES: 'KYOBO_SECURITIES',\n    /**\n     * 대신증권\n     */\n    DAISHIN_SECURITIES: 'DAISHIN_SECURITIES',\n    /**\n     * 메리츠증권\n     */\n    MERITZ_SECURITIES: 'MERITZ_SECURITIES',\n    /**\n     * 미래에셋증권\n     */\n    MIRAE_ASSET_SECURITIES: 'MIRAE_ASSET_SECURITIES',\n    /**\n     * 부국증권\n     */\n    BOOKOOK_SECURITIES: 'BOOKOOK_SECURITIES',\n    /**\n     * 삼성증권\n     */\n    SAMSUNG_SECURITIES: 'SAMSUNG_SECURITIES',\n    /**\n     * 신영증권\n     */\n    SHINYOUNG_SECURITIES: 'SHINYOUNG_SECURITIES',\n    /**\n     * 신한금융투자\n     */\n    SHINHAN_FINANCIAL_INVESTMENT: 'SHINHAN_FINANCIAL_INVESTMENT',\n    /**\n     * 유안타증권\n     */\n    YUANTA_SECURITIES: 'YUANTA_SECURITIES',\n    /**\n     * 유진투자증권\n     */\n    EUGENE_INVESTMENT_SECURITIES: 'EUGENE_INVESTMENT_SECURITIES',\n    /**\n     * 카카오페이증권\n     */\n    KAKAO_PAY_SECURITIES: 'KAKAO_PAY_SECURITIES',\n    /**\n     * 토스증권\n     */\n    TOSS_SECURITIES: 'TOSS_SECURITIES',\n    /**\n     * 한국포스증권\n     */\n    KOREA_FOSS_SECURITIES: 'KOREA_FOSS_SECURITIES',\n    /**\n     * 하나금융투자\n     */\n    HANA_FINANCIAL_INVESTMENT: 'HANA_FINANCIAL_INVESTMENT',\n    /**\n     * 하이투자증권\n     */\n    HI_INVESTMENT_SECURITIES: 'HI_INVESTMENT_SECURITIES',\n    /**\n     * 한국투자증권\n     */\n    KOREA_INVESTMENT_SECURITIES: 'KOREA_INVESTMENT_SECURITIES',\n    /**\n     * 한화투자증권\n     */\n    HANWHA_INVESTMENT_SECURITIES: 'HANWHA_INVESTMENT_SECURITIES',\n    /**\n     * 현대차증권자\n     */\n    HYUNDAI_MOTOR_SECURITIES: 'HYUNDAI_MOTOR_SECURITIES',\n    /**\n     * DB금융투자자\n     */\n    DB_FINANCIAL_INVESTMENT: 'DB_FINANCIAL_INVESTMENT',\n    /**\n     * KB증권\n     */\n    KB_SECURITIES: 'KB_SECURITIES',\n    /**\n     * KTB투자증권\n     */\n    KTB_INVESTMENT_SECURITIES: 'KTB_INVESTMENT_SECURITIES',\n    /**\n     * NH투자증권\n     */\n    NH_INVESTMENT_SECURITIES: 'NH_INVESTMENT_SECURITIES',\n    /**\n     * SK증권\n     */\n    SK_SECURITIES: 'SK_SECURITIES',\n    /**\n     * 서울보증보험\n     */\n    SCI: 'SCI',\n    /**\n     * 키움증권\n     */\n    KIWOOM_SECURITIES: 'KIWOOM_SECURITIES',\n    /**\n     * 이베스트증권\n     */\n    EBEST_INVESTMENT_SECURITIES: 'EBEST_INVESTMENT_SECURITIES',\n    /**\n     * 케이프투자증권\n     */\n    CAPE_INVESTMENT_CERTIFICATE: 'CAPE_INVESTMENT_CERTIFICATE',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 빌링키 발급 및 초회결제 수단\n */\nconst BillingKeyAndPayMethod = {\n    /**\n     * 휴대전화\n     */\n    MOBILE: 'MOBILE',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 빌링키 발급 수단\n */\nconst BillingKeyMethod = {\n    /**\n     * 카드\n     */\n    CARD: 'CARD',\n    /**\n     * 휴대전화\n     */\n    MOBILE: 'MOBILE',\n    /**\n     * 간편결제\n     */\n    EASY_PAY: 'EASY_PAY',\n    /**\n     * 페이팔(RT)\n     */\n    PAYPAL: 'PAYPAL',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 카드 결제시 사용되는 카드사 코드\n */\nconst CardCompany = {\n    /**\n     * KDB산업은행 카드\n     */\n    KOREA_DEVELOPMENT_BANK: 'KOREA_DEVELOPMENT_BANK',\n    /**\n     * 새마을금고 카드\n     */\n    KFCC: 'KFCC',\n    /**\n     * 신협 카드\n     */\n    SHINHYUP: 'SHINHYUP',\n    /**\n     * 우체국 카드\n     */\n    EPOST: 'EPOST',\n    /**\n     * 저축은행 카드\n     */\n    SAVINGS_BANK_KOREA: 'SAVINGS_BANK_KOREA',\n    /**\n     * 카카오뱅크 카드\n     */\n    KAKAO_BANK: 'KAKAO_BANK',\n    /**\n     * 우리카드\n     */\n    WOORI_CARD: 'WOORI_CARD',\n    /**\n     * BC카드\n     */\n    BC_CARD: 'BC_CARD',\n    /**\n     * 광주카드\n     */\n    GWANGJU_CARD: 'GWANGJU_CARD',\n    /**\n     * 삼성카드\n     */\n    SAMSUNG_CARD: 'SAMSUNG_CARD',\n    /**\n     * 신한카드\n     */\n    SHINHAN_CARD: 'SHINHAN_CARD',\n    /**\n     * 현대카드\n     */\n    HYUNDAI_CARD: 'HYUNDAI_CARD',\n    /**\n     * 롯데카드\n     */\n    LOTTE_CARD: 'LOTTE_CARD',\n    /**\n     * 수협카드\n     */\n    SUHYUP_CARD: 'SUHYUP_CARD',\n    /**\n     * 씨티카드\n     */\n    CITI_CARD: 'CITI_CARD',\n    /**\n     * NH 농협카드\n     */\n    NH_CARD: 'NH_CARD',\n    /**\n     * 전북카드\n     */\n    JEONBUK_CARD: 'JEONBUK_CARD',\n    /**\n     * 제주카드\n     */\n    JEJU_CARD: 'JEJU_CARD',\n    /**\n     * 하나카드\n     */\n    HANA_CARD: 'HANA_CARD',\n    /**\n     * 국민카드\n     */\n    KOOKMIN_CARD: 'KOOKMIN_CARD',\n    /**\n     * K뱅크 카드\n     */\n    K_BANK: 'K_BANK',\n    /**\n     * 토스뱅크 카드\n     */\n    TOSS_BANK: 'TOSS_BANK',\n    /**\n     * 미래에셋증권 카드\n     */\n    MIRAE_ASSET_SECURITIES: 'MIRAE_ASSET_SECURITIES',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 통신사 코드\n */\nconst Carrier = {\n    /**\n     * SK텔레콤\n     */\n    SKT: 'SKT',\n    /**\n     * KT\n     */\n    KT: 'KT',\n    /**\n     * LG U+\n     */\n    LGU: 'LGU',\n    /**\n     * 헬로모바일\n     */\n    HELLO: 'HELLO',\n    /**\n     * 티플러스\n     */\n    KCT: 'KCT',\n    /**\n     * SK 7mobile\n     */\n    SK7: 'SK7',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **현금영수증 발급 유형**\n */\nconst CashReceiptType = {\n    /**\n     * 소득공제(개인)\n     */\n    PERSONAL: 'PERSONAL',\n    /**\n     * 지출증빙(사업자)\n     */\n    CORPORATE: 'CORPORATE',\n    /**\n     * 미발행(PG 설정에 따라 무기명으로 자진 발급될 수 있음)\n     */\n    ANONYMOUS: 'ANONYMOUS',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **국가**\n *\n * [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) 코드입니다.\n */\nconst Country = {\n    /**\n     * Afghanistan\n     */\n    AF: 'AF',\n    /**\n     * Åland Islands\n     */\n    AX: 'AX',\n    /**\n     * Albania\n     */\n    AL: 'AL',\n    /**\n     * Algeria\n     */\n    DZ: 'DZ',\n    /**\n     * American Samoa\n     */\n    AS: 'AS',\n    /**\n     * Andorra\n     */\n    AD: 'AD',\n    /**\n     * Angola\n     */\n    AO: 'AO',\n    /**\n     * Anguilla\n     */\n    AI: 'AI',\n    /**\n     * Antarctica\n     */\n    AQ: 'AQ',\n    /**\n     * Antigua and Barbuda\n     */\n    AG: 'AG',\n    /**\n     * Argentina\n     */\n    AR: 'AR',\n    /**\n     * Armenia\n     */\n    AM: 'AM',\n    /**\n     * Aruba\n     */\n    AW: 'AW',\n    /**\n     * Australia\n     */\n    AU: 'AU',\n    /**\n     * Austria\n     */\n    AT: 'AT',\n    /**\n     * Azerbaijan\n     */\n    AZ: 'AZ',\n    /**\n     * Bahrain\n     */\n    BH: 'BH',\n    /**\n     * Bahamas\n     */\n    BS: 'BS',\n    /**\n     * Bangladesh\n     */\n    BD: 'BD',\n    /**\n     * Barbados\n     */\n    BB: 'BB',\n    /**\n     * Belarus\n     */\n    BY: 'BY',\n    /**\n     * Belgium\n     */\n    BE: 'BE',\n    /**\n     * Belize\n     */\n    BZ: 'BZ',\n    /**\n     * Benin\n     */\n    BJ: 'BJ',\n    /**\n     * Bermuda\n     */\n    BM: 'BM',\n    /**\n     * Bhutan\n     */\n    BT: 'BT',\n    /**\n     * Bolivia, Plurinational State of\n     */\n    BO: 'BO',\n    /**\n     * Bonaire, Sint Eustatius and Saba\n     */\n    BQ: 'BQ',\n    /**\n     * Bosnia and Herzegovina\n     */\n    BA: 'BA',\n    /**\n     * Botswana\n     */\n    BW: 'BW',\n    /**\n     * Bouvet Island\n     */\n    BV: 'BV',\n    /**\n     * Brazil\n     */\n    BR: 'BR',\n    /**\n     * British Indian Ocean Territory\n     */\n    IO: 'IO',\n    /**\n     * Brunei Darussalam\n     */\n    BN: 'BN',\n    /**\n     * Bulgaria\n     */\n    BG: 'BG',\n    /**\n     * Burkina Faso\n     */\n    BF: 'BF',\n    /**\n     * Burundi\n     */\n    BI: 'BI',\n    /**\n     * Cambodia\n     */\n    KH: 'KH',\n    /**\n     * Cameroon\n     */\n    CM: 'CM',\n    /**\n     * Canada\n     */\n    CA: 'CA',\n    /**\n     * Cape Verde\n     */\n    CV: 'CV',\n    /**\n     * Cayman Islands\n     */\n    KY: 'KY',\n    /**\n     * Central African Republic\n     */\n    CF: 'CF',\n    /**\n     * Chad\n     */\n    TD: 'TD',\n    /**\n     * Chile\n     */\n    CL: 'CL',\n    /**\n     * China\n     */\n    CN: 'CN',\n    /**\n     * Christmas Island\n     */\n    CX: 'CX',\n    /**\n     * Cocos (Keeling) Islands\n     */\n    CC: 'CC',\n    /**\n     * Colombia\n     */\n    CO: 'CO',\n    /**\n     * Comoros\n     */\n    KM: 'KM',\n    /**\n     * Congo\n     */\n    CG: 'CG',\n    /**\n     * Congo, the Democratic Republic of the\n     */\n    CD: 'CD',\n    /**\n     * Cook Islands\n     */\n    CK: 'CK',\n    /**\n     * Costa Rica\n     */\n    CR: 'CR',\n    /**\n     * Côte d'Ivoire\n     */\n    CI: 'CI',\n    /**\n     * Croatia\n     */\n    HR: 'HR',\n    /**\n     * Cuba\n     */\n    CU: 'CU',\n    /**\n     * Curaçao\n     */\n    CW: 'CW',\n    /**\n     * Cyprus\n     */\n    CY: 'CY',\n    /**\n     * Czech Republic\n     */\n    CZ: 'CZ',\n    /**\n     * Denmark\n     */\n    DK: 'DK',\n    /**\n     * Djibouti\n     */\n    DJ: 'DJ',\n    /**\n     * Dominica\n     */\n    DM: 'DM',\n    /**\n     * Dominican Republic\n     */\n    DO: 'DO',\n    /**\n     * Ecuador\n     */\n    EC: 'EC',\n    /**\n     * Egypt\n     */\n    EG: 'EG',\n    /**\n     * El Salvador\n     */\n    SV: 'SV',\n    /**\n     * Equatorial Guinea\n     */\n    GQ: 'GQ',\n    /**\n     * Eritrea\n     */\n    ER: 'ER',\n    /**\n     * Estonia\n     */\n    EE: 'EE',\n    /**\n     * Ethiopia\n     */\n    ET: 'ET',\n    /**\n     * Falkland Islands (Malvinas)\n     */\n    FK: 'FK',\n    /**\n     * Faroe Islands\n     */\n    FO: 'FO',\n    /**\n     * Fiji\n     */\n    FJ: 'FJ',\n    /**\n     * Finland\n     */\n    FI: 'FI',\n    /**\n     * France\n     */\n    FR: 'FR',\n    /**\n     * French Guiana\n     */\n    GF: 'GF',\n    /**\n     * French Polynesia\n     */\n    PF: 'PF',\n    /**\n     * French Southern Territories\n     */\n    TF: 'TF',\n    /**\n     * Gabon\n     */\n    GA: 'GA',\n    /**\n     * Gambia\n     */\n    GM: 'GM',\n    /**\n     * Georgia\n     */\n    GE: 'GE',\n    /**\n     * Germany\n     */\n    DE: 'DE',\n    /**\n     * Ghana\n     */\n    GH: 'GH',\n    /**\n     * Gibraltar\n     */\n    GI: 'GI',\n    /**\n     * Greece\n     */\n    GR: 'GR',\n    /**\n     * Greenland\n     */\n    GL: 'GL',\n    /**\n     * Grenada\n     */\n    GD: 'GD',\n    /**\n     * Guadeloupe\n     */\n    GP: 'GP',\n    /**\n     * Guam\n     */\n    GU: 'GU',\n    /**\n     * Guatemala\n     */\n    GT: 'GT',\n    /**\n     * Guernsey\n     */\n    GG: 'GG',\n    /**\n     * Guinea\n     */\n    GN: 'GN',\n    /**\n     * Guinea-Bissau\n     */\n    GW: 'GW',\n    /**\n     * Guyana\n     */\n    GY: 'GY',\n    /**\n     * Haiti\n     */\n    HT: 'HT',\n    /**\n     * Heard Island and McDonald Islands\n     */\n    HM: 'HM',\n    /**\n     * Holy See (Vatican City State)\n     */\n    VA: 'VA',\n    /**\n     * Honduras\n     */\n    HN: 'HN',\n    /**\n     * Hong Kong\n     */\n    HK: 'HK',\n    /**\n     * Hungary\n     */\n    HU: 'HU',\n    /**\n     * Iceland\n     */\n    IS: 'IS',\n    /**\n     * India\n     */\n    IN: 'IN',\n    /**\n     * Indonesia\n     */\n    ID: 'ID',\n    /**\n     * Iran, Islamic Republic of\n     */\n    IR: 'IR',\n    /**\n     * Iraq\n     */\n    IQ: 'IQ',\n    /**\n     * Ireland\n     */\n    IE: 'IE',\n    /**\n     * Isle of Man\n     */\n    IM: 'IM',\n    /**\n     * Israel\n     */\n    IL: 'IL',\n    /**\n     * Italy\n     */\n    IT: 'IT',\n    /**\n     * Jamaica\n     */\n    JM: 'JM',\n    /**\n     * Japan\n     */\n    JP: 'JP',\n    /**\n     * Jersey\n     */\n    JE: 'JE',\n    /**\n     * Jordan\n     */\n    JO: 'JO',\n    /**\n     * Kazakhstan\n     */\n    KZ: 'KZ',\n    /**\n     * Kenya\n     */\n    KE: 'KE',\n    /**\n     * Kiribati\n     */\n    KI: 'KI',\n    /**\n     * Korea, Democratic People's Republic of\n     */\n    KP: 'KP',\n    /**\n     * Korea, Republic of\n     */\n    KR: 'KR',\n    /**\n     * Kuwait\n     */\n    KW: 'KW',\n    /**\n     * Kyrgyzstan\n     */\n    KG: 'KG',\n    /**\n     * Lao People's Democratic Republic\n     */\n    LA: 'LA',\n    /**\n     * Latvia\n     */\n    LV: 'LV',\n    /**\n     * Lebanon\n     */\n    LB: 'LB',\n    /**\n     * Lesotho\n     */\n    LS: 'LS',\n    /**\n     * Liberia\n     */\n    LR: 'LR',\n    /**\n     * Libya\n     */\n    LY: 'LY',\n    /**\n     * Liechtenstein\n     */\n    LI: 'LI',\n    /**\n     * Lithuania\n     */\n    LT: 'LT',\n    /**\n     * Luxembourg\n     */\n    LU: 'LU',\n    /**\n     * Macao\n     */\n    MO: 'MO',\n    /**\n     * Macedonia, the Former Yugoslav Republic of\n     */\n    MK: 'MK',\n    /**\n     * Madagascar\n     */\n    MG: 'MG',\n    /**\n     * Malawi\n     */\n    MW: 'MW',\n    /**\n     * Malaysia\n     */\n    MY: 'MY',\n    /**\n     * Maldives\n     */\n    MV: 'MV',\n    /**\n     * Mali\n     */\n    ML: 'ML',\n    /**\n     * Malta\n     */\n    MT: 'MT',\n    /**\n     * Marshall Islands\n     */\n    MH: 'MH',\n    /**\n     * Martinique\n     */\n    MQ: 'MQ',\n    /**\n     * Mauritania\n     */\n    MR: 'MR',\n    /**\n     * Mauritius\n     */\n    MU: 'MU',\n    /**\n     * Mayotte\n     */\n    YT: 'YT',\n    /**\n     * Mexico\n     */\n    MX: 'MX',\n    /**\n     * Micronesia, Federated States of\n     */\n    FM: 'FM',\n    /**\n     * Moldova, Republic of\n     */\n    MD: 'MD',\n    /**\n     * Monaco\n     */\n    MC: 'MC',\n    /**\n     * Mongolia\n     */\n    MN: 'MN',\n    /**\n     * Montenegro\n     */\n    ME: 'ME',\n    /**\n     * Montserrat\n     */\n    MS: 'MS',\n    /**\n     * Morocco\n     */\n    MA: 'MA',\n    /**\n     * Mozambique\n     */\n    MZ: 'MZ',\n    /**\n     * Myanmar\n     */\n    MM: 'MM',\n    /**\n     * Namibia\n     */\n    NA: 'NA',\n    /**\n     * Nauru\n     */\n    NR: 'NR',\n    /**\n     * Nepal\n     */\n    NP: 'NP',\n    /**\n     * Netherlands\n     */\n    NL: 'NL',\n    /**\n     * New Caledonia\n     */\n    NC: 'NC',\n    /**\n     * New Zealand\n     */\n    NZ: 'NZ',\n    /**\n     * Nicaragua\n     */\n    NI: 'NI',\n    /**\n     * Niger\n     */\n    NE: 'NE',\n    /**\n     * Nigeria\n     */\n    NG: 'NG',\n    /**\n     * Niue\n     */\n    NU: 'NU',\n    /**\n     * Norfolk Island\n     */\n    NF: 'NF',\n    /**\n     * Northern Mariana Islands\n     */\n    MP: 'MP',\n    /**\n     * Norway\n     */\n    NO: 'NO',\n    /**\n     * Oman\n     */\n    OM: 'OM',\n    /**\n     * Pakistan\n     */\n    PK: 'PK',\n    /**\n     * Palau\n     */\n    PW: 'PW',\n    /**\n     * Palestine, State of\n     */\n    PS: 'PS',\n    /**\n     * Panama\n     */\n    PA: 'PA',\n    /**\n     * Papua New Guinea\n     */\n    PG: 'PG',\n    /**\n     * Paraguay\n     */\n    PY: 'PY',\n    /**\n     * Peru\n     */\n    PE: 'PE',\n    /**\n     * Philippines\n     */\n    PH: 'PH',\n    /**\n     * Pitcairn\n     */\n    PN: 'PN',\n    /**\n     * Poland\n     */\n    PL: 'PL',\n    /**\n     * Portugal\n     */\n    PT: 'PT',\n    /**\n     * Puerto Rico\n     */\n    PR: 'PR',\n    /**\n     * Qatar\n     */\n    QA: 'QA',\n    /**\n     * Réunion\n     */\n    RE: 'RE',\n    /**\n     * Romania\n     */\n    RO: 'RO',\n    /**\n     * Russian Federation\n     */\n    RU: 'RU',\n    /**\n     * Rwanda\n     */\n    RW: 'RW',\n    /**\n     * Saint Barthélemy\n     */\n    BL: 'BL',\n    /**\n     * Saint Helena, Ascension and Tristan da Cunha\n     */\n    SH: 'SH',\n    /**\n     * Saint Kitts and Nevis\n     */\n    KN: 'KN',\n    /**\n     * Saint Lucia\n     */\n    LC: 'LC',\n    /**\n     * Saint Martin (French part)\n     */\n    MF: 'MF',\n    /**\n     * Saint Pierre and Miquelon\n     */\n    PM: 'PM',\n    /**\n     * Saint Vincent and the Grenadines\n     */\n    VC: 'VC',\n    /**\n     * Samoa\n     */\n    WS: 'WS',\n    /**\n     * San Marino\n     */\n    SM: 'SM',\n    /**\n     * Sao Tome and Principe\n     */\n    ST: 'ST',\n    /**\n     * Saudi Arabia\n     */\n    SA: 'SA',\n    /**\n     * Senegal\n     */\n    SN: 'SN',\n    /**\n     * Serbia\n     */\n    RS: 'RS',\n    /**\n     * Seychelles\n     */\n    SC: 'SC',\n    /**\n     * Sierra Leone\n     */\n    SL: 'SL',\n    /**\n     * Singapore\n     */\n    SG: 'SG',\n    /**\n     * Sint Maarten (Dutch part)\n     */\n    SX: 'SX',\n    /**\n     * Slovakia\n     */\n    SK: 'SK',\n    /**\n     * Slovenia\n     */\n    SI: 'SI',\n    /**\n     * Solomon Islands\n     */\n    SB: 'SB',\n    /**\n     * Somalia\n     */\n    SO: 'SO',\n    /**\n     * South Africa\n     */\n    ZA: 'ZA',\n    /**\n     * South Georgia and the South Sandwich Islands\n     */\n    GS: 'GS',\n    /**\n     * South Sudan\n     */\n    SS: 'SS',\n    /**\n     * Spain\n     */\n    ES: 'ES',\n    /**\n     * Sri Lanka\n     */\n    LK: 'LK',\n    /**\n     * Sudan\n     */\n    SD: 'SD',\n    /**\n     * Suriname\n     */\n    SR: 'SR',\n    /**\n     * Svalbard and Jan Mayen\n     */\n    SJ: 'SJ',\n    /**\n     * Swaziland\n     */\n    SZ: 'SZ',\n    /**\n     * Sweden\n     */\n    SE: 'SE',\n    /**\n     * Switzerland\n     */\n    CH: 'CH',\n    /**\n     * Syrian Arab Republic\n     */\n    SY: 'SY',\n    /**\n     * Taiwan, Province of China\n     */\n    TW: 'TW',\n    /**\n     * Tajikistan\n     */\n    TJ: 'TJ',\n    /**\n     * Tanzania, United Republic of\n     */\n    TZ: 'TZ',\n    /**\n     * Thailand\n     */\n    TH: 'TH',\n    /**\n     * Timor-Leste\n     */\n    TL: 'TL',\n    /**\n     * Togo\n     */\n    TG: 'TG',\n    /**\n     * Tokelau\n     */\n    TK: 'TK',\n    /**\n     * Tonga\n     */\n    TO: 'TO',\n    /**\n     * Trinidad and Tobago\n     */\n    TT: 'TT',\n    /**\n     * Tunisia\n     */\n    TN: 'TN',\n    /**\n     * Turkey\n     */\n    TR: 'TR',\n    /**\n     * Turkmenistan\n     */\n    TM: 'TM',\n    /**\n     * Turks and Caicos Islands\n     */\n    TC: 'TC',\n    /**\n     * Tuvalu\n     */\n    TV: 'TV',\n    /**\n     * Uganda\n     */\n    UG: 'UG',\n    /**\n     * Ukraine\n     */\n    UA: 'UA',\n    /**\n     * United Arab Emirates\n     */\n    AE: 'AE',\n    /**\n     * United Kingdom\n     */\n    GB: 'GB',\n    /**\n     * United States\n     */\n    US: 'US',\n    /**\n     * United States Minor Outlying Islands\n     */\n    UM: 'UM',\n    /**\n     * Uruguay\n     */\n    UY: 'UY',\n    /**\n     * Uzbekistan\n     */\n    UZ: 'UZ',\n    /**\n     * Vanuatu\n     */\n    VU: 'VU',\n    /**\n     * Venezuela, Bolivarian Republic of\n     */\n    VE: 'VE',\n    /**\n     * Viet Nam\n     */\n    VN: 'VN',\n    /**\n     * Virgin Islands, British\n     */\n    VG: 'VG',\n    /**\n     * Virgin Islands, U.S.\n     */\n    VI: 'VI',\n    /**\n     * Wallis and Futuna\n     */\n    WF: 'WF',\n    /**\n     * Western Sahara\n     */\n    EH: 'EH',\n    /**\n     * Yemen\n     */\n    YE: 'YE',\n    /**\n     * Zambia\n     */\n    ZM: 'ZM',\n    /**\n     * Zimbabwe\n     */\n    ZW: 'ZW',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **화폐**\n *\n * [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) 화폐 코드\n *\n * 대한민국 원, 일본 엔이 아닌 화폐를 사용할 때에는 금액을 minor unit 단위로 입력해야 함에 유의하세요.\n */\nconst Currency = {\n    /**\n     * South Korean won\n     */\n    KRW: 'KRW',\n    /**\n     * United States dollar\n     */\n    USD: 'USD',\n    /**\n     * Euro\n     */\n    EUR: 'EUR',\n    /**\n     * Japanese yen\n     */\n    JPY: 'JPY',\n    /**\n     * Chinese yuan\n     */\n    CNY: 'CNY',\n    /**\n     * Vietnamese dong\n     */\n    VND: 'VND',\n    /**\n     * Thai baht\n     */\n    THB: 'THB',\n    /**\n     * Singapore dollar\n     */\n    SGD: 'SGD',\n    /**\n     * Australian dollar\n     */\n    AUD: 'AUD',\n    /**\n     * Hong Kong dollar\n     */\n    HKD: 'HKD',\n    /**\n     * United Arab Emirates dirham\n     */\n    AED: 'AED',\n    /**\n     * Afghan afghani\n     */\n    AFN: 'AFN',\n    /**\n     * Albanian lek\n     */\n    ALL: 'ALL',\n    /**\n     * Armenian dram\n     */\n    AMD: 'AMD',\n    /**\n     * Netherlands Antillean guilder\n     */\n    ANG: 'ANG',\n    /**\n     * Angolan kwanza\n     */\n    AOA: 'AOA',\n    /**\n     * Argentine peso\n     */\n    ARS: 'ARS',\n    /**\n     * Aruban florin\n     */\n    AWG: 'AWG',\n    /**\n     * Azerbaijani manat\n     */\n    AZN: 'AZN',\n    /**\n     * Bosnia and Herzegovina convertible mark\n     */\n    BAM: 'BAM',\n    /**\n     * Barbadian dollar\n     */\n    BBD: 'BBD',\n    /**\n     * Bangladeshi taka\n     */\n    BDT: 'BDT',\n    /**\n     * Bulgarian lev\n     */\n    BGN: 'BGN',\n    /**\n     * Bermudian dollar\n     */\n    BMD: 'BMD',\n    /**\n     * Brunei dollar\n     */\n    BND: 'BND',\n    /**\n     * Boliviano\n     */\n    BOB: 'BOB',\n    /**\n     * Bolivian Mvdol\n     */\n    BOV: 'BOV',\n    /**\n     * Brazilian real\n     */\n    BRL: 'BRL',\n    /**\n     * Bahamian dollar\n     */\n    BSD: 'BSD',\n    /**\n     * Botswana pula\n     */\n    BWP: 'BWP',\n    /**\n     * Belarusian ruble\n     */\n    BYN: 'BYN',\n    /**\n     * Belize dollar\n     */\n    BZD: 'BZD',\n    /**\n     * Canadian dollar\n     */\n    CAD: 'CAD',\n    /**\n     * Congolese franc\n     */\n    CDF: 'CDF',\n    /**\n     * WIR euro\n     */\n    CHE: 'CHE',\n    /**\n     * Swiss franc\n     */\n    CHF: 'CHF',\n    /**\n     * WIR franc\n     */\n    CHW: 'CHW',\n    /**\n     * Chilean unit of account (UF)\n     */\n    CLF: 'CLF',\n    /**\n     * Chilean peso\n     */\n    CLP: 'CLP',\n    /**\n     * Colombian peso\n     */\n    COP: 'COP',\n    /**\n     * Unidad de Valor Real\n     */\n    COU: 'COU',\n    /**\n     * Costa Rican colon\n     */\n    CRC: 'CRC',\n    /**\n     * Cuban convertible peso\n     */\n    CUC: 'CUC',\n    /**\n     * Cuban peso\n     */\n    CUP: 'CUP',\n    /**\n     * Cape Verdean escudo\n     */\n    CVE: 'CVE',\n    /**\n     * Czech koruna\n     */\n    CZK: 'CZK',\n    /**\n     * Djiboutian franc\n     */\n    DJF: 'DJF',\n    /**\n     * Danish krone\n     */\n    DKK: 'DKK',\n    /**\n     * Dominican peso\n     */\n    DOP: 'DOP',\n    /**\n     * Algerian dinar\n     */\n    DZD: 'DZD',\n    /**\n     * Egyptian pound\n     */\n    EGP: 'EGP',\n    /**\n     * Eritrean nakfa\n     */\n    ERN: 'ERN',\n    /**\n     * Ethiopian birr\n     */\n    ETB: 'ETB',\n    /**\n     * Fiji dollar\n     */\n    FJD: 'FJD',\n    /**\n     * Falkland Islands pound\n     */\n    FKP: 'FKP',\n    /**\n     * Pound sterling\n     */\n    GBP: 'GBP',\n    /**\n     * Georgian lari\n     */\n    GEL: 'GEL',\n    /**\n     * Ghanaian cedi\n     */\n    GHS: 'GHS',\n    /**\n     * Gibraltar pound\n     */\n    GIP: 'GIP',\n    /**\n     * Gambian dalasi\n     */\n    GMD: 'GMD',\n    /**\n     * Guinean franc\n     */\n    GNF: 'GNF',\n    /**\n     * Guatemalan quetzal\n     */\n    GTQ: 'GTQ',\n    /**\n     * Guyanese dollar\n     */\n    GYD: 'GYD',\n    /**\n     * Honduran lempira\n     */\n    HNL: 'HNL',\n    /**\n     * Croatian kuna\n     */\n    HRK: 'HRK',\n    /**\n     * Haitian gourde\n     */\n    HTG: 'HTG',\n    /**\n     * Hungarian forint\n     */\n    HUF: 'HUF',\n    /**\n     * Indonesian rupiah\n     */\n    IDR: 'IDR',\n    /**\n     * Israeli new shekel\n     */\n    ILS: 'ILS',\n    /**\n     * Indian rupee\n     */\n    INR: 'INR',\n    /**\n     * Iraqi dinar\n     */\n    IQD: 'IQD',\n    /**\n     * Iranian rial\n     */\n    IRR: 'IRR',\n    /**\n     * Icelandic króna\n     */\n    ISK: 'ISK',\n    /**\n     * Jamaican dollar\n     */\n    JMD: 'JMD',\n    /**\n     * Jordanian dinar\n     */\n    JOD: 'JOD',\n    /**\n     * Kenyan shilling\n     */\n    KES: 'KES',\n    /**\n     * Kyrgyzstani som\n     */\n    KGS: 'KGS',\n    /**\n     * Cambodian riel\n     */\n    KHR: 'KHR',\n    /**\n     * Comoro franc\n     */\n    KMF: 'KMF',\n    /**\n     * North Korean won\n     */\n    KPW: 'KPW',\n    /**\n     * Kuwaiti dinar\n     */\n    KWD: 'KWD',\n    /**\n     * Cayman Islands dollar\n     */\n    KYD: 'KYD',\n    /**\n     * Kazakhstani tenge\n     */\n    KZT: 'KZT',\n    /**\n     * Lao kip\n     */\n    LAK: 'LAK',\n    /**\n     * Lebanese pound\n     */\n    LBP: 'LBP',\n    /**\n     * Sri Lankan rupee\n     */\n    LKR: 'LKR',\n    /**\n     * Liberian dollar\n     */\n    LRD: 'LRD',\n    /**\n     * Lesotho loti\n     */\n    LSL: 'LSL',\n    /**\n     * Libyan dinar\n     */\n    LYD: 'LYD',\n    /**\n     * Moroccan dirham\n     */\n    MAD: 'MAD',\n    /**\n     * Moldovan leu\n     */\n    MDL: 'MDL',\n    /**\n     * Malagasy ariary\n     */\n    MGA: 'MGA',\n    /**\n     * Macedonian denar\n     */\n    MKD: 'MKD',\n    /**\n     * Myanmar kyat\n     */\n    MMK: 'MMK',\n    /**\n     * Mongolian tögrög\n     */\n    MNT: 'MNT',\n    /**\n     * Macanese pataca\n     */\n    MOP: 'MOP',\n    /**\n     * Mauritanian ouguiya\n     */\n    MRU: 'MRU',\n    /**\n     * Mauritian rupee\n     */\n    MUR: 'MUR',\n    /**\n     * Maldivian rufiyaa\n     */\n    MVR: 'MVR',\n    /**\n     * Malawian kwacha\n     */\n    MWK: 'MWK',\n    /**\n     * Mexican peso\n     */\n    MXN: 'MXN',\n    /**\n     * Mexican Unidad de Inversion\n     */\n    MXV: 'MXV',\n    /**\n     * Mozambican metical\n     */\n    MZN: 'MZN',\n    /**\n     * Namibian dollar\n     */\n    NAD: 'NAD',\n    /**\n     * Nigerian naira\n     */\n    NGN: 'NGN',\n    /**\n     * Nicaraguan córdoba\n     */\n    NIO: 'NIO',\n    /**\n     * Norwegian krone\n     */\n    NOK: 'NOK',\n    /**\n     * Nepalese rupee\n     */\n    NPR: 'NPR',\n    /**\n     * New Zealand dollar\n     */\n    NZD: 'NZD',\n    /**\n     * Omani rial\n     */\n    OMR: 'OMR',\n    /**\n     * Panamanian balboa\n     */\n    PAB: 'PAB',\n    /**\n     * Peruvian sol\n     */\n    PEN: 'PEN',\n    /**\n     * Papua New Guinean kina\n     */\n    PGK: 'PGK',\n    /**\n     * Philippine peso\n     */\n    PHP: 'PHP',\n    /**\n     * Pakistani rupee\n     */\n    PKR: 'PKR',\n    /**\n     * Polish złoty\n     */\n    PLN: 'PLN',\n    /**\n     * Paraguayan guaraní\n     */\n    PYG: 'PYG',\n    /**\n     * Qatari riyal\n     */\n    QAR: 'QAR',\n    /**\n     * Romanian leu\n     */\n    RON: 'RON',\n    /**\n     * Serbian dinar\n     */\n    RSD: 'RSD',\n    /**\n     * Russian ruble\n     */\n    RUB: 'RUB',\n    /**\n     * Rwandan franc\n     */\n    RWF: 'RWF',\n    /**\n     * Saudi riyal\n     */\n    SAR: 'SAR',\n    /**\n     * Solomon Islands dollar\n     */\n    SBD: 'SBD',\n    /**\n     * Seychelles rupee\n     */\n    SCR: 'SCR',\n    /**\n     * Sudanese pound\n     */\n    SDG: 'SDG',\n    /**\n     * Swedish krona\n     */\n    SEK: 'SEK',\n    /**\n     * Saint Helena pound\n     */\n    SHP: 'SHP',\n    /**\n     * Sierra Leonean leone (new leone)\n     */\n    SLE: 'SLE',\n    /**\n     * Sierra Leonean leone (old leone)\n     */\n    SLL: 'SLL',\n    /**\n     * Somali shilling\n     */\n    SOS: 'SOS',\n    /**\n     * Surinamese dollar\n     */\n    SRD: 'SRD',\n    /**\n     * South Sudanese pound\n     */\n    SSP: 'SSP',\n    /**\n     * São Tomé and Príncipe dobra\n     */\n    STN: 'STN',\n    /**\n     * Salvadoran colón\n     */\n    SVC: 'SVC',\n    /**\n     * Syrian pound\n     */\n    SYP: 'SYP',\n    /**\n     * Swazi lilangeni\n     */\n    SZL: 'SZL',\n    /**\n     * Tajikistani somoni\n     */\n    TJS: 'TJS',\n    /**\n     * Turkmenistan manat\n     */\n    TMT: 'TMT',\n    /**\n     * Tunisian dinar\n     */\n    TND: 'TND',\n    /**\n     * Tongan paʻanga\n     */\n    TOP: 'TOP',\n    /**\n     * Turkish lira\n     */\n    TRY: 'TRY',\n    /**\n     * Trinidad and Tobago dollar\n     */\n    TTD: 'TTD',\n    /**\n     * New Taiwan dollar\n     */\n    TWD: 'TWD',\n    /**\n     * Tanzanian shilling\n     */\n    TZS: 'TZS',\n    /**\n     * Ukrainian hryvnia\n     */\n    UAH: 'UAH',\n    /**\n     * Ugandan shilling\n     */\n    UGX: 'UGX',\n    /**\n     * United States dollar (next day)\n     */\n    USN: 'USN',\n    /**\n     * Uruguay Peso en Unidades Indexadas\n     */\n    UYI: 'UYI',\n    /**\n     * Uruguayan peso\n     */\n    UYU: 'UYU',\n    /**\n     * Unidad previsional\n     */\n    UYW: 'UYW',\n    /**\n     * Uzbekistan som\n     */\n    UZS: 'UZS',\n    /**\n     * Venezuelan bolívar digital\n     */\n    VED: 'VED',\n    /**\n     * Venezuelan bolívar soberano\n     */\n    VES: 'VES',\n    /**\n     * Vanuatu vatu\n     */\n    VUV: 'VUV',\n    /**\n     * Samoan tala\n     */\n    WST: 'WST',\n    /**\n     * CFA franc BEAC\n     */\n    XAF: 'XAF',\n    /**\n     * Silver (one troy ounce)\n     */\n    XAG: 'XAG',\n    /**\n     * Gold (one troy ounce)\n     */\n    XAU: 'XAU',\n    /**\n     * European Composite Unit\n     */\n    XBA: 'XBA',\n    /**\n     * European Monetary Unit\n     */\n    XBB: 'XBB',\n    /**\n     * European Unit of Account 9\n     */\n    XBC: 'XBC',\n    /**\n     * European Unit of Account 17\n     */\n    XBD: 'XBD',\n    /**\n     * East Caribbean dollar\n     */\n    XCD: 'XCD',\n    /**\n     * Special drawing rights\n     */\n    XDR: 'XDR',\n    /**\n     * CFA franc BCEAO\n     */\n    XOF: 'XOF',\n    /**\n     * Palladium (one troy ounce)\n     */\n    XPD: 'XPD',\n    /**\n     * CFP franc\n     */\n    XPF: 'XPF',\n    /**\n     * Platinum (one troy ounce)\n     */\n    XPT: 'XPT',\n    /**\n     * SUCRE\n     */\n    XSU: 'XSU',\n    /**\n     * Code reserved for testing\n     */\n    XTS: 'XTS',\n    /**\n     * ADB Unit of Account\n     */\n    XUA: 'XUA',\n    /**\n     * No currency\n     */\n    XXX: 'XXX',\n    /**\n     * Yemeni rial\n     */\n    YER: 'YER',\n    /**\n     * South African rand\n     */\n    ZAR: 'ZAR',\n    /**\n     * Zambian kwacha\n     */\n    ZMW: 'ZMW',\n    /**\n     * Zimbabwean dollar\n     */\n    ZWL: 'ZWL',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 간편결제 결제수단\n */\nconst EasyPayPaymentMethod = {\n    /**\n     * 카드\n     */\n    CARD: 'CARD',\n    /**\n     * 포인트(충전, 적립) 결제\n     */\n    CHARGE: 'CHARGE',\n    /**\n     * 계좌결제\n     */\n    TRANSFER: 'TRANSFER',\n    /**\n     * 포인트 및 계좌결제가 모두 가능한 경우\n     */\n    MONEY: 'MONEY',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * PG 제휴로 간편결제를 이용할 때, 간편결제 UI를 직접 호출할 수 있는 간편결제\n */\nconst EasyPayProvider = {\n    /**\n     * 페이코\n     *\n     * - 토스페이먼츠\n     * - 나이스페이먼츠\n     * - KG이니시스\n     * - 스마트로\n     * - KSNET\n     * - 한국결제네트웍스\n     * - 웰컴페이먼츠\n     */\n    PAYCO: 'PAYCO',\n    /**\n     * 삼성페이\n     *\n     * - 토스페이먼츠\n     * - 나이스페이먼츠\n     * - KG이니시스\n     * - NHN KCP\n     * - 스마트로\n     * - 한국결제네트웍스\n     */\n    SAMSUNGPAY: 'SAMSUNGPAY',\n    /**\n     * SSG페이\n     *\n     * - 토스페이먼츠\n     * - 나이스페이먼츠\n     * - KG이니시스\n     * - NHN KCP\n     * - KSNET\n     */\n    SSGPAY: 'SSGPAY',\n    /**\n     * 카카오페이\n     *\n     * - 토스페이먼츠\n     * - 나이스페이먼츠\n     * - KG이니시스\n     * - 스마트로\n     * - NHN KCP\n     * - KSNET\n     * - 한국결제네트웍스\n     * - 웰컴페이먼츠\n     */\n    KAKAOPAY: 'KAKAOPAY',\n    /**\n     * 네이버페이\n     *\n     * - 토스페이먼츠\n     * - 나이스페이먼츠\n     * - KG이니시스\n     * - 스마트로\n     * - NHN KCP\n     * - KSNET\n     * - 한국결제네트웍스\n     */\n    NAVERPAY: 'NAVERPAY',\n    /**\n     * 차이페이\n     */\n    CHAI: 'CHAI',\n    /**\n     * L페이\n     *\n     * - 토스페이먼츠\n     * - 나이스페이먼츠\n     * - KG이니시스\n     * - 스마트로\n     * - KSNET\n     * - 웰컴페이먼츠\n     */\n    LPAY: 'LPAY',\n    /**\n     * K페이\n     */\n    KPAY: 'KPAY',\n    /**\n     * 토스페이\n     *\n     * - 토스페이먼츠\n     * - KG이니시스\n     * - NHN KCP\n     * - 스마트로\n     * - 한국결제네트웍스\n     * - 웰컴페이먼츠\n     */\n    TOSSPAY: 'TOSSPAY',\n    /**\n     * LG페이\n     *\n     * - 토스페이먼츠\n     */\n    LGPAY: 'LGPAY',\n    /**\n     * 애플페이\n     *\n     * - 토스페이먼츠\n     * - 나이스페이먼츠\n     * - KG이니시스\n     * - NHN KCP\n     */\n    APPLEPAY: 'APPLEPAY',\n    /**\n     * 핀페이\n     *\n     * - 스마트로\n     */\n    PINPAY: 'PINPAY',\n    /**\n     * SK페이\n     *\n     * - 나이스페이먼츠\n     */\n    SKPAY: 'SKPAY',\n    /**\n     * 토스 브랜드페이\n     */\n    TOSS_BRANDPAY: 'TOSS_BRANDPAY',\n    /**\n     * 하이픈\n     */\n    HYPHEN: 'HYPHEN',\n    /**\n     * 라인페이\n     *\n     * - 스마트로\n     */\n    LINEPAY: 'LINEPAY',\n    /**\n     * 티머니\n     *\n     * - 스마트로\n     */\n    TMONEY: 'TMONEY',\n    /**\n     * PayPay\n     *\n     * - KG이니시스 JPPG/SBPS 일본결제\n     */\n    PAYPAY: 'PAYPAY',\n    /**\n     * 아마존페이\n     *\n     * - KG이니시스 JPPG 일본결제\n     */\n    AMAZONPAY: 'AMAZONPAY',\n    /**\n     * 라쿠텐페이\n     *\n     * - KG이니시스 JPPG 일본결제\n     */\n    RAKUTENPAY: 'RAKUTENPAY',\n    /**\n     * dBarai\n     *\n     * - KG이니시스 JPPG 일본결제\n     */\n    DBARAI: 'DBARAI',\n    /**\n     * auPAY\n     *\n     * - KG이니시스 JPPG 일본결제\n     */\n    AUPAY: 'AUPAY',\n    /**\n     * Merpay\n     *\n     * - KG이니시스 JPPG 일본결제\n     */\n    MERPAY: 'MERPAY',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 구매자 성별\n */\nconst Gender = {\n    /**\n     * 남성\n     */\n    MALE: 'MALE',\n    /**\n     * 여성\n     */\n    FEMALE: 'FEMALE',\n    /**\n     * 기타\n     */\n    OTHER: 'OTHER',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **상품권 종류**\n */\nconst GiftCertificateType = {\n    /**\n     * 도서문화상품권\n     * | KG이니시스\n     */\n    BOOKNLIFE: 'BOOKNLIFE',\n    /**\n     * 스마트문상, (구)게임문화상품권\n     */\n    SMART_MUNSANG: 'SMART_MUNSANG',\n    /**\n     * 컬쳐랜드 문화상품권\n     */\n    CULTURELAND: 'CULTURELAND',\n    /**\n     * 문화상품권\n     */\n    CULTURE_GIFT: 'CULTURE_GIFT',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nconst IssueBillingKeyUIType = { PAYPAL_RT: 'PAYPAL_RT' };\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **UI 언어**\n *\n * KG이니시스, 스마트로, KSNET, 웰컴페이먼츠 (PC), 한국결제네트웍스, 엑심베이에서 설정 가능하며, PG마다 지원하는 언어 목록은 차이가 있습니다.\n */\nconst Locale = {\n    /**\n     * 한국어\n     *\n     * - KG이니시스\n     * - 스마트로\n     * - KSNET\n     * - 웰컴페이먼츠 (PC)\n     * - 한국결제네트웍스\n     * - 엑심베이\n     */\n    KO_KR: 'KO_KR',\n    /**\n     * 영어\n     *\n     * - KG이니시스\n     * - 스마트로\n     * - KSNET\n     * - 웰컴페이먼츠 (PC)\n     * - 한국결제네트웍스\n     * - 엑심베이\n     */\n    EN_US: 'EN_US',\n    /**\n     * 중국어 (중국 본토)\n     *\n     * - KG이니시스 (PC)\n     * - 웰컴페이먼츠 (PC)\n     * - 엑심베이\n     */\n    ZH_CN: 'ZH_CN',\n    /**\n     * 중국어 (대만)\n     *\n     * - 엑심베이\n     */\n    ZH_TW: 'ZH_TW',\n    /**\n     * 일본어\n     *\n     * - 엑심베이\n     */\n    JA_JP: 'JA_JP',\n    /**\n     * 러시아어\n     *\n     * - 엑심베이\n     */\n    RU_RU: 'RU_RU',\n    /**\n     * 타이어\n     *\n     * - 엑심베이\n     */\n    TH_TH: 'TH_TH',\n    /**\n     * 베트남어\n     *\n     * - 엑심베이\n     */\n    VI_VN: 'VI_VN',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nconst PaymentUIType = { PAYPAL_SPB: 'PAYPAL_SPB' };\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **결제수단 구분코드**\n *\n * PG사별 지원되는 결제수단이 모두 상이합니다.\n *\n * [각 PG사별 결제 연동 가이드](https://developers.portone.io/opi/ko/integration/pg/v2/readme?v=v2)를 참고하세요\n */\nconst PaymentPayMethod = {\n    /**\n     * 카드\n     */\n    CARD: 'CARD',\n    /**\n     * 가상계좌\n     */\n    VIRTUAL_ACCOUNT: 'VIRTUAL_ACCOUNT',\n    /**\n     * 계좌이체\n     */\n    TRANSFER: 'TRANSFER',\n    /**\n     * 휴대폰 소액결제\n     */\n    MOBILE: 'MOBILE',\n    /**\n     * 상품권\n     */\n    GIFT_CERTIFICATE: 'GIFT_CERTIFICATE',\n    /**\n     * 간편 결제\n     */\n    EASY_PAY: 'EASY_PAY',\n    /**\n     * 페이팔(SPB)\n     */\n    PAYPAL: 'PAYPAL',\n    /**\n     * 알리페이\n     */\n    ALIPAY: 'ALIPAY',\n    /**\n     * 편의점 결제\n     */\n    CONVENIENCE_STORE: 'CONVENIENCE_STORE',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **결제수단 구분코드**\n *\n * PG사별 지원되는 결제수단이 모두 상이합니다.\n *\n * [각 PG사별 결제 연동 가이드](https://developers.portone.io/opi/ko/integration/pg/v2/readme?v=v2)를 참고하세요\n */\nconst PayMethod = PaymentPayMethod;\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **PG사 구분코드**\n */\nconst PgProvider = {\n    HTML5_INICIS: 'HTML5_INICIS',\n    PAYPAL: 'PAYPAL',\n    INICIS: 'INICIS',\n    DANAL: 'DANAL',\n    NICE: 'NICE',\n    DANAL_TPAY: 'DANAL_TPAY',\n    UPLUS: 'UPLUS',\n    NAVERPAY: 'NAVERPAY',\n    SETTLE: 'SETTLE',\n    KCP: 'KCP',\n    MOBILIANS: 'MOBILIANS',\n    KAKAOPAY: 'KAKAOPAY',\n    NAVERCO: 'NAVERCO',\n    KICC: 'KICC',\n    EXIMBAY: 'EXIMBAY',\n    SMILEPAY: 'SMILEPAY',\n    PAYCO: 'PAYCO',\n    KCP_BILLING: 'KCP_BILLING',\n    ALIPAY: 'ALIPAY',\n    CHAI: 'CHAI',\n    BLUEWALNUT: 'BLUEWALNUT',\n    SMARTRO: 'SMARTRO',\n    PAYMENTWALL: 'PAYMENTWALL',\n    TOSSPAYMENTS: 'TOSSPAYMENTS',\n    KCP_QUICK: 'KCP_QUICK',\n    DAOU: 'DAOU',\n    GALAXIA: 'GALAXIA',\n    TOSSPAY: 'TOSSPAY',\n    KCP_DIRECT: 'KCP_DIRECT',\n    SETTLE_ACC: 'SETTLE_ACC',\n    SETTLE_FIRM: 'SETTLE_FIRM',\n    INICIS_UNIFIED: 'INICIS_UNIFIED',\n    KSNET: 'KSNET',\n    PAYPAL_V2: 'PAYPAL_V2',\n    SMARTRO_V2: 'SMARTRO_V2',\n    NICE_V2: 'NICE_V2',\n    TOSS_BRANDPAY: 'TOSS_BRANDPAY',\n    WELCOME: 'WELCOME',\n    TOSSPAY_V2: 'TOSSPAY_V2',\n    INICIS_V2: 'INICIS_V2',\n    KPN: 'KPN',\n    KCP_V2: 'KCP_V2',\n    HYPHEN: 'HYPHEN',\n    EXIMBAY_V2: 'EXIMBAY_V2',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **상품 유형**\n */\nconst ProductType = {\n    /**\n     * 실물\n     */\n    REAL: 'REAL',\n    /**\n     * 디지털\n     */\n    DIGITAL: 'DIGITAL',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **트랜잭션 유형**\n *\n * - PAYMENT: 결제\n * - ISSUE\\_BILLING\\_KEY: 빌링키 발급\n * - IDENTITY\\_VERIFICATION: 본인 인증\n * - ISSUE\\_BILLING\\_KEY\\_AND\\_PAY: 빌링키 발급과 동시에 결제\n */\nconst TransactionType = {\n    /**\n     * 결제\n     */\n    PAYMENT: 'PAYMENT',\n    /**\n     * 빌링키 발급\n     */\n    ISSUE_BILLING_KEY: 'ISSUE_BILLING_KEY',\n    /**\n     * 본인 인증\n     */\n    IDENTITY_VERIFICATION: 'IDENTITY_VERIFICATION',\n    /**\n     * 빌링키 발급 및 초회결제\n     */\n    ISSUE_BILLING_KEY_AND_PAY: 'ISSUE_BILLING_KEY_AND_PAY',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nconst WindowType = {\n    IFRAME: 'IFRAME',\n    POPUP: 'POPUP',\n    REDIRECTION: 'REDIRECTION',\n    UI: 'UI',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **결제 통화**\n *\n * 원화 결제 시 `KRW`입니다.\n */\nconst PaymentCurrency = Currency;\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **단독 노출할 인증 업체 코드**\n *\n * 인증 업체 선택 화면 없이 설정한 인증 업체를 통해 인증하도록 합니다.\n */\nconst InicisUnifiedDirectAgency = {\n    /**\n     * 페이코\n     */\n    PAYCO: 'PAYCO',\n    /**\n     * 패스 (통신사)\n     */\n    PASS: 'PASS',\n    /**\n     * 토스\n     */\n    TOSS: 'TOSS',\n    /**\n     * 금융결제원\n     */\n    KFTC: 'KFTC',\n    /**\n     * 카카오\n     */\n    KAKAO: 'KAKAO',\n    /**\n     * 네이버\n     */\n    NAVER: 'NAVER',\n    /**\n     * 삼성패스\n     */\n    SAMSUNG: 'SAMSUNG',\n    /**\n     * 신한은행\n     */\n    SHINHAN: 'SHINHAN',\n    /**\n     * 국민은행\n     */\n    KB: 'KB',\n    /**\n     * 하나은행\n     */\n    HANA: 'HANA',\n    /**\n     * 우리은행\n     */\n    WOORI: 'WOORI',\n    /**\n     * 농협은행\n     */\n    NH: 'NH',\n    /**\n     * 카카오뱅크\n     */\n    KAKAOBANK: 'KAKAOBANK',\n    /**\n     * 휴대폰 인증, 별도 계약 필요\n     */\n    SMS: 'SMS',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **인증 창에서 고객 정보를 미리 채울지 여부**\n *\n * `Y`, `N` 중 하나를 입력해주세요.\n *\n * `Y`인 경우 이름, 연락처, 출생년도, 출생월, 출생일을 필수로 입력해야 합니다.\n */\nconst InicisUnifiedFlgFixedUser = { Y: 'Y', N: 'N' };\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 결제 비밀번호 등록 Skip 여부\n */\nconst SmartroV2IsPwdPass = {\n    /**\n     * 비밀번호 설정 미사용\n     */\n    Y: 'Y',\n    /**\n     * 비밀번호 설정 사용\n     */\n    N: 'N',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 개인/법인카드 선택 옵션\n */\nconst InicisV2CardUse = {\n    /**\n     * 개인카드만 선택 가능\n     */\n    percard: 'percard',\n    /**\n     * 법인 카드만 선택 가능\n     */\n    cocard: 'cocard',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 결제창에서 주민번호/사업자 번호 고정여부 설정\n */\nconst KcpV2BatchSocChoice = {\n    /**\n     * 주민번호만 표시\n     */\n    S: 'S',\n    /**\n     * 사업자번호만 표시\n     */\n    C: 'C',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * **페이팔 V2 국가 코드**\n */\nconst PaypalV2Country = {\n    AL: 'AL',\n    DZ: 'DZ',\n    AD: 'AD',\n    AO: 'AO',\n    AI: 'AI',\n    AG: 'AG',\n    AR: 'AR',\n    AM: 'AM',\n    AW: 'AW',\n    AU: 'AU',\n    AT: 'AT',\n    AZ: 'AZ',\n    BS: 'BS',\n    BH: 'BH',\n    BB: 'BB',\n    BY: 'BY',\n    BE: 'BE',\n    BZ: 'BZ',\n    BJ: 'BJ',\n    BM: 'BM',\n    BT: 'BT',\n    BO: 'BO',\n    BA: 'BA',\n    BW: 'BW',\n    BR: 'BR',\n    VG: 'VG',\n    BN: 'BN',\n    BG: 'BG',\n    BF: 'BF',\n    BI: 'BI',\n    KH: 'KH',\n    CM: 'CM',\n    CA: 'CA',\n    CV: 'CV',\n    KY: 'KY',\n    TD: 'TD',\n    CL: 'CL',\n    CN: 'CN',\n    CO: 'CO',\n    KM: 'KM',\n    CG: 'CG',\n    CD: 'CD',\n    CK: 'CK',\n    CR: 'CR',\n    CI: 'CI',\n    HR: 'HR',\n    CY: 'CY',\n    CZ: 'CZ',\n    DK: 'DK',\n    DJ: 'DJ',\n    DM: 'DM',\n    DO: 'DO',\n    EC: 'EC',\n    EG: 'EG',\n    SV: 'SV',\n    ER: 'ER',\n    EE: 'EE',\n    ET: 'ET',\n    FK: 'FK',\n    FO: 'FO',\n    FJ: 'FJ',\n    FI: 'FI',\n    FR: 'FR',\n    GF: 'GF',\n    PF: 'PF',\n    GA: 'GA',\n    GM: 'GM',\n    GE: 'GE',\n    DE: 'DE',\n    GI: 'GI',\n    GR: 'GR',\n    GL: 'GL',\n    GD: 'GD',\n    GP: 'GP',\n    GT: 'GT',\n    GN: 'GN',\n    GW: 'GW',\n    GY: 'GY',\n    HN: 'HN',\n    HK: 'HK',\n    HU: 'HU',\n    IS: 'IS',\n    IN: 'IN',\n    ID: 'ID',\n    IE: 'IE',\n    IL: 'IL',\n    IT: 'IT',\n    JM: 'JM',\n    JP: 'JP',\n    JO: 'JO',\n    KZ: 'KZ',\n    KE: 'KE',\n    KI: 'KI',\n    KW: 'KW',\n    KG: 'KG',\n    LA: 'LA',\n    LV: 'LV',\n    LS: 'LS',\n    LI: 'LI',\n    LT: 'LT',\n    LU: 'LU',\n    MK: 'MK',\n    MG: 'MG',\n    MW: 'MW',\n    MY: 'MY',\n    MV: 'MV',\n    ML: 'ML',\n    MT: 'MT',\n    MH: 'MH',\n    MQ: 'MQ',\n    MR: 'MR',\n    MU: 'MU',\n    YT: 'YT',\n    MX: 'MX',\n    FM: 'FM',\n    MD: 'MD',\n    MC: 'MC',\n    MN: 'MN',\n    ME: 'ME',\n    MS: 'MS',\n    MA: 'MA',\n    MZ: 'MZ',\n    NA: 'NA',\n    NR: 'NR',\n    NP: 'NP',\n    NL: 'NL',\n    AN: 'AN',\n    NC: 'NC',\n    NZ: 'NZ',\n    NI: 'NI',\n    NE: 'NE',\n    NG: 'NG',\n    NU: 'NU',\n    NF: 'NF',\n    NO: 'NO',\n    OM: 'OM',\n    PW: 'PW',\n    PA: 'PA',\n    PG: 'PG',\n    PY: 'PY',\n    PE: 'PE',\n    PH: 'PH',\n    PN: 'PN',\n    PL: 'PL',\n    PT: 'PT',\n    QA: 'QA',\n    RE: 'RE',\n    RO: 'RO',\n    RU: 'RU',\n    RW: 'RW',\n    WS: 'WS',\n    SM: 'SM',\n    ST: 'ST',\n    SA: 'SA',\n    SN: 'SN',\n    RS: 'RS',\n    SC: 'SC',\n    SL: 'SL',\n    SG: 'SG',\n    SK: 'SK',\n    SI: 'SI',\n    SB: 'SB',\n    SO: 'SO',\n    ZA: 'ZA',\n    KR: 'KR',\n    ES: 'ES',\n    LK: 'LK',\n    SH: 'SH',\n    KN: 'KN',\n    LC: 'LC',\n    PM: 'PM',\n    VC: 'VC',\n    SR: 'SR',\n    SJ: 'SJ',\n    SZ: 'SZ',\n    SE: 'SE',\n    CH: 'CH',\n    TW: 'TW',\n    TJ: 'TJ',\n    TZ: 'TZ',\n    TH: 'TH',\n    TG: 'TG',\n    TO: 'TO',\n    TT: 'TT',\n    TN: 'TN',\n    TM: 'TM',\n    TC: 'TC',\n    TV: 'TV',\n    TR: 'TR',\n    UG: 'UG',\n    UA: 'UA',\n    AE: 'AE',\n    GB: 'GB',\n    US: 'US',\n    UY: 'UY',\n    VU: 'VU',\n    VA: 'VA',\n    VE: 'VE',\n    VN: 'VN',\n    WF: 'WF',\n    YE: 'YE',\n    ZM: 'ZM',\n    ZW: 'ZW',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nconst PaypalV2PaymentSourcePaypalExperienceContextShippingPreference = {\n    GET_FROM_FILE: 'GET_FROM_FILE',\n    NO_SHIPPING: 'NO_SHIPPING',\n    SET_PROVIDED_ADDRESS: 'SET_PROVIDED_ADDRESS',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nconst PaypalV2PaymentSourcePaypalExperienceContextLandingPage = {\n    LOGIN: 'LOGIN',\n    GUEST_CHECKOUT: 'GUEST_CHECKOUT',\n    NO_PREFERENCE: 'NO_PREFERENCE',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nconst PaypalV2PaymentSourcePaypalExperienceContextPaymentMethodPreference = {\n    UNRESTRICTED: 'UNRESTRICTED',\n    IMMEDIATE_PAYMENT_REQUIRED: 'IMMEDIATE_PAYMENT_REQUIRED',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 간편 결제 표시 구분\n */\nconst KsnetSndQpayType = {\n    /**\n     * 간편 결제 표시\n     */\n    '1': '1',\n    /**\n     * 간편 결제 미표시\n     */\n    '0': '0',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 해외 카드만 결제를 허용할지 여부(기본값: `\"KR\"`)\n *\n * `\"KR\"`, `\"EN\"` 중 하나의 값으로 입력해주세요.\n */\nconst SmartroV2OpenType = { KR: 'KR', EN: 'EN' };\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 결제창 스크롤 미사용 여부 (PC Only, Y: 미사용 / N(default): 사용)\n */\nconst NiceV2DisableScroll = { Y: 'Y', N: 'N' };\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 결제창 스킨 색상 설정\n *\n * `\"red\", \"green\", \"purple\", \"gray\", \"dark\"` 중 하나의 값으로 입력해주세요.\n */\nconst NiceV2SkinType = {\n    red: 'red',\n    green: 'green',\n    purple: 'purple',\n    gray: 'gray',\n    dark: 'dark',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 신용카드 쿠폰 자동 적용 여부 (Y: 사전 등록된 선 할인 쿠폰을 자동 적용 / N: 쿠폰 미적용(기본값))\n *\n * 할부 거래 요청 시 할인 적용 후 승인 금액이 할부 가능 금액 (50,000) 미만인 경우 인증 실패 처리\n */\nconst NiceV2DirectCoupon = {\n    /**\n     * 사전 등록된 선 할인 쿠폰을 자동 적용\n     */\n    Y: 'Y',\n    /**\n     * 쿠폰 미적용(기본값)\n     */\n    N: 'N',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 다이렉트 호출 결제 수단 (BANK: 계좌이체/CELLPHONE: 휴대폰 소액결제)\n */\nconst NiceV2DirectShow = {\n    /**\n     * 계좌이체\n     */\n    BANK: 'BANK',\n    /**\n     * 휴대폰 소액결제\n     */\n    CELLPHONE: 'CELLPHONE',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 삼성페이 고객사 유형 (01: 삼성페이 內 쇼핑 / 99: 기타 (기본값))\n */\nconst NiceV2SamPayMallType = {\n    /**\n     * 삼성페이 內 쇼핑\n     */\n    '01': '01',\n    /**\n     * 기타 (기본값)\n     */\n    '99': '99',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 현금영수증 발급타입\n *\n * - CULTURE: 문화비\n * - GENERAL: 일반 (기본값)\n * - PUBLIC\\_TP: 교통비\n */\nconst TosspayV2CashReceiptTradeOption = {\n    /**\n     * 문화비\n     */\n    CULTURE: 'CULTURE',\n    /**\n     * 일반 (기본값)\n     */\n    GENERAL: 'GENERAL',\n    /**\n     * 교통비\n     */\n    PUBLIC_TP: 'PUBLIC_TP',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nconst KpnCardSelect = {\n    /**\n     * 해외카드\n     */\n    GLOBAL: 'GLOBAL',\n    /**\n     * 11Pay\n     */\n    '11PAY': '11PAY',\n    /**\n     * 구인증\n     */\n    LEGACY_AUTH: 'LEGACY_AUTH',\n    /**\n     * 키인\n     */\n    KEY_IN: 'KEY_IN',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 포인트 결제의 경우 신용카드 + 포인트 결제인데, N으로 설정 시 포인트로만 결제가 이루어짐\n */\nconst KcpV2ComplexPnt = { Y: 'Y', N: 'N' };\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 가상계좌, 계좌이체 시 현금영수증 노출 여부\n */\nconst KcpV2DispTax = { Y: 'Y', N: 'N', R: 'R', E: 'E' };\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 결제 상품 유입경로\n */\nconst NaverpayProductItemPayReferrer = {\n    NAVER_BOOK: 'NAVER_BOOK',\n    NAVER_MUSIC: 'NAVER_MUSIC',\n    NAVER_SHOPPING: 'NAVER_SHOPPING',\n    NAVER_MAP: 'NAVER_MAP',\n    NAVER_PLACE: 'NAVER_PLACE',\n    SEARCH_AD: 'SEARCH_AD',\n    NAVER_SEARCH: 'NAVER_SEARCH',\n    BRAND_SEARCH: 'BRAND_SEARCH',\n    PARTNER_DIRECT: 'PARTNER_DIRECT',\n    ETC: 'ETC',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 위젯에 보여줄 결제 수단. 예) 카드 전달시 등록한 결제 수단 중 카드만 노출 됨\n */\nconst TossBrandpayWidgetOptionsMethodType = {\n    CARD: '카드',\n    ACCOUNT: '계좌',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 현금영수증 발급 여부\n */\nconst EximbayV2TaxReceiptStatus = { Y: 'Y', N: 'N' };\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 인앱 웹뷰 여부\n */\nconst EximbayV2SettingsCallFromApp = { Y: 'Y', N: 'N' };\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n/**\n * 버튼 스타일\n *\n * - default(기본값): 모서리가 둥글고 주변에 여백을 가진 버튼\n * - full: 하단 영역이 전부 채워지는 형태의 버튼\n */\nconst TossBrandpayBrandpayOptionsUiButtonStyle = {\n    /**\n     * 모서리가 둥글고 주변에 여백을 가진 버튼(기본값)\n     */\n    default: 'default',\n    /**\n     * 하단 영역이 전부 채워지는 형태의 버튼\n     */\n    full: 'full',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\n\nvar index$1 = {\n    __proto__: null,\n    Bank: Bank,\n    BillingKeyAndPayMethod: BillingKeyAndPayMethod,\n    BillingKeyMethod: BillingKeyMethod,\n    CardCompany: CardCompany,\n    Carrier: Carrier,\n    CashReceiptType: CashReceiptType,\n    Country: Country,\n    Currency: Currency,\n    EasyPayPaymentMethod: EasyPayPaymentMethod,\n    EasyPayProvider: EasyPayProvider,\n    EximbayV2SettingsCallFromApp: EximbayV2SettingsCallFromApp,\n    EximbayV2TaxReceiptStatus: EximbayV2TaxReceiptStatus,\n    Gender: Gender,\n    GiftCertificateType: GiftCertificateType,\n    InicisUnifiedDirectAgency: InicisUnifiedDirectAgency,\n    InicisUnifiedFlgFixedUser: InicisUnifiedFlgFixedUser,\n    InicisV2CardUse: InicisV2CardUse,\n    IssueBillingKeyUIType: IssueBillingKeyUIType,\n    KcpV2BatchSocChoice: KcpV2BatchSocChoice,\n    KcpV2ComplexPnt: KcpV2ComplexPnt,\n    KcpV2DispTax: KcpV2DispTax,\n    KpnCardSelect: KpnCardSelect,\n    KsnetSndQpayType: KsnetSndQpayType,\n    Locale: Locale,\n    NaverpayProductItemPayReferrer: NaverpayProductItemPayReferrer,\n    NiceV2DirectCoupon: NiceV2DirectCoupon,\n    NiceV2DirectShow: NiceV2DirectShow,\n    NiceV2DisableScroll: NiceV2DisableScroll,\n    NiceV2SamPayMallType: NiceV2SamPayMallType,\n    NiceV2SkinType: NiceV2SkinType,\n    PayMethod: PayMethod,\n    PaymentCurrency: PaymentCurrency,\n    PaymentPayMethod: PaymentPayMethod,\n    PaymentUIType: PaymentUIType,\n    PaypalV2Country: PaypalV2Country,\n    PaypalV2PaymentSourcePaypalExperienceContextLandingPage: PaypalV2PaymentSourcePaypalExperienceContextLandingPage,\n    PaypalV2PaymentSourcePaypalExperienceContextPaymentMethodPreference: PaypalV2PaymentSourcePaypalExperienceContextPaymentMethodPreference,\n    PaypalV2PaymentSourcePaypalExperienceContextShippingPreference: PaypalV2PaymentSourcePaypalExperienceContextShippingPreference,\n    PgProvider: PgProvider,\n    ProductType: ProductType,\n    SmartroV2IsPwdPass: SmartroV2IsPwdPass,\n    SmartroV2OpenType: SmartroV2OpenType,\n    TossBrandpayBrandpayOptionsUiButtonStyle: TossBrandpayBrandpayOptionsUiButtonStyle,\n    TossBrandpayWidgetOptionsMethodType: TossBrandpayWidgetOptionsMethodType,\n    TosspayV2CashReceiptTradeOption: TosspayV2CashReceiptTradeOption,\n    TransactionType: TransactionType,\n    WindowType: WindowType\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nconst CheckoutServiceErrorCode = {\n    BadRequest: 'BadRequest',\n    ParseChannelFailed: 'ParseChannelFailed',\n    ParseIdentityVerificationPrepareResponseFailed: 'ParseIdentityVerificationPrepareResponseFailed',\n    ParseIssuePrepareResponseFailed: 'ParseIssuePrepareResponseFailed',\n    ParsePgRawIdentityVerificationResponseFailed: 'ParsePgRawIdentityVerificationResponseFailed',\n    ParsePgRawIssueBillingKeyResponseFailed: 'ParsePgRawIssueBillingKeyResponseFailed',\n    ParsePgRawResponseFailed: 'ParsePgRawResponseFailed',\n    ParsePrepareResponseFailed: 'ParsePrepareResponseFailed',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nconst GrpcErrorCode = {\n    /**\n     * 0/200\n     */\n    Ok: 'Ok',\n    /**\n     * 1/422\n     */\n    Cancelled: 'Cancelled',\n    /**\n     * 2/500\n     */\n    Unknown: 'Unknown',\n    /**\n     * 3/400\n     */\n    InvalidArgument: 'InvalidArgument',\n    /**\n     * 4/504\n     */\n    DeadlineExceeded: 'DeadlineExceeded',\n    /**\n     * 5/404\n     */\n    NotFound: 'NotFound',\n    /**\n     * 6/409\n     */\n    AlreadyExists: 'AlreadyExists',\n    /**\n     * 7/403\n     */\n    PermissionDenied: 'PermissionDenied',\n    /**\n     * 8/429\n     */\n    ResourceExhausted: 'ResourceExhausted',\n    /**\n     * 9/400\n     */\n    FailedPrecondition: 'FailedPrecondition',\n    /**\n     * 10/409\n     */\n    Aborted: 'Aborted',\n    /**\n     * 11/400\n     */\n    OutOfRange: 'OutOfRange',\n    /**\n     * 2/501\n     */\n    Unimplemented: 'Unimplemented',\n    /**\n     * 13/500\n     */\n    Internal: 'Internal',\n    /**\n     * 14/503\n     */\n    Unavailable: 'Unavailable',\n    /**\n     * 15/500\n     */\n    DataLoss: 'DataLoss',\n    /**\n     * 16/401\n     */\n    Unauthenticated: 'Unauthenticated',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nconst TxServiceIdentityVerificationErrorCode = {\n    RequestParseFailed: 'RequestParseFailed',\n    InvalidEntityState: 'InvalidEntityState',\n    StoreNotFound: 'StoreNotFound',\n    ChannelNotFound: 'ChannelNotFound',\n    PGProviderError: 'PGProviderError',\n    IdentityVerificationAlreadyVerified: 'IdentityVerificationAlreadyVerified',\n    AllChannelsNotSatisfied: 'AllChannelsNotSatisfied',\n    UnknownError: 'UnknownError',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nconst TxServiceIssueErrorCode = {\n    RequestParseFailed: 'RequestParseFailed',\n    InvalidEntityState: 'InvalidEntityState',\n    ConfirmUrlRequired: 'ConfirmUrlRequired',\n    StoreNotFound: 'StoreNotFound',\n    ChannelNotFound: 'ChannelNotFound',\n    PGProviderError: 'PGProviderError',\n    AllChannelsNotSatisfied: 'AllChannelsNotSatisfied',\n    BillingKeyNotFound: 'BillingKeyNotFound',\n    UnknownError: 'UnknownError',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nconst TxServicePayErrorCode = {\n    RequestParseFailed: 'RequestParseFailed',\n    InvalidEntityState: 'InvalidEntityState',\n    ConfirmUrlRequired: 'ConfirmUrlRequired',\n    StoreNotFound: 'StoreNotFound',\n    ChannelNotFound: 'ChannelNotFound',\n    PGProviderError: 'PGProviderError',\n    PaymentNotFound: 'PaymentNotFound',\n    PaymentAlreadyPaid: 'PaymentAlreadyPaid',\n    TransactionNotFound: 'TransactionNotFound',\n    AllChannelsNotSatisfied: 'AllChannelsNotSatisfied',\n    AmountNotEqualToPredefined: 'AmountNotEqualToPredefined',\n    ConfirmProcessFailed: 'ConfirmProcessFailed',\n    UnknownError: 'UnknownError',\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction isIdentityVerificationError(error) {\n    return (isPortOneError(error) &&\n        error.__portOneErrorType === 'IdentityVerificationError');\n}\nclass IdentityVerificationError extends Error {\n    static [Symbol.hasInstance](instance) {\n        return isIdentityVerificationError(instance);\n    }\n    constructor({ code, message, identityVerificationId, identityVerificationTxId, pgCode, pgMessage, }) {\n        super(message);\n        this.__portOneErrorType = 'IdentityVerificationError';\n        this.transactionType = 'IDENTITY_VERIFICATION';\n        this.code = code;\n        this.message = message;\n        this.identityVerificationId = identityVerificationId;\n        this.identityVerificationTxId = identityVerificationTxId;\n        this.pgCode = pgCode;\n        this.pgMessage = pgMessage;\n    }\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction isIssueBillingKeyAndPayError(error) {\n    return (isPortOneError(error) &&\n        error.__portOneErrorType === 'IssueBillingKeyAndPayError');\n}\nclass IssueBillingKeyAndPayError extends Error {\n    static [Symbol.hasInstance](instance) {\n        return isIssueBillingKeyAndPayError(instance);\n    }\n    constructor({ txId, paymentId, billingKey, code, message, pgCode, pgMessage, }) {\n        super(message);\n        this.__portOneErrorType = 'IssueBillingKeyAndPayError';\n        this.transactionType = 'ISSUE_BILLING_KEY_AND_PAY';\n        this.txId = txId;\n        this.paymentId = paymentId;\n        this.billingKey = billingKey;\n        this.code = code;\n        this.message = message;\n        this.pgCode = pgCode;\n        this.pgMessage = pgMessage;\n    }\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction isIssueBillingKeyError(error) {\n    return (isPortOneError(error) && error.__portOneErrorType === 'IssueBillingKeyError');\n}\nclass IssueBillingKeyError extends Error {\n    static [Symbol.hasInstance](instance) {\n        return isIssueBillingKeyError(instance);\n    }\n    constructor({ code, message, billingKey, pgCode, pgMessage, }) {\n        super(message);\n        this.__portOneErrorType = 'IssueBillingKeyError';\n        this.transactionType = 'ISSUE_BILLING_KEY';\n        this.code = code;\n        this.message = message;\n        this.billingKey = billingKey;\n        this.pgCode = pgCode;\n        this.pgMessage = pgMessage;\n    }\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction isModuleError(error) {\n    return isPortOneError(error) && error.__portOneErrorType === 'ModuleError';\n}\nclass ModuleError extends Error {\n    static [Symbol.hasInstance](instance) {\n        return isModuleError(instance);\n    }\n    constructor({ code, message, }) {\n        super(message);\n        this.__portOneErrorType = 'ModuleError';\n        this.code = code;\n        this.message = message;\n    }\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction isPaymentError(error) {\n    return isPortOneError(error) && error.__portOneErrorType === 'PaymentError';\n}\nclass PaymentError extends Error {\n    static [Symbol.hasInstance](instance) {\n        return isPaymentError(instance);\n    }\n    constructor({ code, message, txId, paymentId, pgCode, pgMessage, }) {\n        super(message);\n        this.__portOneErrorType = 'PaymentError';\n        this.transactionType = 'PAYMENT';\n        this.code = code;\n        this.message = message;\n        this.txId = txId;\n        this.paymentId = paymentId;\n        this.pgCode = pgCode;\n        this.pgMessage = pgMessage;\n    }\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction isLoadIssueBillingKeyUIError(error) {\n    return (isPortOneError(error) &&\n        error.__portOneErrorType === 'LoadIssueBillingKeyUIError');\n}\nclass LoadIssueBillingKeyUIError extends Error {\n    static [Symbol.hasInstance](instance) {\n        return isLoadIssueBillingKeyUIError(instance);\n    }\n    constructor({ code, message, }) {\n        super(message);\n        this.__portOneErrorType = 'LoadIssueBillingKeyUIError';\n        this.transactionType = 'ISSUE_BILLING_KEY';\n        this.code = code;\n        this.message = message;\n    }\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction isLoadPaymentUIError(error) {\n    return (isPortOneError(error) && error.__portOneErrorType === 'LoadPaymentUIError');\n}\nclass LoadPaymentUIError extends Error {\n    static [Symbol.hasInstance](instance) {\n        return isLoadPaymentUIError(instance);\n    }\n    constructor({ code, message, }) {\n        super(message);\n        this.__portOneErrorType = 'LoadPaymentUIError';\n        this.transactionType = 'PAYMENT';\n        this.code = code;\n        this.message = message;\n    }\n}\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nfunction isPortOneError(error) {\n    return (error != null &&\n        typeof error === 'object' &&\n        '__portOneErrorType' in error &&\n        typeof error.__portOneErrorType === 'string');\n}\n\nvar index = {\n    __proto__: null,\n    CheckoutServiceErrorCode: CheckoutServiceErrorCode,\n    GrpcErrorCode: GrpcErrorCode,\n    IdentityVerificationError: IdentityVerificationError,\n    IssueBillingKeyAndPayError: IssueBillingKeyAndPayError,\n    IssueBillingKeyError: IssueBillingKeyError,\n    LoadIssueBillingKeyUIError: LoadIssueBillingKeyUIError,\n    LoadPaymentUIError: LoadPaymentUIError,\n    ModuleError: ModuleError,\n    PaymentError: PaymentError,\n    TxServiceIdentityVerificationErrorCode: TxServiceIdentityVerificationErrorCode,\n    TxServiceIssueErrorCode: TxServiceIssueErrorCode,\n    TxServicePayErrorCode: TxServicePayErrorCode,\n    isIdentityVerificationError: isIdentityVerificationError,\n    isIssueBillingKeyAndPayError: isIssueBillingKeyAndPayError,\n    isIssueBillingKeyError: isIssueBillingKeyError,\n    isLoadIssueBillingKeyUIError: isLoadIssueBillingKeyUIError,\n    isLoadPaymentUIError: isLoadPaymentUIError,\n    isModuleError: isModuleError,\n    isPaymentError: isPaymentError,\n    isPortOneError: isPortOneError\n};\n\n// This file is automatically generated by the SDK generator.\n// Do not edit this file manually.\nconst PortOne = {\n    requestPayment,\n    requestIdentityVerification,\n    requestIssueBillingKeyAndPay,\n    requestIssueBillingKey,\n    loadPaymentUI,\n    loadIssueBillingKeyUI,\n    updateLoadPaymentUIRequest,\n    updateLoadIssueBillingKeyUIRequest,\n};\n\nexport { Bank, BillingKeyAndPayMethod, BillingKeyMethod, CardCompany, Carrier, CashReceiptType, CheckoutServiceErrorCode, Country, Currency, EasyPayPaymentMethod, EasyPayProvider, index$1 as Entity, EximbayV2SettingsCallFromApp, EximbayV2TaxReceiptStatus, Gender, GiftCertificateType, GrpcErrorCode, IdentityVerificationError, InicisUnifiedDirectAgency, InicisUnifiedFlgFixedUser, InicisV2CardUse, IssueBillingKeyAndPayError, IssueBillingKeyError, IssueBillingKeyUIType, KcpV2BatchSocChoice, KcpV2ComplexPnt, KcpV2DispTax, KpnCardSelect, KsnetSndQpayType, LoadIssueBillingKeyUIError, LoadPaymentUIError, Locale, ModuleError, NaverpayProductItemPayReferrer, NiceV2DirectCoupon, NiceV2DirectShow, NiceV2DisableScroll, NiceV2SamPayMallType, NiceV2SkinType, PayMethod, PaymentCurrency, PaymentError, PaymentPayMethod, PaymentUIType, PaypalV2Country, PaypalV2PaymentSourcePaypalExperienceContextLandingPage, PaypalV2PaymentSourcePaypalExperienceContextPaymentMethodPreference, PaypalV2PaymentSourcePaypalExperienceContextShippingPreference, PgProvider, ProductType, SmartroV2IsPwdPass, SmartroV2OpenType, TossBrandpayBrandpayOptionsUiButtonStyle, TossBrandpayWidgetOptionsMethodType, TosspayV2CashReceiptTradeOption, TransactionType, TxServiceIdentityVerificationErrorCode, TxServiceIssueErrorCode, TxServicePayErrorCode, WindowType, setPortOneJsSdkUrl as __INTERNAL__setPortOneSdkUrl, PortOne as default, index as errors, isIdentityVerificationError, isIssueBillingKeyAndPayError, isIssueBillingKeyError, isLoadIssueBillingKeyUIError, isLoadPaymentUIError, isModuleError, isPaymentError, isPortOneError, loadIssueBillingKeyUI, loadPaymentUI, requestIdentityVerification, requestIssueBillingKey, requestIssueBillingKeyAndPay, requestPayment, updateLoadIssueBillingKeyUIRequest, updateLoadPaymentUIRequest };\n"],
  "mappings": "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",
  "names": []
}
