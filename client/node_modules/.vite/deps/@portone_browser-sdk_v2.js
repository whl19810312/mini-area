import "./chunk-5WWUZCGV.js";

// node_modules/@portone/browser-sdk/dist/v2.js
var _a;
var promise = null;
var portone = {
  jsSdkUrl: (_a = void 0) !== null && _a !== void 0 ? _a : "https://cdn.portone.io/v2/browser-sdk.js"
};
function findScript() {
  return document.querySelector(`script[src="${portone.jsSdkUrl}"]`);
}
function injectScript() {
  const script = document.createElement("script");
  script.src = portone.jsSdkUrl;
  const headOrBody = document.head || document.body;
  if (!headOrBody)
    throw new Error("[PortOne] Expected document.body not to be null");
  return headOrBody.appendChild(script);
}
function loadScript() {
  if (promise != null) {
    return promise;
  }
  return promise = new Promise((resolve, reject) => {
    if (window.PortOne) {
      return resolve(window.PortOne);
    }
    try {
      const script = findScript() || injectScript();
      script.addEventListener("load", () => {
        if (window.PortOne) {
          return resolve(window.PortOne);
        }
        reject(new Error("[PortOne] Failed to load window.PortOne"));
      });
      script.addEventListener("error", () => {
        reject(new Error("[PortOne] Failed to load window.PortOne"));
      });
    } catch (error) {
      return reject(error);
    }
  });
}
function setPortOneJsSdkUrl(url) {
  return portone.jsSdkUrl = url;
}
function requestPayment(request) {
  return loadScript().then((sdk) => sdk.requestPayment(request));
}
function requestIdentityVerification(request) {
  return loadScript().then((sdk) => sdk.requestIdentityVerification(request));
}
function requestIssueBillingKeyAndPay(request) {
  return loadScript().then((sdk) => sdk.requestIssueBillingKeyAndPay(request));
}
function requestIssueBillingKey(request) {
  return loadScript().then((sdk) => sdk.requestIssueBillingKey(request));
}
function loadPaymentUI(request, callbacks) {
  return loadScript().then((sdk) => sdk.loadPaymentUI(request, callbacks));
}
function loadIssueBillingKeyUI(request, callbacks) {
  return loadScript().then((sdk) => sdk.loadIssueBillingKeyUI(request, callbacks));
}
function updateLoadPaymentUIRequest(request) {
  return loadScript().then((sdk) => sdk.updateLoadPaymentUIRequest(request));
}
function updateLoadIssueBillingKeyUIRequest(request) {
  return loadScript().then((sdk) => sdk.updateLoadIssueBillingKeyUIRequest(request));
}
var Bank = {
  /**
   * 한국은행
   */
  BANK_OF_KOREA: "BANK_OF_KOREA",
  /**
   * 산업은행
   */
  KOREA_DEVELOPMENT_BANK: "KOREA_DEVELOPMENT_BANK",
  /**
   * 기업은행
   *
   * - KCP
   * - 스마트로
   */
  INDUSTRIAL_BANK_OF_KOREA: "INDUSTRIAL_BANK_OF_KOREA",
  /**
   * 국민은행
   *
   * - KCP
   * - 스마트로
   */
  KOOKMIN_BANK: "KOOKMIN_BANK",
  /**
   * 수협은행
   *
   * - KCP
   * - 스마트로
   */
  SUHYUP_BANK: "SUHYUP_BANK",
  /**
   * 수출입은행
   */
  EXPORT_IMPORT_BANK_OF_KOREA: "EXPORT_IMPORT_BANK_OF_KOREA",
  /**
   * NH농협은행
   *
   * - KCP
   * - 스마트로
   */
  NH_NONGHYUP_BANK: "NH_NONGHYUP_BANK",
  /**
   * 지역농․축협
   */
  LOCAL_NONGHYUP: "LOCAL_NONGHYUP",
  /**
   * 우리은행
   *
   * - KCP
   * - 스마트로
   */
  WOORI_BANK: "WOORI_BANK",
  /**
   * SC제일은행
   *
   * - KCP
   * - 스마트로
   */
  SC_BANK_KOREA: "SC_BANK_KOREA",
  /**
   * 한국씨티은행
   */
  CITI_BANK_KOREA: "CITI_BANK_KOREA",
  /**
   * 대구은행
   *
   * - KCP
   * - 스마트로
   */
  DAEGU_BANK: "DAEGU_BANK",
  /**
   * 부산은행
   *
   * - KCP
   * - 스마트로
   */
  BUSAN_BANK: "BUSAN_BANK",
  /**
   * 광주은행
   *
   * - KCP
   * - 스마트로
   */
  GWANGJU_BANK: "GWANGJU_BANK",
  /**
   * 제주은행
   */
  JEJU_BANK: "JEJU_BANK",
  /**
   * 전북은행
   *
   * - 스마트로
   */
  JEONBUK_BANK: "JEONBUK_BANK",
  /**
   * 경남은행
   *
   * - KCP
   * - 스마트로
   */
  KYONGNAM_BANK: "KYONGNAM_BANK",
  /**
   * 새마을금고
   */
  KFCC: "KFCC",
  /**
   * 신협
   */
  SHINHYUP: "SHINHYUP",
  /**
   * 저축은행
   */
  SAVINGS_BANK_KOREA: "SAVINGS_BANK_KOREA",
  /**
   * 모건스탠리은행
   */
  MORGAN_STANLEY_BANK: "MORGAN_STANLEY_BANK",
  /**
   * HSBC은행
   */
  HSBC_BANK: "HSBC_BANK",
  /**
   * 도이치은행
   */
  DEUTSCHE_BANK: "DEUTSCHE_BANK",
  /**
   * 제이피모간체이스은행
   */
  JP_MORGAN_CHASE_BANK: "JP_MORGAN_CHASE_BANK",
  /**
   * 미즈호은행
   */
  MIZUHO_BANK: "MIZUHO_BANK",
  /**
   * 엠유에프지은행
   */
  MUFG_BANK: "MUFG_BANK",
  /**
   * BOA은행
   */
  BANK_OF_AMERICA_BANK: "BANK_OF_AMERICA_BANK",
  /**
   * 비엔피파리바은행
   */
  BNP_PARIBAS_BANK: "BNP_PARIBAS_BANK",
  /**
   * 중국공상은행
   */
  ICBC: "ICBC",
  /**
   * 중국은행
   */
  BANK_OF_CHINA: "BANK_OF_CHINA",
  /**
   * 산림조합중앙회
   */
  NATIONAL_FORESTRY_COOPERATIVE_FEDERATION: "NATIONAL_FORESTRY_COOPERATIVE_FEDERATION",
  /**
   * 대화은행
   */
  UNITED_OVERSEAS_BANK: "UNITED_OVERSEAS_BANK",
  /**
   * 교통은행
   */
  BANK_OF_COMMUNICATIONS: "BANK_OF_COMMUNICATIONS",
  /**
   * 중국건설은행
   */
  CHINA_CONSTRUCTION_BANK: "CHINA_CONSTRUCTION_BANK",
  /**
   * 우체국
   *
   * - KCP
   * - 스마트로
   */
  EPOST: "EPOST",
  /**
   * 신용보증기금
   */
  KODIT: "KODIT",
  /**
   * 기술보증기금
   */
  KIBO: "KIBO",
  /**
   * 하나은행
   *
   * - KCP
   * - 스마트로
   */
  HANA_BANK: "HANA_BANK",
  /**
   * 신한은행
   *
   * - KCP
   * - 스마트로
   */
  SHINHAN_BANK: "SHINHAN_BANK",
  /**
   * 케이뱅크
   *
   * - 스마트로
   */
  K_BANK: "K_BANK",
  /**
   * 카카오뱅크
   */
  KAKAO_BANK: "KAKAO_BANK",
  /**
   * 토스뱅크
   */
  TOSS_BANK: "TOSS_BANK",
  /**
   * 한국신용정보원
   */
  KCIS: "KCIS",
  /**
   * 대신저축은행
   */
  DAISHIN_SAVINGS_BANK: "DAISHIN_SAVINGS_BANK",
  /**
   * 에스비아이저축은행
   */
  SBI_SAVINGS_BANK: "SBI_SAVINGS_BANK",
  /**
   * 에이치케이저축은행
   */
  HK_SAVINGS_BANK: "HK_SAVINGS_BANK",
  /**
   * 웰컴저축은행
   */
  WELCOME_SAVINGS_BANK: "WELCOME_SAVINGS_BANK",
  /**
   * 신한저축은행
   */
  SHINHAN_SAVINGS_BANK: "SHINHAN_SAVINGS_BANK",
  /**
   * 교보증권
   */
  KYOBO_SECURITIES: "KYOBO_SECURITIES",
  /**
   * 대신증권
   */
  DAISHIN_SECURITIES: "DAISHIN_SECURITIES",
  /**
   * 메리츠증권
   */
  MERITZ_SECURITIES: "MERITZ_SECURITIES",
  /**
   * 미래에셋증권
   */
  MIRAE_ASSET_SECURITIES: "MIRAE_ASSET_SECURITIES",
  /**
   * 부국증권
   */
  BOOKOOK_SECURITIES: "BOOKOOK_SECURITIES",
  /**
   * 삼성증권
   */
  SAMSUNG_SECURITIES: "SAMSUNG_SECURITIES",
  /**
   * 신영증권
   */
  SHINYOUNG_SECURITIES: "SHINYOUNG_SECURITIES",
  /**
   * 신한금융투자
   */
  SHINHAN_FINANCIAL_INVESTMENT: "SHINHAN_FINANCIAL_INVESTMENT",
  /**
   * 유안타증권
   */
  YUANTA_SECURITIES: "YUANTA_SECURITIES",
  /**
   * 유진투자증권
   */
  EUGENE_INVESTMENT_SECURITIES: "EUGENE_INVESTMENT_SECURITIES",
  /**
   * 카카오페이증권
   */
  KAKAO_PAY_SECURITIES: "KAKAO_PAY_SECURITIES",
  /**
   * 토스증권
   */
  TOSS_SECURITIES: "TOSS_SECURITIES",
  /**
   * 한국포스증권
   */
  KOREA_FOSS_SECURITIES: "KOREA_FOSS_SECURITIES",
  /**
   * 하나금융투자
   */
  HANA_FINANCIAL_INVESTMENT: "HANA_FINANCIAL_INVESTMENT",
  /**
   * 하이투자증권
   */
  HI_INVESTMENT_SECURITIES: "HI_INVESTMENT_SECURITIES",
  /**
   * 한국투자증권
   */
  KOREA_INVESTMENT_SECURITIES: "KOREA_INVESTMENT_SECURITIES",
  /**
   * 한화투자증권
   */
  HANWHA_INVESTMENT_SECURITIES: "HANWHA_INVESTMENT_SECURITIES",
  /**
   * 현대차증권자
   */
  HYUNDAI_MOTOR_SECURITIES: "HYUNDAI_MOTOR_SECURITIES",
  /**
   * DB금융투자자
   */
  DB_FINANCIAL_INVESTMENT: "DB_FINANCIAL_INVESTMENT",
  /**
   * KB증권
   */
  KB_SECURITIES: "KB_SECURITIES",
  /**
   * KTB투자증권
   */
  KTB_INVESTMENT_SECURITIES: "KTB_INVESTMENT_SECURITIES",
  /**
   * NH투자증권
   */
  NH_INVESTMENT_SECURITIES: "NH_INVESTMENT_SECURITIES",
  /**
   * SK증권
   */
  SK_SECURITIES: "SK_SECURITIES",
  /**
   * 서울보증보험
   */
  SCI: "SCI",
  /**
   * 키움증권
   */
  KIWOOM_SECURITIES: "KIWOOM_SECURITIES",
  /**
   * 이베스트증권
   */
  EBEST_INVESTMENT_SECURITIES: "EBEST_INVESTMENT_SECURITIES",
  /**
   * 케이프투자증권
   */
  CAPE_INVESTMENT_CERTIFICATE: "CAPE_INVESTMENT_CERTIFICATE"
};
var BillingKeyAndPayMethod = {
  /**
   * 휴대전화
   */
  MOBILE: "MOBILE"
};
var BillingKeyMethod = {
  /**
   * 카드
   */
  CARD: "CARD",
  /**
   * 휴대전화
   */
  MOBILE: "MOBILE",
  /**
   * 간편결제
   */
  EASY_PAY: "EASY_PAY",
  /**
   * 페이팔(RT)
   */
  PAYPAL: "PAYPAL"
};
var CardCompany = {
  /**
   * KDB산업은행 카드
   */
  KOREA_DEVELOPMENT_BANK: "KOREA_DEVELOPMENT_BANK",
  /**
   * 새마을금고 카드
   */
  KFCC: "KFCC",
  /**
   * 신협 카드
   */
  SHINHYUP: "SHINHYUP",
  /**
   * 우체국 카드
   */
  EPOST: "EPOST",
  /**
   * 저축은행 카드
   */
  SAVINGS_BANK_KOREA: "SAVINGS_BANK_KOREA",
  /**
   * 카카오뱅크 카드
   */
  KAKAO_BANK: "KAKAO_BANK",
  /**
   * 우리카드
   */
  WOORI_CARD: "WOORI_CARD",
  /**
   * BC카드
   */
  BC_CARD: "BC_CARD",
  /**
   * 광주카드
   */
  GWANGJU_CARD: "GWANGJU_CARD",
  /**
   * 삼성카드
   */
  SAMSUNG_CARD: "SAMSUNG_CARD",
  /**
   * 신한카드
   */
  SHINHAN_CARD: "SHINHAN_CARD",
  /**
   * 현대카드
   */
  HYUNDAI_CARD: "HYUNDAI_CARD",
  /**
   * 롯데카드
   */
  LOTTE_CARD: "LOTTE_CARD",
  /**
   * 수협카드
   */
  SUHYUP_CARD: "SUHYUP_CARD",
  /**
   * 씨티카드
   */
  CITI_CARD: "CITI_CARD",
  /**
   * NH 농협카드
   */
  NH_CARD: "NH_CARD",
  /**
   * 전북카드
   */
  JEONBUK_CARD: "JEONBUK_CARD",
  /**
   * 제주카드
   */
  JEJU_CARD: "JEJU_CARD",
  /**
   * 하나카드
   */
  HANA_CARD: "HANA_CARD",
  /**
   * 국민카드
   */
  KOOKMIN_CARD: "KOOKMIN_CARD",
  /**
   * K뱅크 카드
   */
  K_BANK: "K_BANK",
  /**
   * 토스뱅크 카드
   */
  TOSS_BANK: "TOSS_BANK",
  /**
   * 미래에셋증권 카드
   */
  MIRAE_ASSET_SECURITIES: "MIRAE_ASSET_SECURITIES"
};
var Carrier = {
  /**
   * SK텔레콤
   */
  SKT: "SKT",
  /**
   * KT
   */
  KT: "KT",
  /**
   * LG U+
   */
  LGU: "LGU",
  /**
   * 헬로모바일
   */
  HELLO: "HELLO",
  /**
   * 티플러스
   */
  KCT: "KCT",
  /**
   * SK 7mobile
   */
  SK7: "SK7"
};
var CashReceiptType = {
  /**
   * 소득공제(개인)
   */
  PERSONAL: "PERSONAL",
  /**
   * 지출증빙(사업자)
   */
  CORPORATE: "CORPORATE",
  /**
   * 미발행(PG 설정에 따라 무기명으로 자진 발급될 수 있음)
   */
  ANONYMOUS: "ANONYMOUS"
};
var Country = {
  /**
   * Afghanistan
   */
  AF: "AF",
  /**
   * Åland Islands
   */
  AX: "AX",
  /**
   * Albania
   */
  AL: "AL",
  /**
   * Algeria
   */
  DZ: "DZ",
  /**
   * American Samoa
   */
  AS: "AS",
  /**
   * Andorra
   */
  AD: "AD",
  /**
   * Angola
   */
  AO: "AO",
  /**
   * Anguilla
   */
  AI: "AI",
  /**
   * Antarctica
   */
  AQ: "AQ",
  /**
   * Antigua and Barbuda
   */
  AG: "AG",
  /**
   * Argentina
   */
  AR: "AR",
  /**
   * Armenia
   */
  AM: "AM",
  /**
   * Aruba
   */
  AW: "AW",
  /**
   * Australia
   */
  AU: "AU",
  /**
   * Austria
   */
  AT: "AT",
  /**
   * Azerbaijan
   */
  AZ: "AZ",
  /**
   * Bahrain
   */
  BH: "BH",
  /**
   * Bahamas
   */
  BS: "BS",
  /**
   * Bangladesh
   */
  BD: "BD",
  /**
   * Barbados
   */
  BB: "BB",
  /**
   * Belarus
   */
  BY: "BY",
  /**
   * Belgium
   */
  BE: "BE",
  /**
   * Belize
   */
  BZ: "BZ",
  /**
   * Benin
   */
  BJ: "BJ",
  /**
   * Bermuda
   */
  BM: "BM",
  /**
   * Bhutan
   */
  BT: "BT",
  /**
   * Bolivia, Plurinational State of
   */
  BO: "BO",
  /**
   * Bonaire, Sint Eustatius and Saba
   */
  BQ: "BQ",
  /**
   * Bosnia and Herzegovina
   */
  BA: "BA",
  /**
   * Botswana
   */
  BW: "BW",
  /**
   * Bouvet Island
   */
  BV: "BV",
  /**
   * Brazil
   */
  BR: "BR",
  /**
   * British Indian Ocean Territory
   */
  IO: "IO",
  /**
   * Brunei Darussalam
   */
  BN: "BN",
  /**
   * Bulgaria
   */
  BG: "BG",
  /**
   * Burkina Faso
   */
  BF: "BF",
  /**
   * Burundi
   */
  BI: "BI",
  /**
   * Cambodia
   */
  KH: "KH",
  /**
   * Cameroon
   */
  CM: "CM",
  /**
   * Canada
   */
  CA: "CA",
  /**
   * Cape Verde
   */
  CV: "CV",
  /**
   * Cayman Islands
   */
  KY: "KY",
  /**
   * Central African Republic
   */
  CF: "CF",
  /**
   * Chad
   */
  TD: "TD",
  /**
   * Chile
   */
  CL: "CL",
  /**
   * China
   */
  CN: "CN",
  /**
   * Christmas Island
   */
  CX: "CX",
  /**
   * Cocos (Keeling) Islands
   */
  CC: "CC",
  /**
   * Colombia
   */
  CO: "CO",
  /**
   * Comoros
   */
  KM: "KM",
  /**
   * Congo
   */
  CG: "CG",
  /**
   * Congo, the Democratic Republic of the
   */
  CD: "CD",
  /**
   * Cook Islands
   */
  CK: "CK",
  /**
   * Costa Rica
   */
  CR: "CR",
  /**
   * Côte d'Ivoire
   */
  CI: "CI",
  /**
   * Croatia
   */
  HR: "HR",
  /**
   * Cuba
   */
  CU: "CU",
  /**
   * Curaçao
   */
  CW: "CW",
  /**
   * Cyprus
   */
  CY: "CY",
  /**
   * Czech Republic
   */
  CZ: "CZ",
  /**
   * Denmark
   */
  DK: "DK",
  /**
   * Djibouti
   */
  DJ: "DJ",
  /**
   * Dominica
   */
  DM: "DM",
  /**
   * Dominican Republic
   */
  DO: "DO",
  /**
   * Ecuador
   */
  EC: "EC",
  /**
   * Egypt
   */
  EG: "EG",
  /**
   * El Salvador
   */
  SV: "SV",
  /**
   * Equatorial Guinea
   */
  GQ: "GQ",
  /**
   * Eritrea
   */
  ER: "ER",
  /**
   * Estonia
   */
  EE: "EE",
  /**
   * Ethiopia
   */
  ET: "ET",
  /**
   * Falkland Islands (Malvinas)
   */
  FK: "FK",
  /**
   * Faroe Islands
   */
  FO: "FO",
  /**
   * Fiji
   */
  FJ: "FJ",
  /**
   * Finland
   */
  FI: "FI",
  /**
   * France
   */
  FR: "FR",
  /**
   * French Guiana
   */
  GF: "GF",
  /**
   * French Polynesia
   */
  PF: "PF",
  /**
   * French Southern Territories
   */
  TF: "TF",
  /**
   * Gabon
   */
  GA: "GA",
  /**
   * Gambia
   */
  GM: "GM",
  /**
   * Georgia
   */
  GE: "GE",
  /**
   * Germany
   */
  DE: "DE",
  /**
   * Ghana
   */
  GH: "GH",
  /**
   * Gibraltar
   */
  GI: "GI",
  /**
   * Greece
   */
  GR: "GR",
  /**
   * Greenland
   */
  GL: "GL",
  /**
   * Grenada
   */
  GD: "GD",
  /**
   * Guadeloupe
   */
  GP: "GP",
  /**
   * Guam
   */
  GU: "GU",
  /**
   * Guatemala
   */
  GT: "GT",
  /**
   * Guernsey
   */
  GG: "GG",
  /**
   * Guinea
   */
  GN: "GN",
  /**
   * Guinea-Bissau
   */
  GW: "GW",
  /**
   * Guyana
   */
  GY: "GY",
  /**
   * Haiti
   */
  HT: "HT",
  /**
   * Heard Island and McDonald Islands
   */
  HM: "HM",
  /**
   * Holy See (Vatican City State)
   */
  VA: "VA",
  /**
   * Honduras
   */
  HN: "HN",
  /**
   * Hong Kong
   */
  HK: "HK",
  /**
   * Hungary
   */
  HU: "HU",
  /**
   * Iceland
   */
  IS: "IS",
  /**
   * India
   */
  IN: "IN",
  /**
   * Indonesia
   */
  ID: "ID",
  /**
   * Iran, Islamic Republic of
   */
  IR: "IR",
  /**
   * Iraq
   */
  IQ: "IQ",
  /**
   * Ireland
   */
  IE: "IE",
  /**
   * Isle of Man
   */
  IM: "IM",
  /**
   * Israel
   */
  IL: "IL",
  /**
   * Italy
   */
  IT: "IT",
  /**
   * Jamaica
   */
  JM: "JM",
  /**
   * Japan
   */
  JP: "JP",
  /**
   * Jersey
   */
  JE: "JE",
  /**
   * Jordan
   */
  JO: "JO",
  /**
   * Kazakhstan
   */
  KZ: "KZ",
  /**
   * Kenya
   */
  KE: "KE",
  /**
   * Kiribati
   */
  KI: "KI",
  /**
   * Korea, Democratic People's Republic of
   */
  KP: "KP",
  /**
   * Korea, Republic of
   */
  KR: "KR",
  /**
   * Kuwait
   */
  KW: "KW",
  /**
   * Kyrgyzstan
   */
  KG: "KG",
  /**
   * Lao People's Democratic Republic
   */
  LA: "LA",
  /**
   * Latvia
   */
  LV: "LV",
  /**
   * Lebanon
   */
  LB: "LB",
  /**
   * Lesotho
   */
  LS: "LS",
  /**
   * Liberia
   */
  LR: "LR",
  /**
   * Libya
   */
  LY: "LY",
  /**
   * Liechtenstein
   */
  LI: "LI",
  /**
   * Lithuania
   */
  LT: "LT",
  /**
   * Luxembourg
   */
  LU: "LU",
  /**
   * Macao
   */
  MO: "MO",
  /**
   * Macedonia, the Former Yugoslav Republic of
   */
  MK: "MK",
  /**
   * Madagascar
   */
  MG: "MG",
  /**
   * Malawi
   */
  MW: "MW",
  /**
   * Malaysia
   */
  MY: "MY",
  /**
   * Maldives
   */
  MV: "MV",
  /**
   * Mali
   */
  ML: "ML",
  /**
   * Malta
   */
  MT: "MT",
  /**
   * Marshall Islands
   */
  MH: "MH",
  /**
   * Martinique
   */
  MQ: "MQ",
  /**
   * Mauritania
   */
  MR: "MR",
  /**
   * Mauritius
   */
  MU: "MU",
  /**
   * Mayotte
   */
  YT: "YT",
  /**
   * Mexico
   */
  MX: "MX",
  /**
   * Micronesia, Federated States of
   */
  FM: "FM",
  /**
   * Moldova, Republic of
   */
  MD: "MD",
  /**
   * Monaco
   */
  MC: "MC",
  /**
   * Mongolia
   */
  MN: "MN",
  /**
   * Montenegro
   */
  ME: "ME",
  /**
   * Montserrat
   */
  MS: "MS",
  /**
   * Morocco
   */
  MA: "MA",
  /**
   * Mozambique
   */
  MZ: "MZ",
  /**
   * Myanmar
   */
  MM: "MM",
  /**
   * Namibia
   */
  NA: "NA",
  /**
   * Nauru
   */
  NR: "NR",
  /**
   * Nepal
   */
  NP: "NP",
  /**
   * Netherlands
   */
  NL: "NL",
  /**
   * New Caledonia
   */
  NC: "NC",
  /**
   * New Zealand
   */
  NZ: "NZ",
  /**
   * Nicaragua
   */
  NI: "NI",
  /**
   * Niger
   */
  NE: "NE",
  /**
   * Nigeria
   */
  NG: "NG",
  /**
   * Niue
   */
  NU: "NU",
  /**
   * Norfolk Island
   */
  NF: "NF",
  /**
   * Northern Mariana Islands
   */
  MP: "MP",
  /**
   * Norway
   */
  NO: "NO",
  /**
   * Oman
   */
  OM: "OM",
  /**
   * Pakistan
   */
  PK: "PK",
  /**
   * Palau
   */
  PW: "PW",
  /**
   * Palestine, State of
   */
  PS: "PS",
  /**
   * Panama
   */
  PA: "PA",
  /**
   * Papua New Guinea
   */
  PG: "PG",
  /**
   * Paraguay
   */
  PY: "PY",
  /**
   * Peru
   */
  PE: "PE",
  /**
   * Philippines
   */
  PH: "PH",
  /**
   * Pitcairn
   */
  PN: "PN",
  /**
   * Poland
   */
  PL: "PL",
  /**
   * Portugal
   */
  PT: "PT",
  /**
   * Puerto Rico
   */
  PR: "PR",
  /**
   * Qatar
   */
  QA: "QA",
  /**
   * Réunion
   */
  RE: "RE",
  /**
   * Romania
   */
  RO: "RO",
  /**
   * Russian Federation
   */
  RU: "RU",
  /**
   * Rwanda
   */
  RW: "RW",
  /**
   * Saint Barthélemy
   */
  BL: "BL",
  /**
   * Saint Helena, Ascension and Tristan da Cunha
   */
  SH: "SH",
  /**
   * Saint Kitts and Nevis
   */
  KN: "KN",
  /**
   * Saint Lucia
   */
  LC: "LC",
  /**
   * Saint Martin (French part)
   */
  MF: "MF",
  /**
   * Saint Pierre and Miquelon
   */
  PM: "PM",
  /**
   * Saint Vincent and the Grenadines
   */
  VC: "VC",
  /**
   * Samoa
   */
  WS: "WS",
  /**
   * San Marino
   */
  SM: "SM",
  /**
   * Sao Tome and Principe
   */
  ST: "ST",
  /**
   * Saudi Arabia
   */
  SA: "SA",
  /**
   * Senegal
   */
  SN: "SN",
  /**
   * Serbia
   */
  RS: "RS",
  /**
   * Seychelles
   */
  SC: "SC",
  /**
   * Sierra Leone
   */
  SL: "SL",
  /**
   * Singapore
   */
  SG: "SG",
  /**
   * Sint Maarten (Dutch part)
   */
  SX: "SX",
  /**
   * Slovakia
   */
  SK: "SK",
  /**
   * Slovenia
   */
  SI: "SI",
  /**
   * Solomon Islands
   */
  SB: "SB",
  /**
   * Somalia
   */
  SO: "SO",
  /**
   * South Africa
   */
  ZA: "ZA",
  /**
   * South Georgia and the South Sandwich Islands
   */
  GS: "GS",
  /**
   * South Sudan
   */
  SS: "SS",
  /**
   * Spain
   */
  ES: "ES",
  /**
   * Sri Lanka
   */
  LK: "LK",
  /**
   * Sudan
   */
  SD: "SD",
  /**
   * Suriname
   */
  SR: "SR",
  /**
   * Svalbard and Jan Mayen
   */
  SJ: "SJ",
  /**
   * Swaziland
   */
  SZ: "SZ",
  /**
   * Sweden
   */
  SE: "SE",
  /**
   * Switzerland
   */
  CH: "CH",
  /**
   * Syrian Arab Republic
   */
  SY: "SY",
  /**
   * Taiwan, Province of China
   */
  TW: "TW",
  /**
   * Tajikistan
   */
  TJ: "TJ",
  /**
   * Tanzania, United Republic of
   */
  TZ: "TZ",
  /**
   * Thailand
   */
  TH: "TH",
  /**
   * Timor-Leste
   */
  TL: "TL",
  /**
   * Togo
   */
  TG: "TG",
  /**
   * Tokelau
   */
  TK: "TK",
  /**
   * Tonga
   */
  TO: "TO",
  /**
   * Trinidad and Tobago
   */
  TT: "TT",
  /**
   * Tunisia
   */
  TN: "TN",
  /**
   * Turkey
   */
  TR: "TR",
  /**
   * Turkmenistan
   */
  TM: "TM",
  /**
   * Turks and Caicos Islands
   */
  TC: "TC",
  /**
   * Tuvalu
   */
  TV: "TV",
  /**
   * Uganda
   */
  UG: "UG",
  /**
   * Ukraine
   */
  UA: "UA",
  /**
   * United Arab Emirates
   */
  AE: "AE",
  /**
   * United Kingdom
   */
  GB: "GB",
  /**
   * United States
   */
  US: "US",
  /**
   * United States Minor Outlying Islands
   */
  UM: "UM",
  /**
   * Uruguay
   */
  UY: "UY",
  /**
   * Uzbekistan
   */
  UZ: "UZ",
  /**
   * Vanuatu
   */
  VU: "VU",
  /**
   * Venezuela, Bolivarian Republic of
   */
  VE: "VE",
  /**
   * Viet Nam
   */
  VN: "VN",
  /**
   * Virgin Islands, British
   */
  VG: "VG",
  /**
   * Virgin Islands, U.S.
   */
  VI: "VI",
  /**
   * Wallis and Futuna
   */
  WF: "WF",
  /**
   * Western Sahara
   */
  EH: "EH",
  /**
   * Yemen
   */
  YE: "YE",
  /**
   * Zambia
   */
  ZM: "ZM",
  /**
   * Zimbabwe
   */
  ZW: "ZW"
};
var Currency = {
  /**
   * South Korean won
   */
  KRW: "KRW",
  /**
   * United States dollar
   */
  USD: "USD",
  /**
   * Euro
   */
  EUR: "EUR",
  /**
   * Japanese yen
   */
  JPY: "JPY",
  /**
   * Chinese yuan
   */
  CNY: "CNY",
  /**
   * Vietnamese dong
   */
  VND: "VND",
  /**
   * Thai baht
   */
  THB: "THB",
  /**
   * Singapore dollar
   */
  SGD: "SGD",
  /**
   * Australian dollar
   */
  AUD: "AUD",
  /**
   * Hong Kong dollar
   */
  HKD: "HKD",
  /**
   * United Arab Emirates dirham
   */
  AED: "AED",
  /**
   * Afghan afghani
   */
  AFN: "AFN",
  /**
   * Albanian lek
   */
  ALL: "ALL",
  /**
   * Armenian dram
   */
  AMD: "AMD",
  /**
   * Netherlands Antillean guilder
   */
  ANG: "ANG",
  /**
   * Angolan kwanza
   */
  AOA: "AOA",
  /**
   * Argentine peso
   */
  ARS: "ARS",
  /**
   * Aruban florin
   */
  AWG: "AWG",
  /**
   * Azerbaijani manat
   */
  AZN: "AZN",
  /**
   * Bosnia and Herzegovina convertible mark
   */
  BAM: "BAM",
  /**
   * Barbadian dollar
   */
  BBD: "BBD",
  /**
   * Bangladeshi taka
   */
  BDT: "BDT",
  /**
   * Bulgarian lev
   */
  BGN: "BGN",
  /**
   * Bermudian dollar
   */
  BMD: "BMD",
  /**
   * Brunei dollar
   */
  BND: "BND",
  /**
   * Boliviano
   */
  BOB: "BOB",
  /**
   * Bolivian Mvdol
   */
  BOV: "BOV",
  /**
   * Brazilian real
   */
  BRL: "BRL",
  /**
   * Bahamian dollar
   */
  BSD: "BSD",
  /**
   * Botswana pula
   */
  BWP: "BWP",
  /**
   * Belarusian ruble
   */
  BYN: "BYN",
  /**
   * Belize dollar
   */
  BZD: "BZD",
  /**
   * Canadian dollar
   */
  CAD: "CAD",
  /**
   * Congolese franc
   */
  CDF: "CDF",
  /**
   * WIR euro
   */
  CHE: "CHE",
  /**
   * Swiss franc
   */
  CHF: "CHF",
  /**
   * WIR franc
   */
  CHW: "CHW",
  /**
   * Chilean unit of account (UF)
   */
  CLF: "CLF",
  /**
   * Chilean peso
   */
  CLP: "CLP",
  /**
   * Colombian peso
   */
  COP: "COP",
  /**
   * Unidad de Valor Real
   */
  COU: "COU",
  /**
   * Costa Rican colon
   */
  CRC: "CRC",
  /**
   * Cuban convertible peso
   */
  CUC: "CUC",
  /**
   * Cuban peso
   */
  CUP: "CUP",
  /**
   * Cape Verdean escudo
   */
  CVE: "CVE",
  /**
   * Czech koruna
   */
  CZK: "CZK",
  /**
   * Djiboutian franc
   */
  DJF: "DJF",
  /**
   * Danish krone
   */
  DKK: "DKK",
  /**
   * Dominican peso
   */
  DOP: "DOP",
  /**
   * Algerian dinar
   */
  DZD: "DZD",
  /**
   * Egyptian pound
   */
  EGP: "EGP",
  /**
   * Eritrean nakfa
   */
  ERN: "ERN",
  /**
   * Ethiopian birr
   */
  ETB: "ETB",
  /**
   * Fiji dollar
   */
  FJD: "FJD",
  /**
   * Falkland Islands pound
   */
  FKP: "FKP",
  /**
   * Pound sterling
   */
  GBP: "GBP",
  /**
   * Georgian lari
   */
  GEL: "GEL",
  /**
   * Ghanaian cedi
   */
  GHS: "GHS",
  /**
   * Gibraltar pound
   */
  GIP: "GIP",
  /**
   * Gambian dalasi
   */
  GMD: "GMD",
  /**
   * Guinean franc
   */
  GNF: "GNF",
  /**
   * Guatemalan quetzal
   */
  GTQ: "GTQ",
  /**
   * Guyanese dollar
   */
  GYD: "GYD",
  /**
   * Honduran lempira
   */
  HNL: "HNL",
  /**
   * Croatian kuna
   */
  HRK: "HRK",
  /**
   * Haitian gourde
   */
  HTG: "HTG",
  /**
   * Hungarian forint
   */
  HUF: "HUF",
  /**
   * Indonesian rupiah
   */
  IDR: "IDR",
  /**
   * Israeli new shekel
   */
  ILS: "ILS",
  /**
   * Indian rupee
   */
  INR: "INR",
  /**
   * Iraqi dinar
   */
  IQD: "IQD",
  /**
   * Iranian rial
   */
  IRR: "IRR",
  /**
   * Icelandic króna
   */
  ISK: "ISK",
  /**
   * Jamaican dollar
   */
  JMD: "JMD",
  /**
   * Jordanian dinar
   */
  JOD: "JOD",
  /**
   * Kenyan shilling
   */
  KES: "KES",
  /**
   * Kyrgyzstani som
   */
  KGS: "KGS",
  /**
   * Cambodian riel
   */
  KHR: "KHR",
  /**
   * Comoro franc
   */
  KMF: "KMF",
  /**
   * North Korean won
   */
  KPW: "KPW",
  /**
   * Kuwaiti dinar
   */
  KWD: "KWD",
  /**
   * Cayman Islands dollar
   */
  KYD: "KYD",
  /**
   * Kazakhstani tenge
   */
  KZT: "KZT",
  /**
   * Lao kip
   */
  LAK: "LAK",
  /**
   * Lebanese pound
   */
  LBP: "LBP",
  /**
   * Sri Lankan rupee
   */
  LKR: "LKR",
  /**
   * Liberian dollar
   */
  LRD: "LRD",
  /**
   * Lesotho loti
   */
  LSL: "LSL",
  /**
   * Libyan dinar
   */
  LYD: "LYD",
  /**
   * Moroccan dirham
   */
  MAD: "MAD",
  /**
   * Moldovan leu
   */
  MDL: "MDL",
  /**
   * Malagasy ariary
   */
  MGA: "MGA",
  /**
   * Macedonian denar
   */
  MKD: "MKD",
  /**
   * Myanmar kyat
   */
  MMK: "MMK",
  /**
   * Mongolian tögrög
   */
  MNT: "MNT",
  /**
   * Macanese pataca
   */
  MOP: "MOP",
  /**
   * Mauritanian ouguiya
   */
  MRU: "MRU",
  /**
   * Mauritian rupee
   */
  MUR: "MUR",
  /**
   * Maldivian rufiyaa
   */
  MVR: "MVR",
  /**
   * Malawian kwacha
   */
  MWK: "MWK",
  /**
   * Mexican peso
   */
  MXN: "MXN",
  /**
   * Mexican Unidad de Inversion
   */
  MXV: "MXV",
  /**
   * Mozambican metical
   */
  MZN: "MZN",
  /**
   * Namibian dollar
   */
  NAD: "NAD",
  /**
   * Nigerian naira
   */
  NGN: "NGN",
  /**
   * Nicaraguan córdoba
   */
  NIO: "NIO",
  /**
   * Norwegian krone
   */
  NOK: "NOK",
  /**
   * Nepalese rupee
   */
  NPR: "NPR",
  /**
   * New Zealand dollar
   */
  NZD: "NZD",
  /**
   * Omani rial
   */
  OMR: "OMR",
  /**
   * Panamanian balboa
   */
  PAB: "PAB",
  /**
   * Peruvian sol
   */
  PEN: "PEN",
  /**
   * Papua New Guinean kina
   */
  PGK: "PGK",
  /**
   * Philippine peso
   */
  PHP: "PHP",
  /**
   * Pakistani rupee
   */
  PKR: "PKR",
  /**
   * Polish złoty
   */
  PLN: "PLN",
  /**
   * Paraguayan guaraní
   */
  PYG: "PYG",
  /**
   * Qatari riyal
   */
  QAR: "QAR",
  /**
   * Romanian leu
   */
  RON: "RON",
  /**
   * Serbian dinar
   */
  RSD: "RSD",
  /**
   * Russian ruble
   */
  RUB: "RUB",
  /**
   * Rwandan franc
   */
  RWF: "RWF",
  /**
   * Saudi riyal
   */
  SAR: "SAR",
  /**
   * Solomon Islands dollar
   */
  SBD: "SBD",
  /**
   * Seychelles rupee
   */
  SCR: "SCR",
  /**
   * Sudanese pound
   */
  SDG: "SDG",
  /**
   * Swedish krona
   */
  SEK: "SEK",
  /**
   * Saint Helena pound
   */
  SHP: "SHP",
  /**
   * Sierra Leonean leone (new leone)
   */
  SLE: "SLE",
  /**
   * Sierra Leonean leone (old leone)
   */
  SLL: "SLL",
  /**
   * Somali shilling
   */
  SOS: "SOS",
  /**
   * Surinamese dollar
   */
  SRD: "SRD",
  /**
   * South Sudanese pound
   */
  SSP: "SSP",
  /**
   * São Tomé and Príncipe dobra
   */
  STN: "STN",
  /**
   * Salvadoran colón
   */
  SVC: "SVC",
  /**
   * Syrian pound
   */
  SYP: "SYP",
  /**
   * Swazi lilangeni
   */
  SZL: "SZL",
  /**
   * Tajikistani somoni
   */
  TJS: "TJS",
  /**
   * Turkmenistan manat
   */
  TMT: "TMT",
  /**
   * Tunisian dinar
   */
  TND: "TND",
  /**
   * Tongan paʻanga
   */
  TOP: "TOP",
  /**
   * Turkish lira
   */
  TRY: "TRY",
  /**
   * Trinidad and Tobago dollar
   */
  TTD: "TTD",
  /**
   * New Taiwan dollar
   */
  TWD: "TWD",
  /**
   * Tanzanian shilling
   */
  TZS: "TZS",
  /**
   * Ukrainian hryvnia
   */
  UAH: "UAH",
  /**
   * Ugandan shilling
   */
  UGX: "UGX",
  /**
   * United States dollar (next day)
   */
  USN: "USN",
  /**
   * Uruguay Peso en Unidades Indexadas
   */
  UYI: "UYI",
  /**
   * Uruguayan peso
   */
  UYU: "UYU",
  /**
   * Unidad previsional
   */
  UYW: "UYW",
  /**
   * Uzbekistan som
   */
  UZS: "UZS",
  /**
   * Venezuelan bolívar digital
   */
  VED: "VED",
  /**
   * Venezuelan bolívar soberano
   */
  VES: "VES",
  /**
   * Vanuatu vatu
   */
  VUV: "VUV",
  /**
   * Samoan tala
   */
  WST: "WST",
  /**
   * CFA franc BEAC
   */
  XAF: "XAF",
  /**
   * Silver (one troy ounce)
   */
  XAG: "XAG",
  /**
   * Gold (one troy ounce)
   */
  XAU: "XAU",
  /**
   * European Composite Unit
   */
  XBA: "XBA",
  /**
   * European Monetary Unit
   */
  XBB: "XBB",
  /**
   * European Unit of Account 9
   */
  XBC: "XBC",
  /**
   * European Unit of Account 17
   */
  XBD: "XBD",
  /**
   * East Caribbean dollar
   */
  XCD: "XCD",
  /**
   * Special drawing rights
   */
  XDR: "XDR",
  /**
   * CFA franc BCEAO
   */
  XOF: "XOF",
  /**
   * Palladium (one troy ounce)
   */
  XPD: "XPD",
  /**
   * CFP franc
   */
  XPF: "XPF",
  /**
   * Platinum (one troy ounce)
   */
  XPT: "XPT",
  /**
   * SUCRE
   */
  XSU: "XSU",
  /**
   * Code reserved for testing
   */
  XTS: "XTS",
  /**
   * ADB Unit of Account
   */
  XUA: "XUA",
  /**
   * No currency
   */
  XXX: "XXX",
  /**
   * Yemeni rial
   */
  YER: "YER",
  /**
   * South African rand
   */
  ZAR: "ZAR",
  /**
   * Zambian kwacha
   */
  ZMW: "ZMW",
  /**
   * Zimbabwean dollar
   */
  ZWL: "ZWL"
};
var EasyPayPaymentMethod = {
  /**
   * 카드
   */
  CARD: "CARD",
  /**
   * 포인트(충전, 적립) 결제
   */
  CHARGE: "CHARGE",
  /**
   * 계좌결제
   */
  TRANSFER: "TRANSFER",
  /**
   * 포인트 및 계좌결제가 모두 가능한 경우
   */
  MONEY: "MONEY"
};
var EasyPayProvider = {
  /**
   * 페이코
   *
   * - 토스페이먼츠
   * - 나이스페이먼츠
   * - KG이니시스
   * - 스마트로
   * - KSNET
   * - 한국결제네트웍스
   * - 웰컴페이먼츠
   */
  PAYCO: "PAYCO",
  /**
   * 삼성페이
   *
   * - 토스페이먼츠
   * - 나이스페이먼츠
   * - KG이니시스
   * - NHN KCP
   * - 스마트로
   * - 한국결제네트웍스
   */
  SAMSUNGPAY: "SAMSUNGPAY",
  /**
   * SSG페이
   *
   * - 토스페이먼츠
   * - 나이스페이먼츠
   * - KG이니시스
   * - NHN KCP
   * - KSNET
   */
  SSGPAY: "SSGPAY",
  /**
   * 카카오페이
   *
   * - 토스페이먼츠
   * - 나이스페이먼츠
   * - KG이니시스
   * - 스마트로
   * - NHN KCP
   * - KSNET
   * - 한국결제네트웍스
   * - 웰컴페이먼츠
   */
  KAKAOPAY: "KAKAOPAY",
  /**
   * 네이버페이
   *
   * - 토스페이먼츠
   * - 나이스페이먼츠
   * - KG이니시스
   * - 스마트로
   * - NHN KCP
   * - KSNET
   * - 한국결제네트웍스
   */
  NAVERPAY: "NAVERPAY",
  /**
   * 차이페이
   */
  CHAI: "CHAI",
  /**
   * L페이
   *
   * - 토스페이먼츠
   * - 나이스페이먼츠
   * - KG이니시스
   * - 스마트로
   * - KSNET
   * - 웰컴페이먼츠
   */
  LPAY: "LPAY",
  /**
   * K페이
   */
  KPAY: "KPAY",
  /**
   * 토스페이
   *
   * - 토스페이먼츠
   * - KG이니시스
   * - NHN KCP
   * - 스마트로
   * - 한국결제네트웍스
   * - 웰컴페이먼츠
   */
  TOSSPAY: "TOSSPAY",
  /**
   * LG페이
   *
   * - 토스페이먼츠
   */
  LGPAY: "LGPAY",
  /**
   * 애플페이
   *
   * - 토스페이먼츠
   * - 나이스페이먼츠
   * - KG이니시스
   * - NHN KCP
   */
  APPLEPAY: "APPLEPAY",
  /**
   * 핀페이
   *
   * - 스마트로
   */
  PINPAY: "PINPAY",
  /**
   * SK페이
   *
   * - 나이스페이먼츠
   */
  SKPAY: "SKPAY",
  /**
   * 토스 브랜드페이
   */
  TOSS_BRANDPAY: "TOSS_BRANDPAY",
  /**
   * 하이픈
   */
  HYPHEN: "HYPHEN",
  /**
   * 라인페이
   *
   * - 스마트로
   */
  LINEPAY: "LINEPAY",
  /**
   * 티머니
   *
   * - 스마트로
   */
  TMONEY: "TMONEY",
  /**
   * PayPay
   *
   * - KG이니시스 JPPG/SBPS 일본결제
   */
  PAYPAY: "PAYPAY",
  /**
   * 아마존페이
   *
   * - KG이니시스 JPPG 일본결제
   */
  AMAZONPAY: "AMAZONPAY",
  /**
   * 라쿠텐페이
   *
   * - KG이니시스 JPPG 일본결제
   */
  RAKUTENPAY: "RAKUTENPAY",
  /**
   * dBarai
   *
   * - KG이니시스 JPPG 일본결제
   */
  DBARAI: "DBARAI",
  /**
   * auPAY
   *
   * - KG이니시스 JPPG 일본결제
   */
  AUPAY: "AUPAY",
  /**
   * Merpay
   *
   * - KG이니시스 JPPG 일본결제
   */
  MERPAY: "MERPAY"
};
var Gender = {
  /**
   * 남성
   */
  MALE: "MALE",
  /**
   * 여성
   */
  FEMALE: "FEMALE",
  /**
   * 기타
   */
  OTHER: "OTHER"
};
var GiftCertificateType = {
  /**
   * 도서문화상품권
   * | KG이니시스
   */
  BOOKNLIFE: "BOOKNLIFE",
  /**
   * 스마트문상, (구)게임문화상품권
   */
  SMART_MUNSANG: "SMART_MUNSANG",
  /**
   * 컬쳐랜드 문화상품권
   */
  CULTURELAND: "CULTURELAND",
  /**
   * 문화상품권
   */
  CULTURE_GIFT: "CULTURE_GIFT"
};
var IssueBillingKeyUIType = { PAYPAL_RT: "PAYPAL_RT" };
var Locale = {
  /**
   * 한국어
   *
   * - KG이니시스
   * - 스마트로
   * - KSNET
   * - 웰컴페이먼츠 (PC)
   * - 한국결제네트웍스
   * - 엑심베이
   */
  KO_KR: "KO_KR",
  /**
   * 영어
   *
   * - KG이니시스
   * - 스마트로
   * - KSNET
   * - 웰컴페이먼츠 (PC)
   * - 한국결제네트웍스
   * - 엑심베이
   */
  EN_US: "EN_US",
  /**
   * 중국어 (중국 본토)
   *
   * - KG이니시스 (PC)
   * - 웰컴페이먼츠 (PC)
   * - 엑심베이
   */
  ZH_CN: "ZH_CN",
  /**
   * 중국어 (대만)
   *
   * - 엑심베이
   */
  ZH_TW: "ZH_TW",
  /**
   * 일본어
   *
   * - 엑심베이
   */
  JA_JP: "JA_JP",
  /**
   * 러시아어
   *
   * - 엑심베이
   */
  RU_RU: "RU_RU",
  /**
   * 타이어
   *
   * - 엑심베이
   */
  TH_TH: "TH_TH",
  /**
   * 베트남어
   *
   * - 엑심베이
   */
  VI_VN: "VI_VN"
};
var PaymentUIType = { PAYPAL_SPB: "PAYPAL_SPB" };
var PaymentPayMethod = {
  /**
   * 카드
   */
  CARD: "CARD",
  /**
   * 가상계좌
   */
  VIRTUAL_ACCOUNT: "VIRTUAL_ACCOUNT",
  /**
   * 계좌이체
   */
  TRANSFER: "TRANSFER",
  /**
   * 휴대폰 소액결제
   */
  MOBILE: "MOBILE",
  /**
   * 상품권
   */
  GIFT_CERTIFICATE: "GIFT_CERTIFICATE",
  /**
   * 간편 결제
   */
  EASY_PAY: "EASY_PAY",
  /**
   * 페이팔(SPB)
   */
  PAYPAL: "PAYPAL",
  /**
   * 알리페이
   */
  ALIPAY: "ALIPAY",
  /**
   * 편의점 결제
   */
  CONVENIENCE_STORE: "CONVENIENCE_STORE"
};
var PayMethod = PaymentPayMethod;
var PgProvider = {
  HTML5_INICIS: "HTML5_INICIS",
  PAYPAL: "PAYPAL",
  INICIS: "INICIS",
  DANAL: "DANAL",
  NICE: "NICE",
  DANAL_TPAY: "DANAL_TPAY",
  UPLUS: "UPLUS",
  NAVERPAY: "NAVERPAY",
  SETTLE: "SETTLE",
  KCP: "KCP",
  MOBILIANS: "MOBILIANS",
  KAKAOPAY: "KAKAOPAY",
  NAVERCO: "NAVERCO",
  KICC: "KICC",
  EXIMBAY: "EXIMBAY",
  SMILEPAY: "SMILEPAY",
  PAYCO: "PAYCO",
  KCP_BILLING: "KCP_BILLING",
  ALIPAY: "ALIPAY",
  CHAI: "CHAI",
  BLUEWALNUT: "BLUEWALNUT",
  SMARTRO: "SMARTRO",
  PAYMENTWALL: "PAYMENTWALL",
  TOSSPAYMENTS: "TOSSPAYMENTS",
  KCP_QUICK: "KCP_QUICK",
  DAOU: "DAOU",
  GALAXIA: "GALAXIA",
  TOSSPAY: "TOSSPAY",
  KCP_DIRECT: "KCP_DIRECT",
  SETTLE_ACC: "SETTLE_ACC",
  SETTLE_FIRM: "SETTLE_FIRM",
  INICIS_UNIFIED: "INICIS_UNIFIED",
  KSNET: "KSNET",
  PAYPAL_V2: "PAYPAL_V2",
  SMARTRO_V2: "SMARTRO_V2",
  NICE_V2: "NICE_V2",
  TOSS_BRANDPAY: "TOSS_BRANDPAY",
  WELCOME: "WELCOME",
  TOSSPAY_V2: "TOSSPAY_V2",
  INICIS_V2: "INICIS_V2",
  KPN: "KPN",
  KCP_V2: "KCP_V2",
  HYPHEN: "HYPHEN",
  EXIMBAY_V2: "EXIMBAY_V2"
};
var ProductType = {
  /**
   * 실물
   */
  REAL: "REAL",
  /**
   * 디지털
   */
  DIGITAL: "DIGITAL"
};
var TransactionType = {
  /**
   * 결제
   */
  PAYMENT: "PAYMENT",
  /**
   * 빌링키 발급
   */
  ISSUE_BILLING_KEY: "ISSUE_BILLING_KEY",
  /**
   * 본인 인증
   */
  IDENTITY_VERIFICATION: "IDENTITY_VERIFICATION",
  /**
   * 빌링키 발급 및 초회결제
   */
  ISSUE_BILLING_KEY_AND_PAY: "ISSUE_BILLING_KEY_AND_PAY"
};
var WindowType = {
  IFRAME: "IFRAME",
  POPUP: "POPUP",
  REDIRECTION: "REDIRECTION",
  UI: "UI"
};
var PaymentCurrency = Currency;
var InicisUnifiedDirectAgency = {
  /**
   * 페이코
   */
  PAYCO: "PAYCO",
  /**
   * 패스 (통신사)
   */
  PASS: "PASS",
  /**
   * 토스
   */
  TOSS: "TOSS",
  /**
   * 금융결제원
   */
  KFTC: "KFTC",
  /**
   * 카카오
   */
  KAKAO: "KAKAO",
  /**
   * 네이버
   */
  NAVER: "NAVER",
  /**
   * 삼성패스
   */
  SAMSUNG: "SAMSUNG",
  /**
   * 신한은행
   */
  SHINHAN: "SHINHAN",
  /**
   * 국민은행
   */
  KB: "KB",
  /**
   * 하나은행
   */
  HANA: "HANA",
  /**
   * 우리은행
   */
  WOORI: "WOORI",
  /**
   * 농협은행
   */
  NH: "NH",
  /**
   * 카카오뱅크
   */
  KAKAOBANK: "KAKAOBANK",
  /**
   * 휴대폰 인증, 별도 계약 필요
   */
  SMS: "SMS"
};
var InicisUnifiedFlgFixedUser = { Y: "Y", N: "N" };
var SmartroV2IsPwdPass = {
  /**
   * 비밀번호 설정 미사용
   */
  Y: "Y",
  /**
   * 비밀번호 설정 사용
   */
  N: "N"
};
var InicisV2CardUse = {
  /**
   * 개인카드만 선택 가능
   */
  percard: "percard",
  /**
   * 법인 카드만 선택 가능
   */
  cocard: "cocard"
};
var KcpV2BatchSocChoice = {
  /**
   * 주민번호만 표시
   */
  S: "S",
  /**
   * 사업자번호만 표시
   */
  C: "C"
};
var PaypalV2Country = {
  AL: "AL",
  DZ: "DZ",
  AD: "AD",
  AO: "AO",
  AI: "AI",
  AG: "AG",
  AR: "AR",
  AM: "AM",
  AW: "AW",
  AU: "AU",
  AT: "AT",
  AZ: "AZ",
  BS: "BS",
  BH: "BH",
  BB: "BB",
  BY: "BY",
  BE: "BE",
  BZ: "BZ",
  BJ: "BJ",
  BM: "BM",
  BT: "BT",
  BO: "BO",
  BA: "BA",
  BW: "BW",
  BR: "BR",
  VG: "VG",
  BN: "BN",
  BG: "BG",
  BF: "BF",
  BI: "BI",
  KH: "KH",
  CM: "CM",
  CA: "CA",
  CV: "CV",
  KY: "KY",
  TD: "TD",
  CL: "CL",
  CN: "CN",
  CO: "CO",
  KM: "KM",
  CG: "CG",
  CD: "CD",
  CK: "CK",
  CR: "CR",
  CI: "CI",
  HR: "HR",
  CY: "CY",
  CZ: "CZ",
  DK: "DK",
  DJ: "DJ",
  DM: "DM",
  DO: "DO",
  EC: "EC",
  EG: "EG",
  SV: "SV",
  ER: "ER",
  EE: "EE",
  ET: "ET",
  FK: "FK",
  FO: "FO",
  FJ: "FJ",
  FI: "FI",
  FR: "FR",
  GF: "GF",
  PF: "PF",
  GA: "GA",
  GM: "GM",
  GE: "GE",
  DE: "DE",
  GI: "GI",
  GR: "GR",
  GL: "GL",
  GD: "GD",
  GP: "GP",
  GT: "GT",
  GN: "GN",
  GW: "GW",
  GY: "GY",
  HN: "HN",
  HK: "HK",
  HU: "HU",
  IS: "IS",
  IN: "IN",
  ID: "ID",
  IE: "IE",
  IL: "IL",
  IT: "IT",
  JM: "JM",
  JP: "JP",
  JO: "JO",
  KZ: "KZ",
  KE: "KE",
  KI: "KI",
  KW: "KW",
  KG: "KG",
  LA: "LA",
  LV: "LV",
  LS: "LS",
  LI: "LI",
  LT: "LT",
  LU: "LU",
  MK: "MK",
  MG: "MG",
  MW: "MW",
  MY: "MY",
  MV: "MV",
  ML: "ML",
  MT: "MT",
  MH: "MH",
  MQ: "MQ",
  MR: "MR",
  MU: "MU",
  YT: "YT",
  MX: "MX",
  FM: "FM",
  MD: "MD",
  MC: "MC",
  MN: "MN",
  ME: "ME",
  MS: "MS",
  MA: "MA",
  MZ: "MZ",
  NA: "NA",
  NR: "NR",
  NP: "NP",
  NL: "NL",
  AN: "AN",
  NC: "NC",
  NZ: "NZ",
  NI: "NI",
  NE: "NE",
  NG: "NG",
  NU: "NU",
  NF: "NF",
  NO: "NO",
  OM: "OM",
  PW: "PW",
  PA: "PA",
  PG: "PG",
  PY: "PY",
  PE: "PE",
  PH: "PH",
  PN: "PN",
  PL: "PL",
  PT: "PT",
  QA: "QA",
  RE: "RE",
  RO: "RO",
  RU: "RU",
  RW: "RW",
  WS: "WS",
  SM: "SM",
  ST: "ST",
  SA: "SA",
  SN: "SN",
  RS: "RS",
  SC: "SC",
  SL: "SL",
  SG: "SG",
  SK: "SK",
  SI: "SI",
  SB: "SB",
  SO: "SO",
  ZA: "ZA",
  KR: "KR",
  ES: "ES",
  LK: "LK",
  SH: "SH",
  KN: "KN",
  LC: "LC",
  PM: "PM",
  VC: "VC",
  SR: "SR",
  SJ: "SJ",
  SZ: "SZ",
  SE: "SE",
  CH: "CH",
  TW: "TW",
  TJ: "TJ",
  TZ: "TZ",
  TH: "TH",
  TG: "TG",
  TO: "TO",
  TT: "TT",
  TN: "TN",
  TM: "TM",
  TC: "TC",
  TV: "TV",
  TR: "TR",
  UG: "UG",
  UA: "UA",
  AE: "AE",
  GB: "GB",
  US: "US",
  UY: "UY",
  VU: "VU",
  VA: "VA",
  VE: "VE",
  VN: "VN",
  WF: "WF",
  YE: "YE",
  ZM: "ZM",
  ZW: "ZW"
};
var PaypalV2PaymentSourcePaypalExperienceContextShippingPreference = {
  GET_FROM_FILE: "GET_FROM_FILE",
  NO_SHIPPING: "NO_SHIPPING",
  SET_PROVIDED_ADDRESS: "SET_PROVIDED_ADDRESS"
};
var PaypalV2PaymentSourcePaypalExperienceContextLandingPage = {
  LOGIN: "LOGIN",
  GUEST_CHECKOUT: "GUEST_CHECKOUT",
  NO_PREFERENCE: "NO_PREFERENCE"
};
var PaypalV2PaymentSourcePaypalExperienceContextPaymentMethodPreference = {
  UNRESTRICTED: "UNRESTRICTED",
  IMMEDIATE_PAYMENT_REQUIRED: "IMMEDIATE_PAYMENT_REQUIRED"
};
var KsnetSndQpayType = {
  /**
   * 간편 결제 표시
   */
  "1": "1",
  /**
   * 간편 결제 미표시
   */
  "0": "0"
};
var SmartroV2OpenType = { KR: "KR", EN: "EN" };
var NiceV2DisableScroll = { Y: "Y", N: "N" };
var NiceV2SkinType = {
  red: "red",
  green: "green",
  purple: "purple",
  gray: "gray",
  dark: "dark"
};
var NiceV2DirectCoupon = {
  /**
   * 사전 등록된 선 할인 쿠폰을 자동 적용
   */
  Y: "Y",
  /**
   * 쿠폰 미적용(기본값)
   */
  N: "N"
};
var NiceV2DirectShow = {
  /**
   * 계좌이체
   */
  BANK: "BANK",
  /**
   * 휴대폰 소액결제
   */
  CELLPHONE: "CELLPHONE"
};
var NiceV2SamPayMallType = {
  /**
   * 삼성페이 內 쇼핑
   */
  "01": "01",
  /**
   * 기타 (기본값)
   */
  "99": "99"
};
var TosspayV2CashReceiptTradeOption = {
  /**
   * 문화비
   */
  CULTURE: "CULTURE",
  /**
   * 일반 (기본값)
   */
  GENERAL: "GENERAL",
  /**
   * 교통비
   */
  PUBLIC_TP: "PUBLIC_TP"
};
var KpnCardSelect = {
  /**
   * 해외카드
   */
  GLOBAL: "GLOBAL",
  /**
   * 11Pay
   */
  "11PAY": "11PAY",
  /**
   * 구인증
   */
  LEGACY_AUTH: "LEGACY_AUTH",
  /**
   * 키인
   */
  KEY_IN: "KEY_IN"
};
var KcpV2ComplexPnt = { Y: "Y", N: "N" };
var KcpV2DispTax = { Y: "Y", N: "N", R: "R", E: "E" };
var NaverpayProductItemPayReferrer = {
  NAVER_BOOK: "NAVER_BOOK",
  NAVER_MUSIC: "NAVER_MUSIC",
  NAVER_SHOPPING: "NAVER_SHOPPING",
  NAVER_MAP: "NAVER_MAP",
  NAVER_PLACE: "NAVER_PLACE",
  SEARCH_AD: "SEARCH_AD",
  NAVER_SEARCH: "NAVER_SEARCH",
  BRAND_SEARCH: "BRAND_SEARCH",
  PARTNER_DIRECT: "PARTNER_DIRECT",
  ETC: "ETC"
};
var TossBrandpayWidgetOptionsMethodType = {
  CARD: "카드",
  ACCOUNT: "계좌"
};
var EximbayV2TaxReceiptStatus = { Y: "Y", N: "N" };
var EximbayV2SettingsCallFromApp = { Y: "Y", N: "N" };
var TossBrandpayBrandpayOptionsUiButtonStyle = {
  /**
   * 모서리가 둥글고 주변에 여백을 가진 버튼(기본값)
   */
  default: "default",
  /**
   * 하단 영역이 전부 채워지는 형태의 버튼
   */
  full: "full"
};
var index$1 = {
  __proto__: null,
  Bank,
  BillingKeyAndPayMethod,
  BillingKeyMethod,
  CardCompany,
  Carrier,
  CashReceiptType,
  Country,
  Currency,
  EasyPayPaymentMethod,
  EasyPayProvider,
  EximbayV2SettingsCallFromApp,
  EximbayV2TaxReceiptStatus,
  Gender,
  GiftCertificateType,
  InicisUnifiedDirectAgency,
  InicisUnifiedFlgFixedUser,
  InicisV2CardUse,
  IssueBillingKeyUIType,
  KcpV2BatchSocChoice,
  KcpV2ComplexPnt,
  KcpV2DispTax,
  KpnCardSelect,
  KsnetSndQpayType,
  Locale,
  NaverpayProductItemPayReferrer,
  NiceV2DirectCoupon,
  NiceV2DirectShow,
  NiceV2DisableScroll,
  NiceV2SamPayMallType,
  NiceV2SkinType,
  PayMethod,
  PaymentCurrency,
  PaymentPayMethod,
  PaymentUIType,
  PaypalV2Country,
  PaypalV2PaymentSourcePaypalExperienceContextLandingPage,
  PaypalV2PaymentSourcePaypalExperienceContextPaymentMethodPreference,
  PaypalV2PaymentSourcePaypalExperienceContextShippingPreference,
  PgProvider,
  ProductType,
  SmartroV2IsPwdPass,
  SmartroV2OpenType,
  TossBrandpayBrandpayOptionsUiButtonStyle,
  TossBrandpayWidgetOptionsMethodType,
  TosspayV2CashReceiptTradeOption,
  TransactionType,
  WindowType
};
var CheckoutServiceErrorCode = {
  BadRequest: "BadRequest",
  ParseChannelFailed: "ParseChannelFailed",
  ParseIdentityVerificationPrepareResponseFailed: "ParseIdentityVerificationPrepareResponseFailed",
  ParseIssuePrepareResponseFailed: "ParseIssuePrepareResponseFailed",
  ParsePgRawIdentityVerificationResponseFailed: "ParsePgRawIdentityVerificationResponseFailed",
  ParsePgRawIssueBillingKeyResponseFailed: "ParsePgRawIssueBillingKeyResponseFailed",
  ParsePgRawResponseFailed: "ParsePgRawResponseFailed",
  ParsePrepareResponseFailed: "ParsePrepareResponseFailed"
};
var GrpcErrorCode = {
  /**
   * 0/200
   */
  Ok: "Ok",
  /**
   * 1/422
   */
  Cancelled: "Cancelled",
  /**
   * 2/500
   */
  Unknown: "Unknown",
  /**
   * 3/400
   */
  InvalidArgument: "InvalidArgument",
  /**
   * 4/504
   */
  DeadlineExceeded: "DeadlineExceeded",
  /**
   * 5/404
   */
  NotFound: "NotFound",
  /**
   * 6/409
   */
  AlreadyExists: "AlreadyExists",
  /**
   * 7/403
   */
  PermissionDenied: "PermissionDenied",
  /**
   * 8/429
   */
  ResourceExhausted: "ResourceExhausted",
  /**
   * 9/400
   */
  FailedPrecondition: "FailedPrecondition",
  /**
   * 10/409
   */
  Aborted: "Aborted",
  /**
   * 11/400
   */
  OutOfRange: "OutOfRange",
  /**
   * 2/501
   */
  Unimplemented: "Unimplemented",
  /**
   * 13/500
   */
  Internal: "Internal",
  /**
   * 14/503
   */
  Unavailable: "Unavailable",
  /**
   * 15/500
   */
  DataLoss: "DataLoss",
  /**
   * 16/401
   */
  Unauthenticated: "Unauthenticated"
};
var TxServiceIdentityVerificationErrorCode = {
  RequestParseFailed: "RequestParseFailed",
  InvalidEntityState: "InvalidEntityState",
  StoreNotFound: "StoreNotFound",
  ChannelNotFound: "ChannelNotFound",
  PGProviderError: "PGProviderError",
  IdentityVerificationAlreadyVerified: "IdentityVerificationAlreadyVerified",
  AllChannelsNotSatisfied: "AllChannelsNotSatisfied",
  UnknownError: "UnknownError"
};
var TxServiceIssueErrorCode = {
  RequestParseFailed: "RequestParseFailed",
  InvalidEntityState: "InvalidEntityState",
  ConfirmUrlRequired: "ConfirmUrlRequired",
  StoreNotFound: "StoreNotFound",
  ChannelNotFound: "ChannelNotFound",
  PGProviderError: "PGProviderError",
  AllChannelsNotSatisfied: "AllChannelsNotSatisfied",
  BillingKeyNotFound: "BillingKeyNotFound",
  UnknownError: "UnknownError"
};
var TxServicePayErrorCode = {
  RequestParseFailed: "RequestParseFailed",
  InvalidEntityState: "InvalidEntityState",
  ConfirmUrlRequired: "ConfirmUrlRequired",
  StoreNotFound: "StoreNotFound",
  ChannelNotFound: "ChannelNotFound",
  PGProviderError: "PGProviderError",
  PaymentNotFound: "PaymentNotFound",
  PaymentAlreadyPaid: "PaymentAlreadyPaid",
  TransactionNotFound: "TransactionNotFound",
  AllChannelsNotSatisfied: "AllChannelsNotSatisfied",
  AmountNotEqualToPredefined: "AmountNotEqualToPredefined",
  ConfirmProcessFailed: "ConfirmProcessFailed",
  UnknownError: "UnknownError"
};
function isIdentityVerificationError(error) {
  return isPortOneError(error) && error.__portOneErrorType === "IdentityVerificationError";
}
var IdentityVerificationError = class extends Error {
  static [Symbol.hasInstance](instance) {
    return isIdentityVerificationError(instance);
  }
  constructor({ code, message, identityVerificationId, identityVerificationTxId, pgCode, pgMessage }) {
    super(message);
    this.__portOneErrorType = "IdentityVerificationError";
    this.transactionType = "IDENTITY_VERIFICATION";
    this.code = code;
    this.message = message;
    this.identityVerificationId = identityVerificationId;
    this.identityVerificationTxId = identityVerificationTxId;
    this.pgCode = pgCode;
    this.pgMessage = pgMessage;
  }
};
function isIssueBillingKeyAndPayError(error) {
  return isPortOneError(error) && error.__portOneErrorType === "IssueBillingKeyAndPayError";
}
var IssueBillingKeyAndPayError = class extends Error {
  static [Symbol.hasInstance](instance) {
    return isIssueBillingKeyAndPayError(instance);
  }
  constructor({ txId, paymentId, billingKey, code, message, pgCode, pgMessage }) {
    super(message);
    this.__portOneErrorType = "IssueBillingKeyAndPayError";
    this.transactionType = "ISSUE_BILLING_KEY_AND_PAY";
    this.txId = txId;
    this.paymentId = paymentId;
    this.billingKey = billingKey;
    this.code = code;
    this.message = message;
    this.pgCode = pgCode;
    this.pgMessage = pgMessage;
  }
};
function isIssueBillingKeyError(error) {
  return isPortOneError(error) && error.__portOneErrorType === "IssueBillingKeyError";
}
var IssueBillingKeyError = class extends Error {
  static [Symbol.hasInstance](instance) {
    return isIssueBillingKeyError(instance);
  }
  constructor({ code, message, billingKey, pgCode, pgMessage }) {
    super(message);
    this.__portOneErrorType = "IssueBillingKeyError";
    this.transactionType = "ISSUE_BILLING_KEY";
    this.code = code;
    this.message = message;
    this.billingKey = billingKey;
    this.pgCode = pgCode;
    this.pgMessage = pgMessage;
  }
};
function isModuleError(error) {
  return isPortOneError(error) && error.__portOneErrorType === "ModuleError";
}
var ModuleError = class extends Error {
  static [Symbol.hasInstance](instance) {
    return isModuleError(instance);
  }
  constructor({ code, message }) {
    super(message);
    this.__portOneErrorType = "ModuleError";
    this.code = code;
    this.message = message;
  }
};
function isPaymentError(error) {
  return isPortOneError(error) && error.__portOneErrorType === "PaymentError";
}
var PaymentError = class extends Error {
  static [Symbol.hasInstance](instance) {
    return isPaymentError(instance);
  }
  constructor({ code, message, txId, paymentId, pgCode, pgMessage }) {
    super(message);
    this.__portOneErrorType = "PaymentError";
    this.transactionType = "PAYMENT";
    this.code = code;
    this.message = message;
    this.txId = txId;
    this.paymentId = paymentId;
    this.pgCode = pgCode;
    this.pgMessage = pgMessage;
  }
};
function isLoadIssueBillingKeyUIError(error) {
  return isPortOneError(error) && error.__portOneErrorType === "LoadIssueBillingKeyUIError";
}
var LoadIssueBillingKeyUIError = class extends Error {
  static [Symbol.hasInstance](instance) {
    return isLoadIssueBillingKeyUIError(instance);
  }
  constructor({ code, message }) {
    super(message);
    this.__portOneErrorType = "LoadIssueBillingKeyUIError";
    this.transactionType = "ISSUE_BILLING_KEY";
    this.code = code;
    this.message = message;
  }
};
function isLoadPaymentUIError(error) {
  return isPortOneError(error) && error.__portOneErrorType === "LoadPaymentUIError";
}
var LoadPaymentUIError = class extends Error {
  static [Symbol.hasInstance](instance) {
    return isLoadPaymentUIError(instance);
  }
  constructor({ code, message }) {
    super(message);
    this.__portOneErrorType = "LoadPaymentUIError";
    this.transactionType = "PAYMENT";
    this.code = code;
    this.message = message;
  }
};
function isPortOneError(error) {
  return error != null && typeof error === "object" && "__portOneErrorType" in error && typeof error.__portOneErrorType === "string";
}
var index = {
  __proto__: null,
  CheckoutServiceErrorCode,
  GrpcErrorCode,
  IdentityVerificationError,
  IssueBillingKeyAndPayError,
  IssueBillingKeyError,
  LoadIssueBillingKeyUIError,
  LoadPaymentUIError,
  ModuleError,
  PaymentError,
  TxServiceIdentityVerificationErrorCode,
  TxServiceIssueErrorCode,
  TxServicePayErrorCode,
  isIdentityVerificationError,
  isIssueBillingKeyAndPayError,
  isIssueBillingKeyError,
  isLoadIssueBillingKeyUIError,
  isLoadPaymentUIError,
  isModuleError,
  isPaymentError,
  isPortOneError
};
var PortOne = {
  requestPayment,
  requestIdentityVerification,
  requestIssueBillingKeyAndPay,
  requestIssueBillingKey,
  loadPaymentUI,
  loadIssueBillingKeyUI,
  updateLoadPaymentUIRequest,
  updateLoadIssueBillingKeyUIRequest
};
export {
  Bank,
  BillingKeyAndPayMethod,
  BillingKeyMethod,
  CardCompany,
  Carrier,
  CashReceiptType,
  CheckoutServiceErrorCode,
  Country,
  Currency,
  EasyPayPaymentMethod,
  EasyPayProvider,
  index$1 as Entity,
  EximbayV2SettingsCallFromApp,
  EximbayV2TaxReceiptStatus,
  Gender,
  GiftCertificateType,
  GrpcErrorCode,
  IdentityVerificationError,
  InicisUnifiedDirectAgency,
  InicisUnifiedFlgFixedUser,
  InicisV2CardUse,
  IssueBillingKeyAndPayError,
  IssueBillingKeyError,
  IssueBillingKeyUIType,
  KcpV2BatchSocChoice,
  KcpV2ComplexPnt,
  KcpV2DispTax,
  KpnCardSelect,
  KsnetSndQpayType,
  LoadIssueBillingKeyUIError,
  LoadPaymentUIError,
  Locale,
  ModuleError,
  NaverpayProductItemPayReferrer,
  NiceV2DirectCoupon,
  NiceV2DirectShow,
  NiceV2DisableScroll,
  NiceV2SamPayMallType,
  NiceV2SkinType,
  PayMethod,
  PaymentCurrency,
  PaymentError,
  PaymentPayMethod,
  PaymentUIType,
  PaypalV2Country,
  PaypalV2PaymentSourcePaypalExperienceContextLandingPage,
  PaypalV2PaymentSourcePaypalExperienceContextPaymentMethodPreference,
  PaypalV2PaymentSourcePaypalExperienceContextShippingPreference,
  PgProvider,
  ProductType,
  SmartroV2IsPwdPass,
  SmartroV2OpenType,
  TossBrandpayBrandpayOptionsUiButtonStyle,
  TossBrandpayWidgetOptionsMethodType,
  TosspayV2CashReceiptTradeOption,
  TransactionType,
  TxServiceIdentityVerificationErrorCode,
  TxServiceIssueErrorCode,
  TxServicePayErrorCode,
  WindowType,
  setPortOneJsSdkUrl as __INTERNAL__setPortOneSdkUrl,
  PortOne as default,
  index as errors,
  isIdentityVerificationError,
  isIssueBillingKeyAndPayError,
  isIssueBillingKeyError,
  isLoadIssueBillingKeyUIError,
  isLoadPaymentUIError,
  isModuleError,
  isPaymentError,
  isPortOneError,
  loadIssueBillingKeyUI,
  loadPaymentUI,
  requestIdentityVerification,
  requestIssueBillingKey,
  requestIssueBillingKeyAndPay,
  requestPayment,
  updateLoadIssueBillingKeyUIRequest,
  updateLoadPaymentUIRequest
};
//# sourceMappingURL=@portone_browser-sdk_v2.js.map
